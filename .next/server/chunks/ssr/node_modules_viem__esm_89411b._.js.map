{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"version.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/version.ts"],"sourcesContent":["export const version = '2.23.1'\n"],"names":[],"mappings":";;;AAAO,MAAM,OAAO,GAAG,QAAQ,CAAA","ignoreList":[0]}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"file":"base.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/base.ts"],"sourcesContent":["import { version } from './version.js'\n\ntype ErrorConfig = {\n  getDocsUrl?: ((args: BaseErrorParameters) => string | undefined) | undefined\n  version?: string | undefined\n}\n\nlet errorConfig: ErrorConfig = {\n  getDocsUrl: ({\n    docsBaseUrl,\n    docsPath = '',\n    docsSlug,\n  }: BaseErrorParameters) =>\n    docsPath\n      ? `${docsBaseUrl ?? 'https://viem.sh'}${docsPath}${\n          docsSlug ? `#${docsSlug}` : ''\n        }`\n      : undefined,\n  version: `viem@${version}`,\n}\n\nexport function setErrorConfig(config: ErrorConfig) {\n  errorConfig = config\n}\n\ntype BaseErrorParameters = {\n  cause?: BaseError | Error | undefined\n  details?: string | undefined\n  docsBaseUrl?: string | undefined\n  docsPath?: string | undefined\n  docsSlug?: string | undefined\n  metaMessages?: string[] | undefined\n  name?: string | undefined\n}\n\nexport type BaseErrorType = BaseError & { name: 'BaseError' }\nexport class BaseError extends Error {\n  details: string\n  docsPath?: string | undefined\n  metaMessages?: string[] | undefined\n  shortMessage: string\n  version: string\n\n  override name = 'BaseError'\n\n  constructor(shortMessage: string, args: BaseErrorParameters = {}) {\n    const details = (() => {\n      if (args.cause instanceof BaseError) return args.cause.details\n      if (args.cause?.message) return args.cause.message\n      return args.details!\n    })()\n    const docsPath = (() => {\n      if (args.cause instanceof BaseError)\n        return args.cause.docsPath || args.docsPath\n      return args.docsPath\n    })()\n    const docsUrl = errorConfig.getDocsUrl?.({ ...args, docsPath })\n\n    const message = [\n      shortMessage || 'An error occurred.',\n      '',\n      ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n      ...(docsUrl ? [`Docs: ${docsUrl}`] : []),\n      ...(details ? [`Details: ${details}`] : []),\n      ...(errorConfig.version ? [`Version: ${errorConfig.version}`] : []),\n    ].join('\\n')\n\n    super(message, args.cause ? { cause: args.cause } : undefined)\n\n    this.details = details\n    this.docsPath = docsPath\n    this.metaMessages = args.metaMessages\n    this.name = args.name ?? this.name\n    this.shortMessage = shortMessage\n    this.version = version\n  }\n\n  walk(): Error\n  walk(fn: (err: unknown) => boolean): Error | null\n  walk(fn?: any): any {\n    return walk(this, fn)\n  }\n}\n\nfunction walk(\n  err: unknown,\n  fn?: ((err: unknown) => boolean) | undefined,\n): unknown {\n  if (fn?.(err)) return err\n  if (\n    err &&\n    typeof err === 'object' &&\n    'cause' in err &&\n    err.cause !== undefined\n  )\n    return walk(err.cause, fn)\n  return fn ? null : err\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"file":"data.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/data.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type SliceOffsetOutOfBoundsErrorType = SliceOffsetOutOfBoundsError & {\n  name: 'SliceOffsetOutOfBoundsError'\n}\nexport class SliceOffsetOutOfBoundsError extends BaseError {\n  constructor({\n    offset,\n    position,\n    size,\n  }: { offset: number; position: 'start' | 'end'; size: number }) {\n    super(\n      `Slice ${\n        position === 'start' ? 'starting' : 'ending'\n      } at offset \"${offset}\" is out-of-bounds (size: ${size}).`,\n      { name: 'SliceOffsetOutOfBoundsError' },\n    )\n  }\n}\n\nexport type SizeExceedsPaddingSizeErrorType = SizeExceedsPaddingSizeError & {\n  name: 'SizeExceedsPaddingSizeError'\n}\nexport class SizeExceedsPaddingSizeError extends BaseError {\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'hex' | 'bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`,\n      { name: 'SizeExceedsPaddingSizeError' },\n    )\n  }\n}\n\nexport type InvalidBytesLengthErrorType = InvalidBytesLengthError & {\n  name: 'InvalidBytesLengthError'\n}\nexport class InvalidBytesLengthError extends BaseError {\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'hex' | 'bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} is expected to be ${targetSize} ${type} long, but is ${size} ${type} long.`,\n      { name: 'InvalidBytesLengthError' },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAK/B,MAAO,2BAA4B,wJAAQ,YAAS;IACxD,YAAY,EACV,MAAM,EACN,QAAQ,EACR,IAAI,EACwD,CAAA;QAC5D,KAAK,CACH,CAAA,MAAA,EACE,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QACtC,CAAA,YAAA,EAAe,MAAM,CAAA,0BAAA,EAA6B,IAAI,CAAA,EAAA,CAAI,EAC1D;YAAE,IAAI,EAAE,6BAA6B;QAAA,CAAE,CACxC,CAAA;IACH,CAAC;CACF;AAKK,MAAO,2BAA4B,wJAAQ,YAAS;IACxD,YAAY,EACV,IAAI,EACJ,UAAU,EACV,IAAI,EAKL,CAAA;QACC,KAAK,CACH,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CACnC,KAAK,CAAC,CAAC,CAAC,CACR,WAAW,EAAE,CAAA,OAAA,EAAU,IAAI,CAAA,wBAAA,EAA2B,UAAU,CAAA,EAAA,CAAI,EACvE;YAAE,IAAI,EAAE,6BAA6B;QAAA,CAAE,CACxC,CAAA;IACH,CAAC;CACF;AAKK,MAAO,uBAAwB,wJAAQ,YAAS;IACpD,YAAY,EACV,IAAI,EACJ,UAAU,EACV,IAAI,EAKL,CAAA;QACC,KAAK,CACH,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CACnC,KAAK,CAAC,CAAC,CAAC,CACR,WAAW,EAAE,CAAA,mBAAA,EAAsB,UAAU,CAAA,CAAA,EAAI,IAAI,CAAA,cAAA,EAAiB,IAAI,CAAA,CAAA,EAAI,IAAI,CAAA,MAAA,CAAQ,EAC7F;YAAE,IAAI,EAAE,yBAAyB;QAAA,CAAE,CACpC,CAAA;IACH,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"file":"encoding.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/encoding.ts"],"sourcesContent":["import type { ByteArray, Hex } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type IntegerOutOfRangeErrorType = IntegerOutOfRangeError & {\n  name: 'IntegerOutOfRangeError'\n}\nexport class IntegerOutOfRangeError extends BaseError {\n  constructor({\n    max,\n    min,\n    signed,\n    size,\n    value,\n  }: {\n    max?: string | undefined\n    min: string\n    signed?: boolean | undefined\n    size?: number | undefined\n    value: string\n  }) {\n    super(\n      `Number \"${value}\" is not in safe ${\n        size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''\n      }integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`,\n      { name: 'IntegerOutOfRangeError' },\n    )\n  }\n}\n\nexport type InvalidBytesBooleanErrorType = InvalidBytesBooleanError & {\n  name: 'InvalidBytesBooleanError'\n}\nexport class InvalidBytesBooleanError extends BaseError {\n  constructor(bytes: ByteArray) {\n    super(\n      `Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`,\n      {\n        name: 'InvalidBytesBooleanError',\n      },\n    )\n  }\n}\n\nexport type InvalidHexBooleanErrorType = InvalidHexBooleanError & {\n  name: 'InvalidHexBooleanError'\n}\nexport class InvalidHexBooleanError extends BaseError {\n  constructor(hex: Hex) {\n    super(\n      `Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`,\n      { name: 'InvalidHexBooleanError' },\n    )\n  }\n}\n\nexport type InvalidHexValueErrorType = InvalidHexValueError & {\n  name: 'InvalidHexValueError'\n}\nexport class InvalidHexValueError extends BaseError {\n  constructor(value: Hex) {\n    super(\n      `Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`,\n      { name: 'InvalidHexValueError' },\n    )\n  }\n}\n\nexport type SizeOverflowErrorType = SizeOverflowError & {\n  name: 'SizeOverflowError'\n}\nexport class SizeOverflowError extends BaseError {\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\n    super(\n      `Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`,\n      { name: 'SizeOverflowError' },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAEA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAK/B,MAAO,sBAAuB,wJAAQ,YAAS;IACnD,YAAY,EACV,GAAG,EACH,GAAG,EACH,MAAM,EACN,IAAI,EACJ,KAAK,EAON,CAAA;QACC,KAAK,CACH,CAAA,QAAA,EAAW,KAAK,CAAA,iBAAA,EACd,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAA,KAAA,EAAQ,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAA,CAAA,CAAG,CAAC,CAAC,CAAC,EAChE,CAAA,cAAA,EAAiB,GAAG,CAAC,CAAC,CAAC,CAAA,CAAA,EAAI,GAAG,CAAA,IAAA,EAAO,GAAG,CAAA,CAAA,CAAG,CAAC,CAAC,CAAC,CAAA,OAAA,EAAU,GAAG,CAAA,CAAA,CAAG,EAAE,EAChE;YAAE,IAAI,EAAE,wBAAwB;QAAA,CAAE,CACnC,CAAA;IACH,CAAC;CACF;AAKK,MAAO,wBAAyB,wJAAQ,YAAS;IACrD,YAAY,KAAgB,CAAA;QAC1B,KAAK,CACH,CAAA,aAAA,EAAgB,KAAK,CAAA,8FAAA,CAAgG,EACrH;YACE,IAAI,EAAE,0BAA0B;SACjC,CACF,CAAA;IACH,CAAC;CACF;AAKK,MAAO,sBAAuB,wJAAQ,YAAS;IACnD,YAAY,GAAQ,CAAA;QAClB,KAAK,CACH,CAAA,WAAA,EAAc,GAAG,CAAA,8EAAA,CAAgF,EACjG;YAAE,IAAI,EAAE,wBAAwB;QAAA,CAAE,CACnC,CAAA;IACH,CAAC;CACF;AAKK,MAAO,oBAAqB,wJAAQ,YAAS;IACjD,YAAY,KAAU,CAAA;QACpB,KAAK,CACH,CAAA,WAAA,EAAc,KAAK,CAAA,oBAAA,EAAuB,KAAK,CAAC,MAAM,CAAA,6BAAA,CAA+B,EACrF;YAAE,IAAI,EAAE,sBAAsB;QAAA,CAAE,CACjC,CAAA;IACH,CAAC;CACF;AAKK,MAAO,iBAAkB,wJAAQ,YAAS;IAC9C,YAAY,EAAE,SAAS,EAAE,OAAO,EAA0C,CAAA;QACxE,KAAK,CACH,CAAA,mBAAA,EAAsB,OAAO,CAAA,oBAAA,EAAuB,SAAS,CAAA,OAAA,CAAS,EACtE;YAAE,IAAI,EAAE,mBAAmB;QAAA,CAAE,CAC9B,CAAA;IACH,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"file":"abi.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/abi.ts"],"sourcesContent":["import type { Abi, AbiEvent, AbiParameter } from 'abitype'\n\nimport type { Hex } from '../types/misc.js'\nimport { formatAbiItem, formatAbiParams } from '../utils/abi/formatAbiItem.js'\nimport { size } from '../utils/data/size.js'\n\nimport { BaseError } from './base.js'\n\nexport type AbiConstructorNotFoundErrorType = AbiConstructorNotFoundError & {\n  name: 'AbiConstructorNotFoundError'\n}\nexport class AbiConstructorNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath: string }) {\n    super(\n      [\n        'A constructor was not found on the ABI.',\n        'Make sure you are using the correct ABI and that the constructor exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiConstructorNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiConstructorParamsNotFoundErrorType =\n  AbiConstructorParamsNotFoundError & {\n    name: 'AbiConstructorParamsNotFoundError'\n  }\n\nexport class AbiConstructorParamsNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath: string }) {\n    super(\n      [\n        'Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.',\n        'Make sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiConstructorParamsNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiDecodingDataSizeInvalidErrorType =\n  AbiDecodingDataSizeInvalidError & {\n    name: 'AbiDecodingDataSizeInvalidError'\n  }\nexport class AbiDecodingDataSizeInvalidError extends BaseError {\n  constructor({ data, size }: { data: Hex; size: number }) {\n    super(\n      [\n        `Data size of ${size} bytes is invalid.`,\n        'Size must be in increments of 32 bytes (size % 32 === 0).',\n      ].join('\\n'),\n      {\n        metaMessages: [`Data: ${data} (${size} bytes)`],\n        name: 'AbiDecodingDataSizeInvalidError',\n      },\n    )\n  }\n}\n\nexport type AbiDecodingDataSizeTooSmallErrorType =\n  AbiDecodingDataSizeTooSmallError & {\n    name: 'AbiDecodingDataSizeTooSmallError'\n  }\nexport class AbiDecodingDataSizeTooSmallError extends BaseError {\n  data: Hex\n  params: readonly AbiParameter[]\n  size: number\n\n  constructor({\n    data,\n    params,\n    size,\n  }: { data: Hex; params: readonly AbiParameter[]; size: number }) {\n    super(\n      [`Data size of ${size} bytes is too small for given parameters.`].join(\n        '\\n',\n      ),\n      {\n        metaMessages: [\n          `Params: (${formatAbiParams(params, { includeName: true })})`,\n          `Data:   ${data} (${size} bytes)`,\n        ],\n        name: 'AbiDecodingDataSizeTooSmallError',\n      },\n    )\n\n    this.data = data\n    this.params = params\n    this.size = size\n  }\n}\n\nexport type AbiDecodingZeroDataErrorType = AbiDecodingZeroDataError & {\n  name: 'AbiDecodingZeroDataError'\n}\nexport class AbiDecodingZeroDataError extends BaseError {\n  constructor() {\n    super('Cannot decode zero data (\"0x\") with ABI parameters.', {\n      name: 'AbiDecodingZeroDataError',\n    })\n  }\n}\n\nexport type AbiEncodingArrayLengthMismatchErrorType =\n  AbiEncodingArrayLengthMismatchError & {\n    name: 'AbiEncodingArrayLengthMismatchError'\n  }\nexport class AbiEncodingArrayLengthMismatchError extends BaseError {\n  constructor({\n    expectedLength,\n    givenLength,\n    type,\n  }: { expectedLength: number; givenLength: number; type: string }) {\n    super(\n      [\n        `ABI encoding array length mismatch for type ${type}.`,\n        `Expected length: ${expectedLength}`,\n        `Given length: ${givenLength}`,\n      ].join('\\n'),\n      { name: 'AbiEncodingArrayLengthMismatchError' },\n    )\n  }\n}\n\nexport type AbiEncodingBytesSizeMismatchErrorType =\n  AbiEncodingBytesSizeMismatchError & {\n    name: 'AbiEncodingBytesSizeMismatchError'\n  }\nexport class AbiEncodingBytesSizeMismatchError extends BaseError {\n  constructor({ expectedSize, value }: { expectedSize: number; value: Hex }) {\n    super(\n      `Size of bytes \"${value}\" (bytes${size(\n        value,\n      )}) does not match expected size (bytes${expectedSize}).`,\n      { name: 'AbiEncodingBytesSizeMismatchError' },\n    )\n  }\n}\n\nexport type AbiEncodingLengthMismatchErrorType =\n  AbiEncodingLengthMismatchError & {\n    name: 'AbiEncodingLengthMismatchError'\n  }\nexport class AbiEncodingLengthMismatchError extends BaseError {\n  constructor({\n    expectedLength,\n    givenLength,\n  }: { expectedLength: number; givenLength: number }) {\n    super(\n      [\n        'ABI encoding params/values length mismatch.',\n        `Expected length (params): ${expectedLength}`,\n        `Given length (values): ${givenLength}`,\n      ].join('\\n'),\n      { name: 'AbiEncodingLengthMismatchError' },\n    )\n  }\n}\n\nexport type AbiErrorInputsNotFoundErrorType = AbiErrorInputsNotFoundError & {\n  name: 'AbiErrorInputsNotFoundError'\n}\nexport class AbiErrorInputsNotFoundError extends BaseError {\n  constructor(errorName: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Arguments (\\`args\\`) were provided to \"${errorName}\", but \"${errorName}\" on the ABI does not contain any parameters (\\`inputs\\`).`,\n        'Cannot encode error result without knowing what the parameter types are.',\n        'Make sure you are using the correct ABI and that the inputs exist on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiErrorInputsNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiErrorNotFoundErrorType = AbiErrorNotFoundError & {\n  name: 'AbiErrorNotFoundError'\n}\nexport class AbiErrorNotFoundError extends BaseError {\n  constructor(\n    errorName?: string | undefined,\n    { docsPath }: { docsPath?: string | undefined } = {},\n  ) {\n    super(\n      [\n        `Error ${errorName ? `\"${errorName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiErrorNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiErrorSignatureNotFoundErrorType =\n  AbiErrorSignatureNotFoundError & {\n    name: 'AbiErrorSignatureNotFoundError'\n  }\nexport class AbiErrorSignatureNotFoundError extends BaseError {\n  signature: Hex\n\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded error signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n        `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiErrorSignatureNotFoundError',\n      },\n    )\n    this.signature = signature\n  }\n}\n\nexport type AbiEventSignatureEmptyTopicsErrorType =\n  AbiEventSignatureEmptyTopicsError & {\n    name: 'AbiEventSignatureEmptyTopicsError'\n  }\nexport class AbiEventSignatureEmptyTopicsError extends BaseError {\n  constructor({ docsPath }: { docsPath: string }) {\n    super('Cannot extract event signature from empty topics.', {\n      docsPath,\n      name: 'AbiEventSignatureEmptyTopicsError',\n    })\n  }\n}\n\nexport type AbiEventSignatureNotFoundErrorType =\n  AbiEventSignatureNotFoundError & {\n    name: 'AbiEventSignatureNotFoundError'\n  }\nexport class AbiEventSignatureNotFoundError extends BaseError {\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded event signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the event exists on it.',\n        `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiEventSignatureNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiEventNotFoundErrorType = AbiEventNotFoundError & {\n  name: 'AbiEventNotFoundError'\n}\nexport class AbiEventNotFoundError extends BaseError {\n  constructor(\n    eventName?: string | undefined,\n    { docsPath }: { docsPath?: string | undefined } = {},\n  ) {\n    super(\n      [\n        `Event ${eventName ? `\"${eventName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the event exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiEventNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiFunctionNotFoundErrorType = AbiFunctionNotFoundError & {\n  name: 'AbiFunctionNotFoundError'\n}\nexport class AbiFunctionNotFoundError extends BaseError {\n  constructor(\n    functionName?: string | undefined,\n    { docsPath }: { docsPath?: string | undefined } = {},\n  ) {\n    super(\n      [\n        `Function ${functionName ? `\"${functionName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the function exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiFunctionNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiFunctionOutputsNotFoundErrorType =\n  AbiFunctionOutputsNotFoundError & {\n    name: 'AbiFunctionOutputsNotFoundError'\n  }\nexport class AbiFunctionOutputsNotFoundError extends BaseError {\n  constructor(functionName: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Function \"${functionName}\" does not contain any \\`outputs\\` on ABI.`,\n        'Cannot decode function result without knowing what the parameter types are.',\n        'Make sure you are using the correct ABI and that the function exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiFunctionOutputsNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiFunctionSignatureNotFoundErrorType =\n  AbiFunctionSignatureNotFoundError & {\n    name: 'AbiFunctionSignatureNotFoundError'\n  }\nexport class AbiFunctionSignatureNotFoundError extends BaseError {\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded function signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the function exists on it.',\n        `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiFunctionSignatureNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiItemAmbiguityErrorType = AbiItemAmbiguityError & {\n  name: 'AbiItemAmbiguityError'\n}\nexport class AbiItemAmbiguityError extends BaseError {\n  constructor(\n    x: { abiItem: Abi[number]; type: string },\n    y: { abiItem: Abi[number]; type: string },\n  ) {\n    super('Found ambiguous types in overloaded ABI items.', {\n      metaMessages: [\n        `\\`${x.type}\\` in \\`${formatAbiItem(x.abiItem)}\\`, and`,\n        `\\`${y.type}\\` in \\`${formatAbiItem(y.abiItem)}\\``,\n        '',\n        'These types encode differently and cannot be distinguished at runtime.',\n        'Remove one of the ambiguous items in the ABI.',\n      ],\n      name: 'AbiItemAmbiguityError',\n    })\n  }\n}\n\nexport type BytesSizeMismatchErrorType = BytesSizeMismatchError & {\n  name: 'BytesSizeMismatchError'\n}\nexport class BytesSizeMismatchError extends BaseError {\n  constructor({\n    expectedSize,\n    givenSize,\n  }: { expectedSize: number; givenSize: number }) {\n    super(`Expected bytes${expectedSize}, got bytes${givenSize}.`, {\n      name: 'BytesSizeMismatchError',\n    })\n  }\n}\n\nexport type DecodeLogDataMismatchErrorType = DecodeLogDataMismatch & {\n  name: 'DecodeLogDataMismatch'\n}\nexport class DecodeLogDataMismatch extends BaseError {\n  abiItem: AbiEvent\n  data: Hex\n  params: readonly AbiParameter[]\n  size: number\n\n  constructor({\n    abiItem,\n    data,\n    params,\n    size,\n  }: {\n    abiItem: AbiEvent\n    data: Hex\n    params: readonly AbiParameter[]\n    size: number\n  }) {\n    super(\n      [\n        `Data size of ${size} bytes is too small for non-indexed event parameters.`,\n      ].join('\\n'),\n      {\n        metaMessages: [\n          `Params: (${formatAbiParams(params, { includeName: true })})`,\n          `Data:   ${data} (${size} bytes)`,\n        ],\n        name: 'DecodeLogDataMismatch',\n      },\n    )\n\n    this.abiItem = abiItem\n    this.data = data\n    this.params = params\n    this.size = size\n  }\n}\n\nexport type DecodeLogTopicsMismatchErrorType = DecodeLogTopicsMismatch & {\n  name: 'DecodeLogTopicsMismatch'\n}\nexport class DecodeLogTopicsMismatch extends BaseError {\n  abiItem: AbiEvent\n\n  constructor({\n    abiItem,\n    param,\n  }: {\n    abiItem: AbiEvent\n    param: AbiParameter & { indexed: boolean }\n  }) {\n    super(\n      [\n        `Expected a topic for indexed event parameter${\n          param.name ? ` \"${param.name}\"` : ''\n        } on event \"${formatAbiItem(abiItem, { includeName: true })}\".`,\n      ].join('\\n'),\n      { name: 'DecodeLogTopicsMismatch' },\n    )\n\n    this.abiItem = abiItem\n  }\n}\n\nexport type InvalidAbiEncodingTypeErrorType = InvalidAbiEncodingTypeError & {\n  name: 'InvalidAbiEncodingTypeError'\n}\nexport class InvalidAbiEncodingTypeError extends BaseError {\n  constructor(type: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Type \"${type}\" is not a valid encoding type.`,\n        'Please provide a valid ABI type.',\n      ].join('\\n'),\n      { docsPath, name: 'InvalidAbiEncodingType' },\n    )\n  }\n}\n\nexport type InvalidAbiDecodingTypeErrorType = InvalidAbiDecodingTypeError & {\n  name: 'InvalidAbiDecodingTypeError'\n}\nexport class InvalidAbiDecodingTypeError extends BaseError {\n  constructor(type: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Type \"${type}\" is not a valid decoding type.`,\n        'Please provide a valid ABI type.',\n      ].join('\\n'),\n      { docsPath, name: 'InvalidAbiDecodingType' },\n    )\n  }\n}\n\nexport type InvalidArrayErrorType = InvalidArrayError & {\n  name: 'InvalidArrayError'\n}\nexport class InvalidArrayError extends BaseError {\n  constructor(value: unknown) {\n    super([`Value \"${value}\" is not a valid array.`].join('\\n'), {\n      name: 'InvalidArrayError',\n    })\n  }\n}\n\nexport type InvalidDefinitionTypeErrorType = InvalidDefinitionTypeError & {\n  name: 'InvalidDefinitionTypeError'\n}\nexport class InvalidDefinitionTypeError extends BaseError {\n  constructor(type: string) {\n    super(\n      [\n        `\"${type}\" is not a valid definition type.`,\n        'Valid types: \"function\", \"event\", \"error\"',\n      ].join('\\n'),\n      { name: 'InvalidDefinitionTypeError' },\n    )\n  }\n}\n\nexport type UnsupportedPackedAbiTypeErrorType = UnsupportedPackedAbiType & {\n  name: 'UnsupportedPackedAbiType'\n}\nexport class UnsupportedPackedAbiType extends BaseError {\n  constructor(type: unknown) {\n    super(`Type \"${type}\" is not supported for packed encoding.`, {\n      name: 'UnsupportedPackedAbiType',\n    })\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 586, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 592, "column": 0}, "map": {"version":3,"file":"stateOverride.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/stateOverride.ts"],"sourcesContent":["import type { StateMapping, StateOverride } from '../types/stateOverride.js'\nimport { BaseError } from './base.js'\n\nexport type AccountStateConflictErrorType = AccountStateConflictError & {\n  name: 'AccountStateConflictError'\n}\n\nexport class AccountStateConflictError extends BaseError {\n  constructor({ address }: { address: string }) {\n    super(`State for account \"${address}\" is set multiple times.`, {\n      name: 'AccountStateConflictError',\n    })\n  }\n}\n\nexport type StateAssignmentConflictErrorType = StateAssignmentConflictError & {\n  name: 'StateAssignmentConflictError'\n}\n\nexport class StateAssignmentConflictError extends BaseError {\n  constructor() {\n    super('state and stateDiff are set on the same account.', {\n      name: 'StateAssignmentConflictError',\n    })\n  }\n}\n\n/** @internal */\nexport function prettyStateMapping(stateMapping: StateMapping) {\n  return stateMapping.reduce((pretty, { slot, value }) => {\n    return `${pretty}        ${slot}: ${value}\\n`\n  }, '')\n}\n\nexport function prettyStateOverride(stateOverride: StateOverride) {\n  return stateOverride\n    .reduce((pretty, { address, ...state }) => {\n      let val = `${pretty}    ${address}:\\n`\n      if (state.nonce) val += `      nonce: ${state.nonce}\\n`\n      if (state.balance) val += `      balance: ${state.balance}\\n`\n      if (state.code) val += `      code: ${state.code}\\n`\n      if (state.state) {\n        val += '      state:\\n'\n        val += prettyStateMapping(state.state)\n      }\n      if (state.stateDiff) {\n        val += '      stateDiff:\\n'\n        val += prettyStateMapping(state.stateDiff)\n      }\n      return val\n    }, '  State Override:\\n')\n    .slice(0, -1)\n}\n"],"names":[],"mappings":";;;;;;AACA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAM/B,MAAO,yBAA0B,wJAAQ,YAAS;IACtD,YAAY,EAAE,OAAO,EAAuB,CAAA;QAC1C,KAAK,CAAC,CAAA,mBAAA,EAAsB,OAAO,CAAA,wBAAA,CAA0B,EAAE;YAC7D,IAAI,EAAE,2BAA2B;SAClC,CAAC,CAAA;IACJ,CAAC;CACF;AAMK,MAAO,4BAA6B,wJAAQ,YAAS;IACzD,aAAA;QACE,KAAK,CAAC,kDAAkD,EAAE;YACxD,IAAI,EAAE,8BAA8B;SACrC,CAAC,CAAA;IACJ,CAAC;CACF;AAGK,SAAU,kBAAkB,CAAC,YAA0B;IAC3D,OAAO,YAAY,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;QACrD,OAAO,GAAG,MAAM,CAAA,QAAA,EAAW,IAAI,CAAA,EAAA,EAAK,KAAK,CAAA,EAAA,CAAI,CAAA;IAC/C,CAAC,EAAE,EAAE,CAAC,CAAA;AACR,CAAC;AAEK,SAAU,mBAAmB,CAAC,aAA4B;IAC9D,OAAO,aAAa,CACjB,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,GAAG,KAAK,EAAE,EAAE,EAAE;QACxC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAA,IAAA,EAAO,OAAO,CAAA,GAAA,CAAK,CAAA;QACtC,IAAI,KAAK,CAAC,KAAK,EAAE,GAAG,IAAI,CAAA,aAAA,EAAgB,KAAK,CAAC,KAAK,CAAA,EAAA,CAAI,CAAA;QACvD,IAAI,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAA,eAAA,EAAkB,KAAK,CAAC,OAAO,CAAA,EAAA,CAAI,CAAA;QAC7D,IAAI,KAAK,CAAC,IAAI,EAAE,GAAG,IAAI,CAAA,YAAA,EAAe,KAAK,CAAC,IAAI,CAAA,EAAA,CAAI,CAAA;QACpD,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;YAChB,GAAG,IAAI,gBAAgB,CAAA;YACvB,GAAG,IAAI,kBAAkB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;QACxC,CAAC;QACD,IAAI,KAAK,CAAC,SAAS,EAAE,CAAC;YACpB,GAAG,IAAI,oBAAoB,CAAA;YAC3B,GAAG,IAAI,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA;QAC5C,CAAC;QACD,OAAO,GAAG,CAAA;IACZ,CAAC,EAAE,qBAAqB,CAAC,CACxB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;AACjB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 642, "column": 0}, "map": {"version":3,"file":"fee.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/fee.ts"],"sourcesContent":["import { formatGwei } from '../utils/unit/formatGwei.js'\nimport { BaseError } from './base.js'\n\nexport type BaseFeeScalarErrorType = BaseFeeScalarError & {\n  name: 'BaseFeeScalarError'\n}\nexport class BaseFeeScalarError extends BaseError {\n  constructor() {\n    super('`baseFeeMultiplier` must be greater than 1.', {\n      name: 'BaseFeeScalarError',\n    })\n  }\n}\n\nexport type Eip1559FeesNotSupportedErrorType = Eip1559FeesNotSupportedError & {\n  name: 'Eip1559FeesNotSupportedError'\n}\nexport class Eip1559FeesNotSupportedError extends BaseError {\n  constructor() {\n    super('Chain does not support EIP-1559 fees.', {\n      name: 'Eip1559FeesNotSupportedError',\n    })\n  }\n}\n\nexport type MaxFeePerGasTooLowErrorType = MaxFeePerGasTooLowError & {\n  name: 'MaxFeePerGasTooLowError'\n}\nexport class MaxFeePerGasTooLowError extends BaseError {\n  constructor({ maxPriorityFeePerGas }: { maxPriorityFeePerGas: bigint }) {\n    super(\n      `\\`maxFeePerGas\\` cannot be less than the \\`maxPriorityFeePerGas\\` (${formatGwei(\n        maxPriorityFeePerGas,\n      )} gwei).`,\n      { name: 'MaxFeePerGasTooLowError' },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;AACA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;AADrC,OAAO,EAAE,UAAU,EAAE,MAAM,6BAA6B,CAAA;;;AAMlD,MAAO,kBAAmB,wJAAQ,YAAS;IAC/C,aAAA;QACE,KAAK,CAAC,6CAA6C,EAAE;YACnD,IAAI,EAAE,oBAAoB;SAC3B,CAAC,CAAA;IACJ,CAAC;CACF;AAKK,MAAO,4BAA6B,wJAAQ,YAAS;IACzD,aAAA;QACE,KAAK,CAAC,uCAAuC,EAAE;YAC7C,IAAI,EAAE,8BAA8B;SACrC,CAAC,CAAA;IACJ,CAAC;CACF;AAKK,MAAO,uBAAwB,uJAAQ,aAAS;IACpD,YAAY,EAAE,oBAAoB,EAAoC,CAAA;QACpE,KAAK,CACH,CAAA,mEAAA,kKAAsE,aAAA,AAAU,EAC9E,oBAAoB,CACrB,CAAA,OAAA,CAAS,EACV;YAAE,IAAI,EAAE,yBAAyB;QAAA,CAAE,CACpC,CAAA;IACH,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 672, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 678, "column": 0}, "map": {"version":3,"file":"block.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/block.ts"],"sourcesContent":["import type { Hash } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type BlockNotFoundErrorType = BlockNotFoundError & {\n  name: 'BlockNotFoundError'\n}\nexport class BlockNotFoundError extends BaseError {\n  constructor({\n    blockHash,\n    blockNumber,\n  }: {\n    blockHash?: Hash | undefined\n    blockNumber?: bigint | undefined\n  }) {\n    let identifier = 'Block'\n    if (blockHash) identifier = `Block at hash \"${blockHash}\"`\n    if (blockNumber) identifier = `Block at number \"${blockNumber}\"`\n    super(`${identifier} could not be found.`, { name: 'BlockNotFoundError' })\n  }\n}\n"],"names":[],"mappings":";;;AAEA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAK/B,MAAO,kBAAmB,wJAAQ,YAAS;IAC/C,YAAY,EACV,SAAS,EACT,WAAW,EAIZ,CAAA;QACC,IAAI,UAAU,GAAG,OAAO,CAAA;QACxB,IAAI,SAAS,EAAE,UAAU,GAAG,CAAA,eAAA,EAAkB,SAAS,CAAA,CAAA,CAAG,CAAA;QAC1D,IAAI,WAAW,EAAE,UAAU,GAAG,CAAA,iBAAA,EAAoB,WAAW,CAAA,CAAA,CAAG,CAAA;QAChE,KAAK,CAAC,GAAG,UAAU,CAAA,oBAAA,CAAsB,EAAE;YAAE,IAAI,EAAE,oBAAoB;QAAA,CAAE,CAAC,CAAA;IAC5E,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 693, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 699, "column": 0}, "map": {"version":3,"file":"transaction.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/transaction.ts"],"sourcesContent":["import type { Account } from '../accounts/types.js'\nimport type { SendTransactionParameters } from '../actions/wallet/sendTransaction.js'\nimport type { BlockTag } from '../types/block.js'\nimport type { Chain } from '../types/chain.js'\nimport type { Hash, Hex } from '../types/misc.js'\nimport type { TransactionType } from '../types/transaction.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\nexport function prettyPrint(\n  args: Record<string, bigint | number | string | undefined | false | unknown>,\n) {\n  const entries = Object.entries(args)\n    .map(([key, value]) => {\n      if (value === undefined || value === false) return null\n      return [key, value]\n    })\n    .filter(Boolean) as [string, string][]\n  const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0)\n  return entries\n    .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n    .join('\\n')\n}\n\nexport type FeeConflictErrorType = FeeConflictError & {\n  name: 'FeeConflictError'\n}\nexport class FeeConflictError extends BaseError {\n  constructor() {\n    super(\n      [\n        'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n        'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n      ].join('\\n'),\n      { name: 'FeeConflictError' },\n    )\n  }\n}\n\nexport type InvalidLegacyVErrorType = InvalidLegacyVError & {\n  name: 'InvalidLegacyVError'\n}\nexport class InvalidLegacyVError extends BaseError {\n  constructor({ v }: { v: bigint }) {\n    super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`, {\n      name: 'InvalidLegacyVError',\n    })\n  }\n}\n\nexport type InvalidSerializableTransactionErrorType =\n  InvalidSerializableTransactionError & {\n    name: 'InvalidSerializableTransactionError'\n  }\nexport class InvalidSerializableTransactionError extends BaseError {\n  constructor({ transaction }: { transaction: Record<string, unknown> }) {\n    super('Cannot infer a transaction type from provided transaction.', {\n      metaMessages: [\n        'Provided Transaction:',\n        '{',\n        prettyPrint(transaction),\n        '}',\n        '',\n        'To infer the type, either provide:',\n        '- a `type` to the Transaction, or',\n        '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n        '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n        '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n        '- an EIP-7702 Transaction with `authorizationList`, or',\n        '- a Legacy Transaction with `gasPrice`',\n      ],\n      name: 'InvalidSerializableTransactionError',\n    })\n  }\n}\n\nexport type InvalidSerializedTransactionTypeErrorType =\n  InvalidSerializedTransactionTypeError & {\n    name: 'InvalidSerializedTransactionTypeError'\n  }\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n  serializedType: Hex\n\n  constructor({ serializedType }: { serializedType: Hex }) {\n    super(`Serialized transaction type \"${serializedType}\" is invalid.`, {\n      name: 'InvalidSerializedTransactionType',\n    })\n\n    this.serializedType = serializedType\n  }\n}\n\nexport type InvalidSerializedTransactionErrorType =\n  InvalidSerializedTransactionError & {\n    name: 'InvalidSerializedTransactionError'\n  }\nexport class InvalidSerializedTransactionError extends BaseError {\n  serializedTransaction: Hex\n  type: TransactionType\n\n  constructor({\n    attributes,\n    serializedTransaction,\n    type,\n  }: {\n    attributes: Record<string, unknown>\n    serializedTransaction: Hex\n    type: TransactionType\n  }) {\n    const missing = Object.entries(attributes)\n      .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n      .filter(Boolean)\n    super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n      metaMessages: [\n        `Serialized Transaction: \"${serializedTransaction}\"`,\n        missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n      ].filter(Boolean),\n      name: 'InvalidSerializedTransactionError',\n    })\n\n    this.serializedTransaction = serializedTransaction\n    this.type = type\n  }\n}\n\nexport type InvalidStorageKeySizeErrorType = InvalidStorageKeySizeError & {\n  name: 'InvalidStorageKeySizeError'\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n  constructor({ storageKey }: { storageKey: Hex }) {\n    super(\n      `Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor(\n        (storageKey.length - 2) / 2,\n      )} bytes.`,\n      { name: 'InvalidStorageKeySizeError' },\n    )\n  }\n}\n\nexport type TransactionExecutionErrorType = TransactionExecutionError & {\n  name: 'TransactionExecutionError'\n}\nexport class TransactionExecutionError extends BaseError {\n  override cause: BaseError\n\n  constructor(\n    cause: BaseError,\n    {\n      account,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: Omit<SendTransactionParameters, 'account' | 'chain'> & {\n      account: Account | null\n      chain?: Chain | undefined\n      docsPath?: string | undefined\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      chain: chain && `${chain?.name} (id: ${chain?.id})`,\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Request Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n      name: 'TransactionExecutionError',\n    })\n    this.cause = cause\n  }\n}\n\nexport type TransactionNotFoundErrorType = TransactionNotFoundError & {\n  name: 'TransactionNotFoundError'\n}\nexport class TransactionNotFoundError extends BaseError {\n  constructor({\n    blockHash,\n    blockNumber,\n    blockTag,\n    hash,\n    index,\n  }: {\n    blockHash?: Hash | undefined\n    blockNumber?: bigint | undefined\n    blockTag?: BlockTag | undefined\n    hash?: Hash | undefined\n    index?: number | undefined\n  }) {\n    let identifier = 'Transaction'\n    if (blockTag && index !== undefined)\n      identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`\n    if (blockHash && index !== undefined)\n      identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`\n    if (blockNumber && index !== undefined)\n      identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`\n    if (hash) identifier = `Transaction with hash \"${hash}\"`\n    super(`${identifier} could not be found.`, {\n      name: 'TransactionNotFoundError',\n    })\n  }\n}\n\nexport type TransactionReceiptNotFoundErrorType =\n  TransactionReceiptNotFoundError & {\n    name: 'TransactionReceiptNotFoundError'\n  }\nexport class TransactionReceiptNotFoundError extends BaseError {\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`,\n      {\n        name: 'TransactionReceiptNotFoundError',\n      },\n    )\n  }\n}\n\nexport type WaitForTransactionReceiptTimeoutErrorType =\n  WaitForTransactionReceiptTimeoutError & {\n    name: 'WaitForTransactionReceiptTimeoutError'\n  }\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`,\n      { name: 'WaitForTransactionReceiptTimeoutError' },\n    )\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 876, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 882, "column": 0}, "map": {"version":3,"file":"address.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/address.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type InvalidAddressErrorType = InvalidAddressError & {\n  name: 'InvalidAddressError'\n}\nexport class InvalidAddressError extends BaseError {\n  constructor({ address }: { address: string }) {\n    super(`Address \"${address}\" is invalid.`, {\n      metaMessages: [\n        '- Address must be a hex value of 20 bytes (40 hex characters).',\n        '- Address must match its checksum counterpart.',\n      ],\n      name: 'InvalidAddressError',\n    })\n  }\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAK/B,MAAO,mBAAoB,wJAAQ,YAAS;IAChD,YAAY,EAAE,OAAO,EAAuB,CAAA;QAC1C,KAAK,CAAC,CAAA,SAAA,EAAY,OAAO,CAAA,aAAA,CAAe,EAAE;YACxC,YAAY,EAAE;gBACZ,gEAAgE;gBAChE,gDAAgD;aACjD;YACD,IAAI,EAAE,qBAAqB;SAC5B,CAAC,CAAA;IACJ,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 898, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 904, "column": 0}, "map": {"version":3,"file":"utils.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/utils.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nexport type ErrorType<name extends string = 'Error'> = Error & { name: name }\n\nexport const getContractAddress = (address: Address) => address\nexport const getUrl = (url: string) => url\n"],"names":[],"mappings":";;;;AAIO,MAAM,kBAAkB,GAAG,CAAC,OAAgB,EAAE,CAAG,CAAD,MAAQ,CAAA;AACxD,MAAM,MAAM,GAAG,CAAC,GAAW,EAAE,CAAG,CAAD,EAAI,CAAA","ignoreList":[0]}},
    {"offset": {"line": 910, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 916, "column": 0}, "map": {"version":3,"file":"cursor.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/cursor.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type NegativeOffsetErrorType = NegativeOffsetError & {\n  name: 'NegativeOffsetError'\n}\nexport class NegativeOffsetError extends BaseError {\n  constructor({ offset }: { offset: number }) {\n    super(`Offset \\`${offset}\\` cannot be negative.`, {\n      name: 'NegativeOffsetError',\n    })\n  }\n}\n\nexport type PositionOutOfBoundsErrorType = PositionOutOfBoundsError & {\n  name: 'PositionOutOfBoundsError'\n}\nexport class PositionOutOfBoundsError extends BaseError {\n  constructor({ length, position }: { length: number; position: number }) {\n    super(\n      `Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`,\n      { name: 'PositionOutOfBoundsError' },\n    )\n  }\n}\n\nexport type RecursiveReadLimitExceededErrorType =\n  RecursiveReadLimitExceededError & {\n    name: 'RecursiveReadLimitExceededError'\n  }\nexport class RecursiveReadLimitExceededError extends BaseError {\n  constructor({ count, limit }: { count: number; limit: number }) {\n    super(\n      `Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`,\n      { name: 'RecursiveReadLimitExceededError' },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAK/B,MAAO,mBAAoB,wJAAQ,YAAS;IAChD,YAAY,EAAE,MAAM,EAAsB,CAAA;QACxC,KAAK,CAAC,CAAA,SAAA,EAAY,MAAM,CAAA,sBAAA,CAAwB,EAAE;YAChD,IAAI,EAAE,qBAAqB;SAC5B,CAAC,CAAA;IACJ,CAAC;CACF;AAKK,MAAO,wBAAyB,wJAAQ,YAAS;IACrD,YAAY,EAAE,MAAM,EAAE,QAAQ,EAAwC,CAAA;QACpE,KAAK,CACH,CAAA,WAAA,EAAc,QAAQ,CAAA,sCAAA,EAAyC,MAAM,CAAA,IAAA,CAAM,EAC3E;YAAE,IAAI,EAAE,0BAA0B;QAAA,CAAE,CACrC,CAAA;IACH,CAAC;CACF;AAMK,MAAO,+BAAgC,wJAAQ,YAAS;IAC5D,YAAY,EAAE,KAAK,EAAE,KAAK,EAAoC,CAAA;QAC5D,KAAK,CACH,CAAA,0BAAA,EAA6B,KAAK,CAAA,qCAAA,EAAwC,KAAK,CAAA,IAAA,CAAM,EACrF;YAAE,IAAI,EAAE,iCAAiC;QAAA,CAAE,CAC5C,CAAA;IACH,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 944, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 950, "column": 0}, "map": {"version":3,"file":"contract.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/contract.ts"],"sourcesContent":["import type { Abi, Address } from 'abitype'\n\nimport { parseAccount } from '../accounts/utils/parseAccount.js'\nimport type { CallParameters } from '../actions/public/call.js'\nimport { panicReasons } from '../constants/solidity.js'\nimport type { Chain } from '../types/chain.js'\nimport type { Hex } from '../types/misc.js'\nimport {\n  type DecodeErrorResultReturnType,\n  decodeErrorResult,\n} from '../utils/abi/decodeErrorResult.js'\nimport { formatAbiItem } from '../utils/abi/formatAbiItem.js'\nimport { formatAbiItemWithArgs } from '../utils/abi/formatAbiItemWithArgs.js'\nimport { getAbiItem } from '../utils/abi/getAbiItem.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { AbiErrorSignatureNotFoundError } from './abi.js'\nimport { BaseError } from './base.js'\nimport { prettyStateOverride } from './stateOverride.js'\nimport { prettyPrint } from './transaction.js'\nimport { getContractAddress } from './utils.js'\n\nexport type CallExecutionErrorType = CallExecutionError & {\n  name: 'CallExecutionError'\n}\nexport class CallExecutionError extends BaseError {\n  override cause: BaseError\n\n  constructor(\n    cause: BaseError,\n    {\n      account: account_,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n      stateOverride,\n    }: CallParameters & {\n      chain?: Chain | undefined\n      docsPath?: string | undefined\n    },\n  ) {\n    const account = account_ ? parseAccount(account_) : undefined\n    let prettyArgs = prettyPrint({\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    if (stateOverride) {\n      prettyArgs += `\\n${prettyStateOverride(stateOverride)}`\n    }\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Raw Call Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n      name: 'CallExecutionError',\n    })\n    this.cause = cause\n  }\n}\n\nexport type ContractFunctionExecutionErrorType =\n  ContractFunctionExecutionError & {\n    name: 'ContractFunctionExecutionError'\n  }\nexport class ContractFunctionExecutionError extends BaseError {\n  abi: Abi\n  args?: unknown[] | undefined\n  override cause: BaseError\n  contractAddress?: Address | undefined\n  formattedArgs?: string | undefined\n  functionName: string\n  sender?: Address | undefined\n\n  constructor(\n    cause: BaseError,\n    {\n      abi,\n      args,\n      contractAddress,\n      docsPath,\n      functionName,\n      sender,\n    }: {\n      abi: Abi\n      args?: any | undefined\n      contractAddress?: Address | undefined\n      docsPath?: string | undefined\n      functionName: string\n      sender?: Address | undefined\n    },\n  ) {\n    const abiItem = getAbiItem({ abi, args, name: functionName })\n    const formattedArgs = abiItem\n      ? formatAbiItemWithArgs({\n          abiItem,\n          args,\n          includeFunctionName: false,\n          includeName: false,\n        })\n      : undefined\n    const functionWithParams = abiItem\n      ? formatAbiItem(abiItem, { includeName: true })\n      : undefined\n\n    const prettyArgs = prettyPrint({\n      address: contractAddress && getContractAddress(contractAddress),\n      function: functionWithParams,\n      args:\n        formattedArgs &&\n        formattedArgs !== '()' &&\n        `${[...Array(functionName?.length ?? 0).keys()]\n          .map(() => ' ')\n          .join('')}${formattedArgs}`,\n      sender,\n    })\n\n    super(\n      cause.shortMessage ||\n        `An unknown error occurred while executing the contract function \"${functionName}\".`,\n      {\n        cause,\n        docsPath,\n        metaMessages: [\n          ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n          prettyArgs && 'Contract Call:',\n          prettyArgs,\n        ].filter(Boolean) as string[],\n        name: 'ContractFunctionExecutionError',\n      },\n    )\n    this.abi = abi\n    this.args = args\n    this.cause = cause\n    this.contractAddress = contractAddress\n    this.functionName = functionName\n    this.sender = sender\n  }\n}\n\nexport type ContractFunctionRevertedErrorType =\n  ContractFunctionRevertedError & {\n    name: 'ContractFunctionRevertedError'\n  }\nexport class ContractFunctionRevertedError extends BaseError {\n  data?: DecodeErrorResultReturnType | undefined\n  raw?: Hex | undefined\n  reason?: string | undefined\n  signature?: Hex | undefined\n\n  constructor({\n    abi,\n    data,\n    functionName,\n    message,\n  }: {\n    abi: Abi\n    data?: Hex | undefined\n    functionName: string\n    message?: string | undefined\n  }) {\n    let cause: Error | undefined\n    let decodedData: DecodeErrorResultReturnType | undefined = undefined\n    let metaMessages: string[] | undefined\n    let reason: string | undefined\n    if (data && data !== '0x') {\n      try {\n        decodedData = decodeErrorResult({ abi, data })\n        const { abiItem, errorName, args: errorArgs } = decodedData\n        if (errorName === 'Error') {\n          reason = (errorArgs as [string])[0]\n        } else if (errorName === 'Panic') {\n          const [firstArg] = errorArgs as [number]\n          reason = panicReasons[firstArg as keyof typeof panicReasons]\n        } else {\n          const errorWithParams = abiItem\n            ? formatAbiItem(abiItem, { includeName: true })\n            : undefined\n          const formattedArgs =\n            abiItem && errorArgs\n              ? formatAbiItemWithArgs({\n                  abiItem,\n                  args: errorArgs,\n                  includeFunctionName: false,\n                  includeName: false,\n                })\n              : undefined\n\n          metaMessages = [\n            errorWithParams ? `Error: ${errorWithParams}` : '',\n            formattedArgs && formattedArgs !== '()'\n              ? `       ${[...Array(errorName?.length ?? 0).keys()]\n                  .map(() => ' ')\n                  .join('')}${formattedArgs}`\n              : '',\n          ]\n        }\n      } catch (err) {\n        cause = err as Error\n      }\n    } else if (message) reason = message\n\n    let signature: Hex | undefined\n    if (cause instanceof AbiErrorSignatureNotFoundError) {\n      signature = cause.signature\n      metaMessages = [\n        `Unable to decode signature \"${signature}\" as it was not found on the provided ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n        `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ]\n    }\n\n    super(\n      (reason && reason !== 'execution reverted') || signature\n        ? [\n            `The contract function \"${functionName}\" reverted with the following ${\n              signature ? 'signature' : 'reason'\n            }:`,\n            reason || signature,\n          ].join('\\n')\n        : `The contract function \"${functionName}\" reverted.`,\n      {\n        cause,\n        metaMessages,\n        name: 'ContractFunctionRevertedError',\n      },\n    )\n\n    this.data = decodedData\n    this.raw = data\n    this.reason = reason\n    this.signature = signature\n  }\n}\n\nexport type ContractFunctionZeroDataErrorType =\n  ContractFunctionZeroDataError & {\n    name: 'ContractFunctionZeroDataError'\n  }\nexport class ContractFunctionZeroDataError extends BaseError {\n  constructor({ functionName }: { functionName: string }) {\n    super(`The contract function \"${functionName}\" returned no data (\"0x\").`, {\n      metaMessages: [\n        'This could be due to any of the following:',\n        `  - The contract does not have the function \"${functionName}\",`,\n        '  - The parameters passed to the contract function may be invalid, or',\n        '  - The address is not a contract.',\n      ],\n      name: 'ContractFunctionZeroDataError',\n    })\n  }\n}\n\nexport type CounterfactualDeploymentFailedErrorType =\n  CounterfactualDeploymentFailedError & {\n    name: 'CounterfactualDeploymentFailedError'\n  }\nexport class CounterfactualDeploymentFailedError extends BaseError {\n  constructor({ factory }: { factory?: Address | undefined }) {\n    super(\n      `Deployment for counterfactual contract call failed${\n        factory ? ` for factory \"${factory}\".` : ''\n      }`,\n      {\n        metaMessages: [\n          'Please ensure:',\n          '- The `factory` is a valid contract deployment factory (ie. Create2 Factory, ERC-4337 Factory, etc).',\n          '- The `factoryData` is a valid encoded function call for contract deployment function on the factory.',\n        ],\n        name: 'CounterfactualDeploymentFailedError',\n      },\n    )\n  }\n}\n\nexport type RawContractErrorType = RawContractError & {\n  name: 'RawContractError'\n}\nexport class RawContractError extends BaseError {\n  code = 3\n\n  data?: Hex | { data?: Hex | undefined } | undefined\n\n  constructor({\n    data,\n    message,\n  }: {\n    data?: Hex | { data?: Hex | undefined } | undefined\n    message?: string | undefined\n  }) {\n    super(message || '', { name: 'RawContractError' })\n    this.data = data\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1241, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1247, "column": 0}, "map": {"version":3,"file":"request.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/request.ts"],"sourcesContent":["import { stringify } from '../utils/stringify.js'\n\nimport { BaseError } from './base.js'\nimport { getUrl } from './utils.js'\n\nexport type HttpRequestErrorType = HttpRequestError & {\n  name: 'HttpRequestError'\n}\nexport class HttpRequestError extends BaseError {\n  body?: { [x: string]: unknown } | { [y: string]: unknown }[] | undefined\n  headers?: Headers | undefined\n  status?: number | undefined\n  url: string\n\n  constructor({\n    body,\n    cause,\n    details,\n    headers,\n    status,\n    url,\n  }: {\n    body?: { [x: string]: unknown } | { [y: string]: unknown }[] | undefined\n    cause?: Error | undefined\n    details?: string | undefined\n    headers?: Headers | undefined\n    status?: number | undefined\n    url: string\n  }) {\n    super('HTTP request failed.', {\n      cause,\n      details,\n      metaMessages: [\n        status && `Status: ${status}`,\n        `URL: ${getUrl(url)}`,\n        body && `Request body: ${stringify(body)}`,\n      ].filter(Boolean) as string[],\n      name: 'HttpRequestError',\n    })\n    this.body = body\n    this.headers = headers\n    this.status = status\n    this.url = url\n  }\n}\n\nexport type WebSocketRequestErrorType = WebSocketRequestError & {\n  name: 'WebSocketRequestError'\n}\nexport class WebSocketRequestError extends BaseError {\n  constructor({\n    body,\n    cause,\n    details,\n    url,\n  }: {\n    body?: { [key: string]: unknown } | undefined\n    cause?: Error | undefined\n    details?: string | undefined\n    url: string\n  }) {\n    super('WebSocket request failed.', {\n      cause,\n      details,\n      metaMessages: [\n        `URL: ${getUrl(url)}`,\n        body && `Request body: ${stringify(body)}`,\n      ].filter(Boolean) as string[],\n      name: 'WebSocketRequestError',\n    })\n  }\n}\n\nexport type RpcRequestErrorType = RpcRequestError & {\n  name: 'RpcRequestError'\n}\nexport class RpcRequestError extends BaseError {\n  code: number\n  data?: unknown\n\n  constructor({\n    body,\n    error,\n    url,\n  }: {\n    body: { [x: string]: unknown } | { [y: string]: unknown }[]\n    error: { code: number; data?: unknown; message: string }\n    url: string\n  }) {\n    super('RPC Request failed.', {\n      cause: error as any,\n      details: error.message,\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n      name: 'RpcRequestError',\n    })\n    this.code = error.code\n    this.data = error.data\n  }\n}\n\nexport type SocketClosedErrorType = SocketClosedError & {\n  name: 'SocketClosedError'\n}\nexport class SocketClosedError extends BaseError {\n  constructor({\n    url,\n  }: {\n    url?: string | undefined\n  } = {}) {\n    super('The socket has been closed.', {\n      metaMessages: [url && `URL: ${getUrl(url)}`].filter(Boolean) as string[],\n      name: 'SocketClosedError',\n    })\n  }\n}\n\nexport type TimeoutErrorType = TimeoutError & {\n  name: 'TimeoutError'\n}\nexport class TimeoutError extends BaseError {\n  constructor({\n    body,\n    url,\n  }: {\n    body: { [x: string]: unknown } | { [y: string]: unknown }[]\n    url: string\n  }) {\n    super('The request took too long to respond.', {\n      details: 'The request timed out.',\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n      name: 'TimeoutError',\n    })\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1364, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1370, "column": 0}, "map": {"version":3,"file":"rpc.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/rpc.ts"],"sourcesContent":["import type { Prettify } from '../types/utils.js'\nimport { BaseError } from './base.js'\nimport { RpcRequestError } from './request.js'\n\nconst unknownErrorCode = -1\n\nexport type RpcErrorCode =\n  | -1\n  | -32700 // Parse error\n  | -32600 // Invalid request\n  | -32601 // Method not found\n  | -32602 // Invalid params\n  | -32603 // Internal error\n  | -32000 // Invalid input\n  | -32001 // Resource not found\n  | -32002 // Resource unavailable\n  | -32003 // Transaction rejected\n  | -32004 // Method not supported\n  | -32005 // Limit exceeded\n  | -32006 // JSON-RPC version not supported\n  | -32042 // Method not found\n\ntype RpcErrorOptions<code extends number = RpcErrorCode> = {\n  code?: code | (number & {}) | undefined\n  docsPath?: string | undefined\n  metaMessages?: string[] | undefined\n  name?: string | undefined\n  shortMessage: string\n}\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n *\n * - EIP https://eips.ethereum.org/EIPS/eip-1474\n */\nexport type RpcErrorType = RpcError & { name: 'RpcError' }\nexport class RpcError<code_ extends number = RpcErrorCode> extends BaseError {\n  code: code_ | (number & {})\n\n  constructor(\n    cause: Error,\n    {\n      code,\n      docsPath,\n      metaMessages,\n      name,\n      shortMessage,\n    }: RpcErrorOptions<code_>,\n  ) {\n    super(shortMessage, {\n      cause,\n      docsPath,\n      metaMessages:\n        metaMessages || (cause as { metaMessages?: string[] })?.metaMessages,\n      name: name || 'RpcError',\n    })\n    this.name = name || cause.name\n    this.code = (\n      cause instanceof RpcRequestError ? cause.code : (code ?? unknownErrorCode)\n    ) as code_\n  }\n}\n\nexport type ProviderRpcErrorCode =\n  | 4001 // User Rejected Request\n  | 4100 // Unauthorized\n  | 4200 // Unsupported Method\n  | 4900 // Disconnected\n  | 4901 // Chain Disconnected\n  | 4902 // Chain Not Recognized\n\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n *\n * - EIP https://eips.ethereum.org/EIPS/eip-1193\n */\nexport type ProviderRpcErrorType = ProviderRpcError & {\n  name: 'ProviderRpcError'\n}\nexport class ProviderRpcError<\n  T = undefined,\n> extends RpcError<ProviderRpcErrorCode> {\n  data?: T | undefined\n\n  constructor(\n    cause: Error,\n    options: Prettify<\n      RpcErrorOptions<ProviderRpcErrorCode> & {\n        data?: T | undefined\n      }\n    >,\n  ) {\n    super(cause, options)\n\n    this.data = options.data\n  }\n}\n\n/**\n * Subclass for a \"Parse error\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ParseRpcErrorType = ParseRpcError & {\n  code: -32700\n  name: 'ParseRpcError'\n}\nexport class ParseRpcError extends RpcError {\n  static code = -32700 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ParseRpcError.code,\n      name: 'ParseRpcError',\n      shortMessage:\n        'Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Invalid request\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidRequestRpcErrorType = InvalidRequestRpcError & {\n  code: -32600\n  name: 'InvalidRequestRpcError'\n}\nexport class InvalidRequestRpcError extends RpcError {\n  static code = -32600 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidRequestRpcError.code,\n      name: 'InvalidRequestRpcError',\n      shortMessage: 'JSON is not a valid request object.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Method not found\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type MethodNotFoundRpcErrorType = MethodNotFoundRpcError & {\n  code: -32601\n  name: 'MethodNotFoundRpcError'\n}\nexport class MethodNotFoundRpcError extends RpcError {\n  static code = -32601 as const\n\n  constructor(cause: Error, { method }: { method?: string } = {}) {\n    super(cause, {\n      code: MethodNotFoundRpcError.code,\n      name: 'MethodNotFoundRpcError',\n      shortMessage: `The method${method ? ` \"${method}\"` : ''} does not exist / is not available.`,\n    })\n  }\n}\n\n/**\n * Subclass for an \"Invalid params\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidParamsRpcErrorType = InvalidParamsRpcError & {\n  code: -32602\n  name: 'InvalidParamsRpcError'\n}\nexport class InvalidParamsRpcError extends RpcError {\n  static code = -32602 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidParamsRpcError.code,\n      name: 'InvalidParamsRpcError',\n      shortMessage: [\n        'Invalid parameters were provided to the RPC method.',\n        'Double check you have provided the correct parameters.',\n      ].join('\\n'),\n    })\n  }\n}\n\n/**\n * Subclass for an \"Internal error\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InternalRpcErrorType = InternalRpcError & {\n  code: -32603\n  name: 'InternalRpcError'\n}\nexport class InternalRpcError extends RpcError {\n  static code = -32603 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InternalRpcError.code,\n      name: 'InternalRpcError',\n      shortMessage: 'An internal error was received.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Invalid input\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidInputRpcErrorType = InvalidInputRpcError & {\n  code: -32000\n  name: 'InvalidInputRpcError'\n}\nexport class InvalidInputRpcError extends RpcError {\n  static code = -32000 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidInputRpcError.code,\n      name: 'InvalidInputRpcError',\n      shortMessage: [\n        'Missing or invalid parameters.',\n        'Double check you have provided the correct parameters.',\n      ].join('\\n'),\n    })\n  }\n}\n\n/**\n * Subclass for a \"Resource not found\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ResourceNotFoundRpcErrorType = ResourceNotFoundRpcError & {\n  code: -32001\n  name: 'ResourceNotFoundRpcError'\n}\nexport class ResourceNotFoundRpcError extends RpcError {\n  override name = 'ResourceNotFoundRpcError'\n  static code = -32001 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ResourceNotFoundRpcError.code,\n      name: 'ResourceNotFoundRpcError',\n      shortMessage: 'Requested resource not found.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Resource unavailable\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ResourceUnavailableRpcErrorType = ResourceUnavailableRpcError & {\n  code: -32002\n  name: 'ResourceUnavailableRpcError'\n}\nexport class ResourceUnavailableRpcError extends RpcError {\n  static code = -32002 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ResourceUnavailableRpcError.code,\n      name: 'ResourceUnavailableRpcError',\n      shortMessage: 'Requested resource not available.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Transaction rejected\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type TransactionRejectedRpcErrorType = TransactionRejectedRpcError & {\n  code: -32003\n  name: 'TransactionRejectedRpcError'\n}\nexport class TransactionRejectedRpcError extends RpcError {\n  static code = -32003 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: TransactionRejectedRpcError.code,\n      name: 'TransactionRejectedRpcError',\n      shortMessage: 'Transaction creation failed.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Method not supported\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type MethodNotSupportedRpcErrorType = MethodNotSupportedRpcError & {\n  code: -32004\n  name: 'MethodNotSupportedRpcError'\n}\nexport class MethodNotSupportedRpcError extends RpcError {\n  static code = -32004 as const\n\n  constructor(cause: Error, { method }: { method?: string } = {}) {\n    super(cause, {\n      code: MethodNotSupportedRpcError.code,\n      name: 'MethodNotSupportedRpcError',\n      shortMessage: `Method${method ? ` \"${method}\"` : ''} is not supported.`,\n    })\n  }\n}\n\n/**\n * Subclass for a \"Limit exceeded\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type LimitExceededRpcErrorType = LimitExceededRpcError & {\n  code: -32005\n  name: 'LimitExceededRpcError'\n}\nexport class LimitExceededRpcError extends RpcError {\n  static code = -32005 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: LimitExceededRpcError.code,\n      name: 'LimitExceededRpcError',\n      shortMessage: 'Request exceeds defined limit.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"JSON-RPC version not supported\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type JsonRpcVersionUnsupportedErrorType =\n  JsonRpcVersionUnsupportedError & {\n    code: -32006\n    name: 'JsonRpcVersionUnsupportedError'\n  }\nexport class JsonRpcVersionUnsupportedError extends RpcError {\n  static code = -32006 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: JsonRpcVersionUnsupportedError.code,\n      name: 'JsonRpcVersionUnsupportedError',\n      shortMessage: 'Version of JSON-RPC protocol is not supported.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"User Rejected Request\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UserRejectedRequestErrorType = UserRejectedRequestError & {\n  code: 4001\n  name: 'UserRejectedRequestError'\n}\nexport class UserRejectedRequestError extends ProviderRpcError {\n  static code = 4001 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UserRejectedRequestError.code,\n      name: 'UserRejectedRequestError',\n      shortMessage: 'User rejected the request.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unauthorized\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UnauthorizedProviderErrorType = UnauthorizedProviderError & {\n  code: 4100\n  name: 'UnauthorizedProviderError'\n}\nexport class UnauthorizedProviderError extends ProviderRpcError {\n  static code = 4100 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UnauthorizedProviderError.code,\n      name: 'UnauthorizedProviderError',\n      shortMessage:\n        'The requested method and/or account has not been authorized by the user.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unsupported Method\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UnsupportedProviderMethodErrorType =\n  UnsupportedProviderMethodError & {\n    code: 4200\n    name: 'UnsupportedProviderMethodError'\n  }\nexport class UnsupportedProviderMethodError extends ProviderRpcError {\n  static code = 4200 as const\n\n  constructor(cause: Error, { method }: { method?: string } = {}) {\n    super(cause, {\n      code: UnsupportedProviderMethodError.code,\n      name: 'UnsupportedProviderMethodError',\n      shortMessage: `The Provider does not support the requested method${method ? ` \" ${method}\"` : ''}.`,\n    })\n  }\n}\n\n/**\n * Subclass for an \"Disconnected\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type ProviderDisconnectedErrorType = ProviderDisconnectedError & {\n  code: 4900\n  name: 'ProviderDisconnectedError'\n}\nexport class ProviderDisconnectedError extends ProviderRpcError {\n  static code = 4900 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ProviderDisconnectedError.code,\n      name: 'ProviderDisconnectedError',\n      shortMessage: 'The Provider is disconnected from all chains.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Chain Disconnected\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type ChainDisconnectedErrorType = ChainDisconnectedError & {\n  code: 4901\n  name: 'ChainDisconnectedError'\n}\nexport class ChainDisconnectedError extends ProviderRpcError {\n  static code = 4901 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ChainDisconnectedError.code,\n      name: 'ChainDisconnectedError',\n      shortMessage: 'The Provider is not connected to the requested chain.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Switch Chain\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type SwitchChainErrorType = SwitchChainError & {\n  code: 4902\n  name: 'SwitchChainError'\n}\nexport class SwitchChainError extends ProviderRpcError {\n  static code = 4902 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: SwitchChainError.code,\n      name: 'SwitchChainError',\n      shortMessage: 'An error occurred when attempting to switch chain.',\n    })\n  }\n}\n\n/**\n * Subclass for an unknown RPC error.\n */\nexport type UnknownRpcErrorType = UnknownRpcError & {\n  name: 'UnknownRpcError'\n}\nexport class UnknownRpcError extends RpcError {\n  constructor(cause: Error) {\n    super(cause, {\n      name: 'UnknownRpcError',\n      shortMessage: 'An unknown RPC error occurred.',\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAO,EAAE,eAAe,EAAE,MAAM,cAAc,CAAA;AAD9C,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;;AAGrC,MAAM,gBAAgB,GAAG,CAAC,CAAC,CAAA;AAgCrB,MAAO,QAA8C,wJAAQ,YAAS;IAG1E,YACE,KAAY,EACZ,EACE,IAAI,EACJ,QAAQ,EACR,YAAY,EACZ,IAAI,EACJ,YAAY,EACW,CAAA;QAEzB,KAAK,CAAC,YAAY,EAAE;YAClB,KAAK;YACL,QAAQ;YACR,YAAY,EACV,YAAY,IAAK,KAAqC,EAAE,YAAY;YACtE,IAAI,EAAE,IAAI,IAAI,UAAU;SACzB,CAAC,CAAA;QAlBJ,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;;WAA2B;QAmBzB,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,KAAK,CAAC,IAAI,CAAA;QAC9B,IAAI,CAAC,IAAI,GAAG,AACV,KAAK,8JAAY,kBAAe,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAE,AAAD,IAAK,IAAI,gBAAgB,CAAC,CAClE,CAAA;IACZ,CAAC;CACF;AAkBK,MAAO,gBAEX,SAAQ,QAA8B;IAGtC,YACE,KAAY,EACZ,OAIC,CAAA;QAED,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;QAVvB,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;;WAAoB;QAYlB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAA;IAC1B,CAAC;CACF;AAWK,MAAO,aAAc,SAAQ,QAAQ;IAGzC,YAAY,KAAY,CAAA;QACtB,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,aAAa,CAAC,IAAI;YACxB,IAAI,EAAE,eAAe;YACrB,YAAY,EACV,uGAAuG;SAC1G,CAAC,CAAA;IACJ,CAAC;;AATM,OAAA,cAAA,CAAA,eAAA,QAAA;;;;WAAO,CAAC,KAAc;GAAA;AAqBzB,MAAO,sBAAuB,SAAQ,QAAQ;IAGlD,YAAY,KAAY,CAAA;QACtB,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,sBAAsB,CAAC,IAAI;YACjC,IAAI,EAAE,wBAAwB;YAC9B,YAAY,EAAE,qCAAqC;SACpD,CAAC,CAAA;IACJ,CAAC;;AARM,OAAA,cAAA,CAAA,wBAAA,QAAA;;;;WAAO,CAAC,KAAc;GAAA;AAoBzB,MAAO,sBAAuB,SAAQ,QAAQ;IAGlD,YAAY,KAAY,EAAE,EAAE,MAAM,EAAA,GAA0B,CAAA,CAAE,CAAA;QAC5D,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,sBAAsB,CAAC,IAAI;YACjC,IAAI,EAAE,wBAAwB;YAC9B,YAAY,EAAE,CAAA,UAAA,EAAa,MAAM,CAAC,CAAC,CAAC,CAAA,EAAA,EAAK,MAAM,CAAA,CAAA,CAAG,CAAC,CAAC,CAAC,EAAE,CAAA,mCAAA,CAAqC;SAC7F,CAAC,CAAA;IACJ,CAAC;;AARM,OAAA,cAAA,CAAA,wBAAA,QAAA;;;;WAAO,CAAC,KAAc;GAAA;AAoBzB,MAAO,qBAAsB,SAAQ,QAAQ;IAGjD,YAAY,KAAY,CAAA;QACtB,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,qBAAqB,CAAC,IAAI;YAChC,IAAI,EAAE,uBAAuB;YAC7B,YAAY,EAAE;gBACZ,qDAAqD;gBACrD,wDAAwD;aACzD,CAAC,IAAI,CAAC,IAAI,CAAC;SACb,CAAC,CAAA;IACJ,CAAC;;AAXM,OAAA,cAAA,CAAA,uBAAA,QAAA;;;;WAAO,CAAC,KAAc;GAAA;AAuBzB,MAAO,gBAAiB,SAAQ,QAAQ;IAG5C,YAAY,KAAY,CAAA;QACtB,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,gBAAgB,CAAC,IAAI;YAC3B,IAAI,EAAE,kBAAkB;YACxB,YAAY,EAAE,iCAAiC;SAChD,CAAC,CAAA;IACJ,CAAC;;AARM,OAAA,cAAA,CAAA,kBAAA,QAAA;;;;WAAO,CAAC,KAAc;GAAA;AAoBzB,MAAO,oBAAqB,SAAQ,QAAQ;IAGhD,YAAY,KAAY,CAAA;QACtB,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,oBAAoB,CAAC,IAAI;YAC/B,IAAI,EAAE,sBAAsB;YAC5B,YAAY,EAAE;gBACZ,gCAAgC;gBAChC,wDAAwD;aACzD,CAAC,IAAI,CAAC,IAAI,CAAC;SACb,CAAC,CAAA;IACJ,CAAC;;AAXM,OAAA,cAAA,CAAA,sBAAA,QAAA;;;;WAAO,CAAC,KAAc;GAAA;AAuBzB,MAAO,wBAAyB,SAAQ,QAAQ;IAIpD,YAAY,KAAY,CAAA;QACtB,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,wBAAwB,CAAC,IAAI;YACnC,IAAI,EAAE,0BAA0B;YAChC,YAAY,EAAE,+BAA+B;SAC9C,CAAC,CAAA;QARK,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,0BAA0B;WAAA;IAS1C,CAAC;;AARM,OAAA,cAAA,CAAA,0BAAA,QAAA;;;;WAAO,CAAC,KAAc;EAAlB,CAAkB;AAoBzB,MAAO,2BAA4B,SAAQ,QAAQ;IAGvD,YAAY,KAAY,CAAA;QACtB,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,2BAA2B,CAAC,IAAI;YACtC,IAAI,EAAE,6BAA6B;YACnC,YAAY,EAAE,mCAAmC;SAClD,CAAC,CAAA;IACJ,CAAC;;AARM,OAAA,cAAA,CAAA,6BAAA,QAAA;;;;WAAO,CAAC,KAAc;GAAA;AAoBzB,MAAO,2BAA4B,SAAQ,QAAQ;IAGvD,YAAY,KAAY,CAAA;QACtB,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,2BAA2B,CAAC,IAAI;YACtC,IAAI,EAAE,6BAA6B;YACnC,YAAY,EAAE,8BAA8B;SAC7C,CAAC,CAAA;IACJ,CAAC;;AARM,OAAA,cAAA,CAAA,6BAAA,QAAA;;;;WAAO,CAAC,KAAc;GAAA;AAoBzB,MAAO,0BAA2B,SAAQ,QAAQ;IAGtD,YAAY,KAAY,EAAE,EAAE,MAAM,EAAA,GAA0B,CAAA,CAAE,CAAA;QAC5D,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,0BAA0B,CAAC,IAAI;YACrC,IAAI,EAAE,4BAA4B;YAClC,YAAY,EAAE,CAAA,MAAA,EAAS,MAAM,CAAC,CAAC,CAAC,CAAA,EAAA,EAAK,MAAM,CAAA,CAAA,CAAG,CAAC,CAAC,CAAC,EAAE,CAAA,kBAAA,CAAoB;SACxE,CAAC,CAAA;IACJ,CAAC;;AARM,OAAA,cAAA,CAAA,4BAAA,QAAA;;;;WAAO,CAAC,KAAc;GAAA;AAoBzB,MAAO,qBAAsB,SAAQ,QAAQ;IAGjD,YAAY,KAAY,CAAA;QACtB,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,qBAAqB,CAAC,IAAI;YAChC,IAAI,EAAE,uBAAuB;YAC7B,YAAY,EAAE,gCAAgC;SAC/C,CAAC,CAAA;IACJ,CAAC;;AARM,OAAA,cAAA,CAAA,uBAAA,QAAA;;;;WAAO,CAAC,KAAc;GAAA;AAqBzB,MAAO,8BAA+B,SAAQ,QAAQ;IAG1D,YAAY,KAAY,CAAA;QACtB,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,8BAA8B,CAAC,IAAI;YACzC,IAAI,EAAE,gCAAgC;YACtC,YAAY,EAAE,gDAAgD;SAC/D,CAAC,CAAA;IACJ,CAAC;;AARM,OAAA,cAAA,CAAA,gCAAA,QAAA;;;;WAAO,CAAC,KAAc;GAAA;AAoBzB,MAAO,wBAAyB,SAAQ,gBAAgB;IAG5D,YAAY,KAAY,CAAA;QACtB,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,wBAAwB,CAAC,IAAI;YACnC,IAAI,EAAE,0BAA0B;YAChC,YAAY,EAAE,4BAA4B;SAC3C,CAAC,CAAA;IACJ,CAAC;;AARM,OAAA,cAAA,CAAA,0BAAA,QAAA;;;;WAAO,IAAa;GAAA;AAoBvB,MAAO,yBAA0B,SAAQ,gBAAgB;IAG7D,YAAY,KAAY,CAAA;QACtB,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,yBAAyB,CAAC,IAAI;YACpC,IAAI,EAAE,2BAA2B;YACjC,YAAY,EACV,0EAA0E;SAC7E,CAAC,CAAA;IACJ,CAAC;;AATM,OAAA,cAAA,CAAA,2BAAA,QAAA;;;;WAAO,IAAa;GAAA;AAsBvB,MAAO,8BAA+B,SAAQ,gBAAgB;IAGlE,YAAY,KAAY,EAAE,EAAE,MAAM,EAAA,GAA0B,CAAA,CAAE,CAAA;QAC5D,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,8BAA8B,CAAC,IAAI;YACzC,IAAI,EAAE,gCAAgC;YACtC,YAAY,EAAE,CAAA,kDAAA,EAAqD,MAAM,CAAC,CAAC,CAAC,CAAA,GAAA,EAAM,MAAM,CAAA,CAAA,CAAG,CAAC,CAAC,CAAC,EAAE,CAAA,CAAA,CAAG;SACpG,CAAC,CAAA;IACJ,CAAC;;AARM,OAAA,cAAA,CAAA,gCAAA,QAAA;;;;WAAO,IAAa;GAAA;AAoBvB,MAAO,yBAA0B,SAAQ,gBAAgB;IAG7D,YAAY,KAAY,CAAA;QACtB,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,yBAAyB,CAAC,IAAI;YACpC,IAAI,EAAE,2BAA2B;YACjC,YAAY,EAAE,+CAA+C;SAC9D,CAAC,CAAA;IACJ,CAAC;;AARM,OAAA,cAAA,CAAA,2BAAA,QAAA;;;;WAAO,IAAa;GAAA;AAoBvB,MAAO,sBAAuB,SAAQ,gBAAgB;IAG1D,YAAY,KAAY,CAAA;QACtB,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,sBAAsB,CAAC,IAAI;YACjC,IAAI,EAAE,wBAAwB;YAC9B,YAAY,EAAE,uDAAuD;SACtE,CAAC,CAAA;IACJ,CAAC;;AARM,OAAA,cAAA,CAAA,wBAAA,QAAA;;;;WAAO,IAAa;GAAA;AAoBvB,MAAO,gBAAiB,SAAQ,gBAAgB;IAGpD,YAAY,KAAY,CAAA;QACtB,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,gBAAgB,CAAC,IAAI;YAC3B,IAAI,EAAE,kBAAkB;YACxB,YAAY,EAAE,oDAAoD;SACnE,CAAC,CAAA;IACJ,CAAC;;AARM,OAAA,cAAA,CAAA,kBAAA,QAAA;;;;WAAO,IAAa;GAAA;AAiBvB,MAAO,eAAgB,SAAQ,QAAQ;IAC3C,YAAY,KAAY,CAAA;QACtB,KAAK,CAAC,KAAK,EAAE;YACX,IAAI,EAAE,iBAAiB;YACvB,YAAY,EAAE,gCAAgC;SAC/C,CAAC,CAAA;IACJ,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 1718, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1724, "column": 0}, "map": {"version":3,"file":"chain.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/chain.ts"],"sourcesContent":["import type { Chain } from '../types/chain.js'\n\nimport { BaseError } from './base.js'\n\nexport type ChainDoesNotSupportContractErrorType =\n  ChainDoesNotSupportContract & {\n    name: 'ChainDoesNotSupportContract'\n  }\nexport class ChainDoesNotSupportContract extends BaseError {\n  constructor({\n    blockNumber,\n    chain,\n    contract,\n  }: {\n    blockNumber?: bigint | undefined\n    chain: Chain\n    contract: { name: string; blockCreated?: number | undefined }\n  }) {\n    super(\n      `Chain \"${chain.name}\" does not support contract \"${contract.name}\".`,\n      {\n        metaMessages: [\n          'This could be due to any of the following:',\n          ...(blockNumber &&\n          contract.blockCreated &&\n          contract.blockCreated > blockNumber\n            ? [\n                `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n              ]\n            : [\n                `- The chain does not have the contract \"${contract.name}\" configured.`,\n              ]),\n        ],\n        name: 'ChainDoesNotSupportContract',\n      },\n    )\n  }\n}\n\nexport type ChainMismatchErrorType = ChainMismatchError & {\n  name: 'ChainMismatchError'\n}\nexport class ChainMismatchError extends BaseError {\n  constructor({\n    chain,\n    currentChainId,\n  }: {\n    chain: Chain\n    currentChainId: number\n  }) {\n    super(\n      `The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`,\n      {\n        metaMessages: [\n          `Current Chain ID:  ${currentChainId}`,\n          `Expected Chain ID: ${chain.id} – ${chain.name}`,\n        ],\n        name: 'ChainMismatchError',\n      },\n    )\n  }\n}\n\nexport type ChainNotFoundErrorType = ChainNotFoundError & {\n  name: 'ChainNotFoundError'\n}\nexport class ChainNotFoundError extends BaseError {\n  constructor() {\n    super(\n      [\n        'No chain was provided to the request.',\n        'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n      ].join('\\n'),\n      {\n        name: 'ChainNotFoundError',\n      },\n    )\n  }\n}\n\nexport type ClientChainNotConfiguredErrorType =\n  ClientChainNotConfiguredError & {\n    name: 'ClientChainNotConfiguredError'\n  }\nexport class ClientChainNotConfiguredError extends BaseError {\n  constructor() {\n    super('No chain was provided to the Client.', {\n      name: 'ClientChainNotConfiguredError',\n    })\n  }\n}\n\nexport type InvalidChainIdErrorType = InvalidChainIdError & {\n  name: 'InvalidChainIdError'\n}\nexport class InvalidChainIdError extends BaseError {\n  constructor({ chainId }: { chainId?: number | undefined }) {\n    super(\n      typeof chainId === 'number'\n        ? `Chain ID \"${chainId}\" is invalid.`\n        : 'Chain ID is invalid.',\n      { name: 'InvalidChainIdError' },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAEA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAM/B,MAAO,2BAA4B,wJAAQ,YAAS;IACxD,YAAY,EACV,WAAW,EACX,KAAK,EACL,QAAQ,EAKT,CAAA;QACC,KAAK,CACH,CAAA,OAAA,EAAU,KAAK,CAAC,IAAI,CAAA,6BAAA,EAAgC,QAAQ,CAAC,IAAI,CAAA,EAAA,CAAI,EACrE;YACE,YAAY,EAAE;gBACZ,4CAA4C;mBACxC,WAAW,IACf,QAAQ,CAAC,YAAY,IACrB,QAAQ,CAAC,YAAY,GAAG,WAAW,GAC/B;oBACE,CAAA,gBAAA,EAAmB,QAAQ,CAAC,IAAI,CAAA,+BAAA,EAAkC,QAAQ,CAAC,YAAY,CAAA,gBAAA,EAAmB,WAAW,CAAA,EAAA,CAAI;iBAC1H,GACD;oBACE,CAAA,wCAAA,EAA2C,QAAQ,CAAC,IAAI,CAAA,aAAA,CAAe;iBACxE,CAAC;aACP;YACD,IAAI,EAAE,6BAA6B;SACpC,CACF,CAAA;IACH,CAAC;CACF;AAKK,MAAO,kBAAmB,wJAAQ,YAAS;IAC/C,YAAY,EACV,KAAK,EACL,cAAc,EAIf,CAAA;QACC,KAAK,CACH,CAAA,qCAAA,EAAwC,cAAc,CAAA,2DAAA,EAA8D,KAAK,CAAC,EAAE,CAAA,GAAA,EAAM,KAAK,CAAC,IAAI,CAAA,EAAA,CAAI,EAChJ;YACE,YAAY,EAAE;gBACZ,CAAA,mBAAA,EAAsB,cAAc,EAAE;gBACtC,CAAA,mBAAA,EAAsB,KAAK,CAAC,EAAE,CAAA,GAAA,EAAM,KAAK,CAAC,IAAI,EAAE;aACjD;YACD,IAAI,EAAE,oBAAoB;SAC3B,CACF,CAAA;IACH,CAAC;CACF;AAKK,MAAO,kBAAmB,wJAAQ,YAAS;IAC/C,aAAA;QACE,KAAK,CACH;YACE,uCAAuC;YACvC,4GAA4G;SAC7G,CAAC,IAAI,CAAC,IAAI,CAAC,EACZ;YACE,IAAI,EAAE,oBAAoB;SAC3B,CACF,CAAA;IACH,CAAC;CACF;AAMK,MAAO,6BAA8B,wJAAQ,YAAS;IAC1D,aAAA;QACE,KAAK,CAAC,sCAAsC,EAAE;YAC5C,IAAI,EAAE,+BAA+B;SACtC,CAAC,CAAA;IACJ,CAAC;CACF;AAKK,MAAO,mBAAoB,wJAAQ,YAAS;IAChD,YAAY,EAAE,OAAO,EAAoC,CAAA;QACvD,KAAK,CACH,OAAO,OAAO,KAAK,QAAQ,GACvB,CAAA,UAAA,EAAa,OAAO,CAAA,aAAA,CAAe,GACnC,sBAAsB,EAC1B;YAAE,IAAI,EAAE,qBAAqB;QAAA,CAAE,CAChC,CAAA;IACH,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 1783, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1789, "column": 0}, "map": {"version":3,"file":"ens.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/ens.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type EnsAvatarInvalidMetadataErrorType =\n  EnsAvatarInvalidMetadataError & {\n    name: 'EnsAvatarInvalidMetadataError'\n  }\nexport class EnsAvatarInvalidMetadataError extends BaseError {\n  constructor({ data }: { data: any }) {\n    super(\n      'Unable to extract image from metadata. The metadata may be malformed or invalid.',\n      {\n        metaMessages: [\n          '- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.',\n          '',\n          `Provided data: ${JSON.stringify(data)}`,\n        ],\n        name: 'EnsAvatarInvalidMetadataError',\n      },\n    )\n  }\n}\n\nexport type EnsAvatarInvalidNftUriErrorType = EnsAvatarInvalidNftUriError & {\n  name: 'EnsAvatarInvalidNftUriError'\n}\nexport class EnsAvatarInvalidNftUriError extends BaseError {\n  constructor({ reason }: { reason: string }) {\n    super(`ENS NFT avatar URI is invalid. ${reason}`, {\n      name: 'EnsAvatarInvalidNftUriError',\n    })\n  }\n}\n\nexport type EnsAvatarUriResolutionErrorType = EnsAvatarUriResolutionError & {\n  name: 'EnsAvatarUriResolutionError'\n}\nexport class EnsAvatarUriResolutionError extends BaseError {\n  constructor({ uri }: { uri: string }) {\n    super(\n      `Unable to resolve ENS avatar URI \"${uri}\". The URI may be malformed, invalid, or does not respond with a valid image.`,\n      { name: 'EnsAvatarUriResolutionError' },\n    )\n  }\n}\n\nexport type EnsAvatarUnsupportedNamespaceErrorType =\n  EnsAvatarUnsupportedNamespaceError & {\n    name: 'EnsAvatarUnsupportedNamespaceError'\n  }\nexport class EnsAvatarUnsupportedNamespaceError extends BaseError {\n  constructor({ namespace }: { namespace: string }) {\n    super(\n      `ENS NFT avatar namespace \"${namespace}\" is not supported. Must be \"erc721\" or \"erc1155\".`,\n      { name: 'EnsAvatarUnsupportedNamespaceError' },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAM/B,MAAO,6BAA8B,wJAAQ,YAAS;IAC1D,YAAY,EAAE,IAAI,EAAiB,CAAA;QACjC,KAAK,CACH,kFAAkF,EAClF;YACE,YAAY,EAAE;gBACZ,kGAAkG;gBAClG,EAAE;gBACF,CAAA,eAAA,EAAkB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;aACzC;YACD,IAAI,EAAE,+BAA+B;SACtC,CACF,CAAA;IACH,CAAC;CACF;AAKK,MAAO,2BAA4B,wJAAQ,YAAS;IACxD,YAAY,EAAE,MAAM,EAAsB,CAAA;QACxC,KAAK,CAAC,CAAA,+BAAA,EAAkC,MAAM,EAAE,EAAE;YAChD,IAAI,EAAE,6BAA6B;SACpC,CAAC,CAAA;IACJ,CAAC;CACF;AAKK,MAAO,2BAA4B,wJAAQ,YAAS;IACxD,YAAY,EAAE,GAAG,EAAmB,CAAA;QAClC,KAAK,CACH,CAAA,kCAAA,EAAqC,GAAG,CAAA,6EAAA,CAA+E,EACvH;YAAE,IAAI,EAAE,6BAA6B;QAAA,CAAE,CACxC,CAAA;IACH,CAAC;CACF;AAMK,MAAO,kCAAmC,wJAAQ,YAAS;IAC/D,YAAY,EAAE,SAAS,EAAyB,CAAA;QAC9C,KAAK,CACH,CAAA,0BAAA,EAA6B,SAAS,CAAA,kDAAA,CAAoD,EAC1F;YAAE,IAAI,EAAE,oCAAoC;QAAA,CAAE,CAC/C,CAAA;IACH,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 1830, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1836, "column": 0}, "map": {"version":3,"file":"estimateGas.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/estimateGas.ts"],"sourcesContent":["import type { Account } from '../accounts/types.js'\nimport type { EstimateGasParameters } from '../actions/public/estimateGas.js'\nimport type { Chain } from '../types/chain.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\nimport { prettyPrint } from './transaction.js'\n\nexport type EstimateGasExecutionErrorType = EstimateGasExecutionError & {\n  name: 'EstimateGasExecutionError'\n}\nexport class EstimateGasExecutionError extends BaseError {\n  override cause: BaseError\n\n  constructor(\n    cause: BaseError,\n    {\n      account,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: Omit<EstimateGasParameters<any>, 'account'> & {\n      account?: Account | undefined\n      chain?: Chain | undefined\n      docsPath?: string | undefined\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Estimate Gas Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n      name: 'EstimateGasExecutionError',\n    })\n    this.cause = cause\n  }\n}\n"],"names":[],"mappings":";;;AAOA,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAA;AAJ9C,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAA;AAC1D,OAAO,EAAE,UAAU,EAAE,MAAM,6BAA6B,CAAA;AAExD,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;;;;AAM/B,MAAO,yBAA0B,wJAAQ,YAAS;IAGtD,YACE,KAAgB,EAChB,EACE,OAAO,EACP,QAAQ,EACR,KAAK,EACL,IAAI,EACJ,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,oBAAoB,EACpB,KAAK,EACL,EAAE,EACF,KAAK,EAKN,CAAA;QAED,MAAM,UAAU,6JAAG,cAAA,AAAW,EAAC;YAC7B,IAAI,EAAE,OAAO,EAAE,OAAO;YACtB,EAAE;YACF,KAAK,EACH,OAAO,KAAK,KAAK,WAAW,IAC5B,oKAAG,cAAA,AAAW,EAAC,KAAK,CAAC,CAAA,CAAA,EAAI,KAAK,EAAE,cAAc,EAAE,MAAM,IAAI,KAAK,EAAE;YACnE,IAAI;YACJ,GAAG;YACH,QAAQ,EACN,OAAO,QAAQ,KAAK,WAAW,IAAI,mKAAG,aAAA,AAAU,EAAC,QAAQ,CAAC,CAAA,KAAA,CAAO;YACnE,YAAY,EACV,OAAO,YAAY,KAAK,WAAW,IACnC,GAAG,6KAAA,AAAU,EAAC,YAAY,CAAC,CAAA,KAAA,CAAO;YACpC,oBAAoB,EAClB,OAAO,oBAAoB,KAAK,WAAW,IAC3C,mKAAG,aAAA,AAAU,EAAC,oBAAoB,CAAC,CAAA,KAAA,CAAO;YAC5C,KAAK;SACN,CAAC,CAAA;QAEF,KAAK,CAAC,KAAK,CAAC,YAAY,EAAE;YACxB,KAAK;YACL,QAAQ;YACR,YAAY,EAAE;mBACR,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;uBAAG,KAAK,CAAC,YAAY;oBAAE,GAAG;iBAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC3D,yBAAyB;gBACzB,UAAU;aACX,CAAC,MAAM,CAAC,OAAO,CAAa;YAC7B,IAAI,EAAE,2BAA2B;SAClC,CAAC,CAAA;QAlDK,OAAA,cAAA,CAAA,IAAA,EAAA,SAAA;;;;;WAAgB;QAmDvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;IACpB,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 1882, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1888, "column": 0}, "map": {"version":3,"file":"node.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/node.ts"],"sourcesContent":["import { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\n/**\n * geth:    https://github.com/ethereum/go-ethereum/blob/master/core/error.go\n *          https://github.com/ethereum/go-ethereum/blob/master/core/types/transaction.go#L34-L41\n *\n * erigon:  https://github.com/ledgerwatch/erigon/blob/master/core/error.go\n *          https://github.com/ledgerwatch/erigon/blob/master/core/types/transaction.go#L41-L46\n *\n * anvil:   https://github.com/foundry-rs/foundry/blob/master/anvil/src/eth/error.rs#L108\n */\nexport type ExecutionRevertedErrorType = ExecutionRevertedError & {\n  code: 3\n  name: 'ExecutionRevertedError'\n}\nexport class ExecutionRevertedError extends BaseError {\n  static code = 3\n  static nodeMessage = /execution reverted/\n\n  constructor({\n    cause,\n    message,\n  }: { cause?: BaseError | undefined; message?: string | undefined } = {}) {\n    const reason = message\n      ?.replace('execution reverted: ', '')\n      ?.replace('execution reverted', '')\n    super(\n      `Execution reverted ${\n        reason ? `with reason: ${reason}` : 'for an unknown reason'\n      }.`,\n      {\n        cause,\n        name: 'ExecutionRevertedError',\n      },\n    )\n  }\n}\n\nexport type FeeCapTooHighErrorType = FeeCapTooHighError & {\n  name: 'FeeCapTooHighError'\n}\nexport class FeeCapTooHighError extends BaseError {\n  static nodeMessage =\n    /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n      }) cannot be higher than the maximum allowed value (2^256-1).`,\n      {\n        cause,\n        name: 'FeeCapTooHighError',\n      },\n    )\n  }\n}\n\nexport type FeeCapTooLowErrorType = FeeCapTooLowError & {\n  name: 'FeeCapTooLowError'\n}\nexport class FeeCapTooLowError extends BaseError {\n  static nodeMessage =\n    /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''\n      } gwei) cannot be lower than the block base fee.`,\n      {\n        cause,\n        name: 'FeeCapTooLowError',\n      },\n    )\n  }\n}\n\nexport type NonceTooHighErrorType = NonceTooHighError & {\n  name: 'NonceTooHighError'\n}\nexport class NonceTooHighError extends BaseError {\n  static nodeMessage = /nonce too high/\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }is higher than the next one expected.`,\n      { cause, name: 'NonceTooHighError' },\n    )\n  }\n}\n\nexport type NonceTooLowErrorType = NonceTooLowError & {\n  name: 'NonceTooLowError'\n}\nexport class NonceTooLowError extends BaseError {\n  static nodeMessage =\n    /nonce too low|transaction already imported|already known/\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      [\n        `Nonce provided for the transaction ${\n          nonce ? `(${nonce}) ` : ''\n        }is lower than the current nonce of the account.`,\n        'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n      ].join('\\n'),\n      { cause, name: 'NonceTooLowError' },\n    )\n  }\n}\n\nexport type NonceMaxValueErrorType = NonceMaxValueError & {\n  name: 'NonceMaxValueError'\n}\nexport class NonceMaxValueError extends BaseError {\n  static nodeMessage = /nonce has max value/\n  constructor({\n    cause,\n    nonce,\n  }: { cause?: BaseError | undefined; nonce?: number | undefined } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }exceeds the maximum allowed nonce.`,\n      { cause, name: 'NonceMaxValueError' },\n    )\n  }\n}\n\nexport type InsufficientFundsErrorType = InsufficientFundsError & {\n  name: 'InsufficientFundsError'\n}\nexport class InsufficientFundsError extends BaseError {\n  static nodeMessage =\n    /insufficient funds|exceeds transaction sender account balance/\n  constructor({ cause }: { cause?: BaseError | undefined } = {}) {\n    super(\n      [\n        'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n      ].join('\\n'),\n      {\n        cause,\n        metaMessages: [\n          'This error could arise when the account does not have enough funds to:',\n          ' - pay for the total gas fee,',\n          ' - pay for the value to send.',\n          ' ',\n          'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n          ' - `gas` is the amount of gas needed for transaction to execute,',\n          ' - `gas fee` is the gas fee,',\n          ' - `value` is the amount of ether to send to the recipient.',\n        ],\n        name: 'InsufficientFundsError',\n      },\n    )\n  }\n}\n\nexport type IntrinsicGasTooHighErrorType = IntrinsicGasTooHighError & {\n  name: 'IntrinsicGasTooHighError'\n}\nexport class IntrinsicGasTooHighError extends BaseError {\n  static nodeMessage = /intrinsic gas too high|gas limit reached/\n  constructor({\n    cause,\n    gas,\n  }: { cause?: BaseError | undefined; gas?: bigint | undefined } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction exceeds the limit allowed for the block.`,\n      {\n        cause,\n        name: 'IntrinsicGasTooHighError',\n      },\n    )\n  }\n}\n\nexport type IntrinsicGasTooLowErrorType = IntrinsicGasTooLowError & {\n  name: 'IntrinsicGasTooLowError'\n}\nexport class IntrinsicGasTooLowError extends BaseError {\n  static nodeMessage = /intrinsic gas too low/\n  constructor({\n    cause,\n    gas,\n  }: { cause?: BaseError | undefined; gas?: bigint | undefined } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction is too low.`,\n      {\n        cause,\n        name: 'IntrinsicGasTooLowError',\n      },\n    )\n  }\n}\n\nexport type TransactionTypeNotSupportedErrorType =\n  TransactionTypeNotSupportedError & {\n    name: 'TransactionTypeNotSupportedError'\n  }\nexport class TransactionTypeNotSupportedError extends BaseError {\n  static nodeMessage = /transaction type not valid/\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super('The transaction type is not supported for this chain.', {\n      cause,\n      name: 'TransactionTypeNotSupportedError',\n    })\n  }\n}\n\nexport type TipAboveFeeCapErrorType = TipAboveFeeCapError & {\n  name: 'TipAboveFeeCapError'\n}\nexport class TipAboveFeeCapError extends BaseError {\n  static nodeMessage =\n    /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n  constructor({\n    cause,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError | undefined\n    maxPriorityFeePerGas?: bigint | undefined\n    maxFeePerGas?: bigint | undefined\n  } = {}) {\n    super(\n      [\n        `The provided tip (\\`maxPriorityFeePerGas\\`${\n          maxPriorityFeePerGas\n            ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n            : ''\n        }) cannot be higher than the fee cap (\\`maxFeePerGas\\`${\n          maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n        }).`,\n      ].join('\\n'),\n      {\n        cause,\n        name: 'TipAboveFeeCapError',\n      },\n    )\n  }\n}\n\nexport type UnknownNodeErrorType = UnknownNodeError & {\n  name: 'UnknownNodeError'\n}\nexport class UnknownNodeError extends BaseError {\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(`An error occurred while executing: ${cause?.shortMessage}`, {\n      cause,\n      name: 'UnknownNodeError',\n    })\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2092, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2098, "column": 0}, "map": {"version":3,"file":"log.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/log.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type FilterTypeNotSupportedErrorType = FilterTypeNotSupportedError & {\n  name: 'FilterTypeNotSupportedError'\n}\nexport class FilterTypeNotSupportedError extends BaseError {\n  constructor(type: string) {\n    super(`Filter type \"${type}\" is not supported.`, {\n      name: 'FilterTypeNotSupportedError',\n    })\n  }\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAK/B,MAAO,2BAA4B,wJAAQ,YAAS;IACxD,YAAY,IAAY,CAAA;QACtB,KAAK,CAAC,CAAA,aAAA,EAAgB,IAAI,CAAA,mBAAA,CAAqB,EAAE;YAC/C,IAAI,EAAE,6BAA6B;SACpC,CAAC,CAAA;IACJ,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 2110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2116, "column": 0}, "map": {"version":3,"file":"unit.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/unit.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type InvalidDecimalNumberErrorType = InvalidDecimalNumberError & {\n  name: 'InvalidDecimalNumberError'\n}\nexport class InvalidDecimalNumberError extends BaseError {\n  constructor({ value }: { value: string }) {\n    super(`Number \\`${value}\\` is not a valid decimal number.`, {\n      name: 'InvalidDecimalNumberError',\n    })\n  }\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAK/B,MAAO,yBAA0B,wJAAQ,YAAS;IACtD,YAAY,EAAE,KAAK,EAAqB,CAAA;QACtC,KAAK,CAAC,CAAA,SAAA,EAAY,KAAK,CAAA,iCAAA,CAAmC,EAAE;YAC1D,IAAI,EAAE,2BAA2B;SAClC,CAAC,CAAA;IACJ,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 2128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2134, "column": 0}, "map": {"version":3,"file":"typedData.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/typedData.ts"],"sourcesContent":["import type { TypedData } from 'abitype'\n\nimport { stringify } from '../utils/stringify.js'\nimport { BaseError } from './base.js'\n\nexport type InvalidDomainErrorType = InvalidDomainError & {\n  name: 'InvalidDomainError'\n}\nexport class InvalidDomainError extends BaseError {\n  constructor({ domain }: { domain: unknown }) {\n    super(`Invalid domain \"${stringify(domain)}\".`, {\n      metaMessages: ['Must be a valid EIP-712 domain.'],\n    })\n  }\n}\n\nexport type InvalidPrimaryTypeErrorType = InvalidPrimaryTypeError & {\n  name: 'InvalidPrimaryTypeError'\n}\nexport class InvalidPrimaryTypeError extends BaseError {\n  constructor({\n    primaryType,\n    types,\n  }: { primaryType: string; types: TypedData | Record<string, unknown> }) {\n    super(\n      `Invalid primary type \\`${primaryType}\\` must be one of \\`${JSON.stringify(Object.keys(types))}\\`.`,\n      {\n        docsPath: '/api/glossary/Errors#typeddatainvalidprimarytypeerror',\n        metaMessages: ['Check that the primary type is a key in `types`.'],\n      },\n    )\n  }\n}\n\nexport type InvalidStructTypeErrorType = InvalidStructTypeError & {\n  name: 'InvalidStructTypeError'\n}\nexport class InvalidStructTypeError extends BaseError {\n  constructor({ type }: { type: string }) {\n    super(`Struct type \"${type}\" is invalid.`, {\n      metaMessages: ['Struct type must not be a Solidity type.'],\n      name: 'InvalidStructTypeError',\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA,OAAO,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAA;AACjD,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;;AAK/B,MAAO,kBAAmB,wJAAQ,YAAS;IAC/C,YAAY,EAAE,MAAM,EAAuB,CAAA;QACzC,KAAK,CAAC,CAAA,gBAAA,yJAAmB,YAAA,AAAS,EAAC,MAAM,CAAC,CAAA,EAAA,CAAI,EAAE;YAC9C,YAAY,EAAE;gBAAC,iCAAiC;aAAC;SAClD,CAAC,CAAA;IACJ,CAAC;CACF;AAKK,MAAO,uBAAwB,wJAAQ,YAAS;IACpD,YAAY,EACV,WAAW,EACX,KAAK,EAC+D,CAAA;QACpE,KAAK,CACH,CAAA,uBAAA,EAA0B,WAAW,CAAA,oBAAA,EAAuB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA,GAAA,CAAK,EACnG;YACE,QAAQ,EAAE,uDAAuD;YACjE,YAAY,EAAE;gBAAC,kDAAkD;aAAC;SACnE,CACF,CAAA;IACH,CAAC;CACF;AAKK,MAAO,sBAAuB,wJAAQ,YAAS;IACnD,YAAY,EAAE,IAAI,EAAoB,CAAA;QACpC,KAAK,CAAC,CAAA,aAAA,EAAgB,IAAI,CAAA,aAAA,CAAe,EAAE;YACzC,YAAY,EAAE;gBAAC,0CAA0C;aAAC;YAC1D,IAAI,EAAE,wBAAwB;SAC/B,CAAC,CAAA;IACJ,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 2172, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2178, "column": 0}, "map": {"version":3,"file":"transport.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/transport.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type UrlRequiredErrorType = UrlRequiredError & {\n  name: 'UrlRequiredError'\n}\nexport class UrlRequiredError extends BaseError {\n  constructor() {\n    super(\n      'No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.',\n      {\n        docsPath: '/docs/clients/intro',\n        name: 'UrlRequiredError',\n      },\n    )\n  }\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAK/B,MAAO,gBAAiB,wJAAQ,YAAS;IAC7C,aAAA;QACE,KAAK,CACH,wFAAwF,EACxF;YACE,QAAQ,EAAE,qBAAqB;YAC/B,IAAI,EAAE,kBAAkB;SACzB,CACF,CAAA;IACH,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 2191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2197, "column": 0}, "map": {"version":3,"file":"blob.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/blob.ts"],"sourcesContent":["import { versionedHashVersionKzg } from '../constants/kzg.js'\nimport type { Hash } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type BlobSizeTooLargeErrorType = BlobSizeTooLargeError & {\n  name: 'BlobSizeTooLargeError'\n}\nexport class BlobSizeTooLargeError extends BaseError {\n  constructor({ maxSize, size }: { maxSize: number; size: number }) {\n    super('Blob size is too large.', {\n      metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n      name: 'BlobSizeTooLargeError',\n    })\n  }\n}\n\nexport type EmptyBlobErrorType = EmptyBlobError & {\n  name: 'EmptyBlobError'\n}\nexport class EmptyBlobError extends BaseError {\n  constructor() {\n    super('Blob data must not be empty.', { name: 'EmptyBlobError' })\n  }\n}\n\nexport type InvalidVersionedHashSizeErrorType =\n  InvalidVersionedHashSizeError & {\n    name: 'InvalidVersionedHashSizeError'\n  }\nexport class InvalidVersionedHashSizeError extends BaseError {\n  constructor({\n    hash,\n    size,\n  }: {\n    hash: Hash\n    size: number\n  }) {\n    super(`Versioned hash \"${hash}\" size is invalid.`, {\n      metaMessages: ['Expected: 32', `Received: ${size}`],\n      name: 'InvalidVersionedHashSizeError',\n    })\n  }\n}\n\nexport type InvalidVersionedHashVersionErrorType =\n  InvalidVersionedHashVersionError & {\n    name: 'InvalidVersionedHashVersionError'\n  }\nexport class InvalidVersionedHashVersionError extends BaseError {\n  constructor({\n    hash,\n    version,\n  }: {\n    hash: Hash\n    version: number\n  }) {\n    super(`Versioned hash \"${hash}\" version is invalid.`, {\n      metaMessages: [\n        `Expected: ${versionedHashVersionKzg}`,\n        `Received: ${version}`,\n      ],\n      name: 'InvalidVersionedHashVersionError',\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;;AAGA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;AAHrC,OAAO,EAAE,uBAAuB,EAAE,MAAM,qBAAqB,CAAA;;;AAQvD,MAAO,qBAAsB,wJAAQ,YAAS;IAClD,YAAY,EAAE,OAAO,EAAE,IAAI,EAAqC,CAAA;QAC9D,KAAK,CAAC,yBAAyB,EAAE;YAC/B,YAAY,EAAE;gBAAC,CAAA,KAAA,EAAQ,OAAO,CAAA,MAAA,CAAQ;gBAAE,CAAA,OAAA,EAAU,IAAI,CAAA,MAAA,CAAQ;aAAC;YAC/D,IAAI,EAAE,uBAAuB;SAC9B,CAAC,CAAA;IACJ,CAAC;CACF;AAKK,MAAO,cAAe,SAAQ,2JAAS;IAC3C,aAAA;QACE,KAAK,CAAC,8BAA8B,EAAE;YAAE,IAAI,EAAE,gBAAgB;QAAA,CAAE,CAAC,CAAA;IACnE,CAAC;CACF;AAMK,MAAO,6BAA8B,SAAQ,2JAAS;IAC1D,YAAY,EACV,IAAI,EACJ,IAAI,EAIL,CAAA;QACC,KAAK,CAAC,CAAA,gBAAA,EAAmB,IAAI,CAAA,kBAAA,CAAoB,EAAE;YACjD,YAAY,EAAE;gBAAC,cAAc;gBAAE,CAAA,UAAA,EAAa,IAAI,EAAE;aAAC;YACnD,IAAI,EAAE,+BAA+B;SACtC,CAAC,CAAA;IACJ,CAAC;CACF;AAMK,MAAO,gCAAiC,wJAAQ,YAAS;IAC7D,YAAY,EACV,IAAI,EACJ,OAAO,EAIR,CAAA;QACC,KAAK,CAAC,CAAA,gBAAA,EAAmB,IAAI,CAAA,qBAAA,CAAuB,EAAE;YACpD,YAAY,EAAE;gBACZ,CAAA,UAAA,mJAAa,0BAAuB,EAAE;gBACtC,CAAA,UAAA,EAAa,OAAO,EAAE;aACvB;YACD,IAAI,EAAE,kCAAkC;SACzC,CAAC,CAAA;IACJ,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 2247, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2253, "column": 0}, "map": {"version":3,"file":"ccip.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/ccip.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Hex } from '../types/misc.js'\nimport { stringify } from '../utils/stringify.js'\n\nimport { BaseError } from './base.js'\nimport { getUrl } from './utils.js'\n\nexport type OffchainLookupErrorType = OffchainLookupError & {\n  name: 'OffchainLookupError'\n}\nexport class OffchainLookupError extends BaseError {\n  constructor({\n    callbackSelector,\n    cause,\n    data,\n    extraData,\n    sender,\n    urls,\n  }: {\n    callbackSelector: Hex\n    cause: BaseError\n    data: Hex\n    extraData: Hex\n    sender: Address\n    urls: readonly string[]\n  }) {\n    super(\n      cause.shortMessage ||\n        'An error occurred while fetching for an offchain result.',\n      {\n        cause,\n        metaMessages: [\n          ...(cause.metaMessages || []),\n          cause.metaMessages?.length ? '' : [],\n          'Offchain Gateway Call:',\n          urls && [\n            '  Gateway URL(s):',\n            ...urls.map((url) => `    ${getUrl(url)}`),\n          ],\n          `  Sender: ${sender}`,\n          `  Data: ${data}`,\n          `  Callback selector: ${callbackSelector}`,\n          `  Extra data: ${extraData}`,\n        ].flat(),\n        name: 'OffchainLookupError',\n      },\n    )\n  }\n}\n\nexport type OffchainLookupResponseMalformedErrorType =\n  OffchainLookupResponseMalformedError & {\n    name: 'OffchainLookupResponseMalformedError'\n  }\nexport class OffchainLookupResponseMalformedError extends BaseError {\n  constructor({ result, url }: { result: any; url: string }) {\n    super(\n      'Offchain gateway response is malformed. Response data must be a hex value.',\n      {\n        metaMessages: [\n          `Gateway URL: ${getUrl(url)}`,\n          `Response: ${stringify(result)}`,\n        ],\n        name: 'OffchainLookupResponseMalformedError',\n      },\n    )\n  }\n}\n\n/** @internal */\nexport type OffchainLookupSenderMismatchErrorType =\n  OffchainLookupSenderMismatchError & {\n    name: 'OffchainLookupSenderMismatchError'\n  }\nexport class OffchainLookupSenderMismatchError extends BaseError {\n  constructor({ sender, to }: { sender: Address; to: Address }) {\n    super(\n      'Reverted sender address does not match target contract address (`to`).',\n      {\n        metaMessages: [\n          `Contract address: ${to}`,\n          `OffchainLookup sender address: ${sender}`,\n        ],\n        name: 'OffchainLookupSenderMismatchError',\n      },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;AAMA,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AADnC,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;AAFrC,OAAO,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAA;;;;AAQ3C,MAAO,mBAAoB,wJAAQ,YAAS;IAChD,YAAY,EACV,gBAAgB,EAChB,KAAK,EACL,IAAI,EACJ,SAAS,EACT,MAAM,EACN,IAAI,EAQL,CAAA;QACC,KAAK,CACH,KAAK,CAAC,YAAY,IAChB,0DAA0D,EAC5D;YACE,KAAK;YACL,YAAY,EAAE;mBACR,KAAK,CAAC,YAAY,IAAI,EAAE,CAAC;gBAC7B,KAAK,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;gBACpC,wBAAwB;gBACxB,IAAI,IAAI;oBACN,mBAAmB;uBAChB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAG,CAAD,AAAC,IAAA,sJAAO,SAAA,AAAM,EAAC,GAAG,CAAC,EAAE,CAAC;iBAC3C;gBACD,CAAA,UAAA,EAAa,MAAM,EAAE;gBACrB,CAAA,QAAA,EAAW,IAAI,EAAE;gBACjB,CAAA,qBAAA,EAAwB,gBAAgB,EAAE;gBAC1C,CAAA,cAAA,EAAiB,SAAS,EAAE;aAC7B,CAAC,IAAI,EAAE;YACR,IAAI,EAAE,qBAAqB;SAC5B,CACF,CAAA;IACH,CAAC;CACF;AAMK,MAAO,oCAAqC,SAAQ,2JAAS;IACjE,YAAY,EAAE,MAAM,EAAE,GAAG,EAAgC,CAAA;QACvD,KAAK,CACH,4EAA4E,EAC5E;YACE,YAAY,EAAE;gBACZ,CAAA,aAAA,EAAgB,6JAAA,AAAM,EAAC,GAAG,CAAC,EAAE;gBAC7B,CAAA,UAAA,yJAAa,YAAA,AAAS,EAAC,MAAM,CAAC,EAAE;aACjC;YACD,IAAI,EAAE,sCAAsC;SAC7C,CACF,CAAA;IACH,CAAC;CACF;AAOK,MAAO,iCAAkC,wJAAQ,YAAS;IAC9D,YAAY,EAAE,MAAM,EAAE,EAAE,EAAoC,CAAA;QAC1D,KAAK,CACH,wEAAwE,EACxE;YACE,YAAY,EAAE;gBACZ,CAAA,kBAAA,EAAqB,EAAE,EAAE;gBACzB,CAAA,+BAAA,EAAkC,MAAM,EAAE;aAC3C;YACD,IAAI,EAAE,mCAAmC;SAC1C,CACF,CAAA;IACH,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 2307, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2313, "column": 0}, "map": {"version":3,"file":"eip712.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/eip712.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport { BaseError } from './base.js'\n\nexport type Eip712DomainNotFoundErrorType = Eip712DomainNotFoundError & {\n  name: 'Eip712DomainNotFoundError'\n}\nexport class Eip712DomainNotFoundError extends BaseError {\n  constructor({ address }: { address: Address }) {\n    super(`No EIP-712 domain found on contract \"${address}\".`, {\n      metaMessages: [\n        'Ensure that:',\n        `- The contract is deployed at the address \"${address}\".`,\n        '- `eip712Domain()` function exists on the contract.',\n        '- `eip712Domain()` function matches signature to ERC-5267 specification.',\n      ],\n      name: 'Eip712DomainNotFoundError',\n    })\n  }\n}\n"],"names":[],"mappings":";;;AACA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAK/B,MAAO,yBAA0B,wJAAQ,YAAS;IACtD,YAAY,EAAE,OAAO,EAAwB,CAAA;QAC3C,KAAK,CAAC,CAAA,qCAAA,EAAwC,OAAO,CAAA,EAAA,CAAI,EAAE;YACzD,YAAY,EAAE;gBACZ,cAAc;gBACd,CAAA,2CAAA,EAA8C,OAAO,CAAA,EAAA,CAAI;gBACzD,qDAAqD;gBACrD,0EAA0E;aAC3E;YACD,IAAI,EAAE,2BAA2B;SAClC,CAAC,CAAA;IACJ,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 2331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2337, "column": 0}, "map": {"version":3,"file":"account.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/errors/account.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type AccountNotFoundErrorType = AccountNotFoundError & {\n  name: 'AccountNotFoundError'\n}\nexport class AccountNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath?: string | undefined } = {}) {\n    super(\n      [\n        'Could not find an Account to execute with this Action.',\n        'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client.',\n      ].join('\\n'),\n      {\n        docsPath,\n        docsSlug: 'account',\n        name: 'AccountNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AccountTypeNotSupportedErrorType = AccountTypeNotSupportedError & {\n  name: 'AccountTypeNotSupportedError'\n}\nexport class AccountTypeNotSupportedError extends BaseError {\n  constructor({\n    docsPath,\n    metaMessages,\n    type,\n  }: {\n    docsPath?: string | undefined\n    metaMessages?: string[] | undefined\n    type: string\n  }) {\n    super(`Account type \"${type}\" is not supported.`, {\n      docsPath,\n      metaMessages,\n      name: 'AccountTypeNotSupportedError',\n    })\n  }\n}\n"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAK/B,MAAO,oBAAqB,wJAAQ,YAAS;IACjD,YAAY,EAAE,QAAQ,EAAA,GAAwC,CAAA,CAAE,CAAA;QAC9D,KAAK,CACH;YACE,wDAAwD;YACxD,kHAAkH;SACnH,CAAC,IAAI,CAAC,IAAI,CAAC,EACZ;YACE,QAAQ;YACR,QAAQ,EAAE,SAAS;YACnB,IAAI,EAAE,sBAAsB;SAC7B,CACF,CAAA;IACH,CAAC;CACF;AAKK,MAAO,4BAA6B,wJAAQ,YAAS;IACzD,YAAY,EACV,QAAQ,EACR,YAAY,EACZ,IAAI,EAKL,CAAA;QACC,KAAK,CAAC,CAAA,cAAA,EAAiB,IAAI,CAAA,mBAAA,CAAqB,EAAE;YAChD,QAAQ;YACR,YAAY;YACZ,IAAI,EAAE,8BAA8B;SACrC,CAAC,CAAA;IACJ,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 2364, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2370, "column": 0}, "map": {"version":3,"file":"unit.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/constants/unit.ts"],"sourcesContent":["export const etherUnits = {\n  gwei: 9,\n  wei: 18,\n}\nexport const gweiUnits = {\n  ether: -9,\n  wei: 9,\n}\nexport const weiUnits = {\n  ether: -18,\n  gwei: -9,\n}\n"],"names":[],"mappings":";;;;;AAAO,MAAM,UAAU,GAAG;IACxB,IAAI,EAAE,CAAC;IACP,GAAG,EAAE,EAAE;CACR,CAAA;AACM,MAAM,SAAS,GAAG;IACvB,KAAK,EAAE,CAAC,CAAC;IACT,GAAG,EAAE,CAAC;CACP,CAAA;AACM,MAAM,QAAQ,GAAG;IACtB,KAAK,EAAE,CAAC,EAAE;IACV,IAAI,EAAE,CAAC,CAAC;CACT,CAAA","ignoreList":[0]}},
    {"offset": {"line": 2387, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2393, "column": 0}, "map": {"version":3,"file":"solidity.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/constants/solidity.ts"],"sourcesContent":["import type { AbiError } from 'abitype'\n\n// https://docs.soliditylang.org/en/v0.8.16/control-structures.html#panic-via-assert-and-error-via-require\nexport const panicReasons = {\n  1: 'An `assert` condition failed.',\n  17: 'Arithmetic operation resulted in underflow or overflow.',\n  18: 'Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).',\n  33: 'Attempted to convert to an invalid type.',\n  34: 'Attempted to access a storage byte array that is incorrectly encoded.',\n  49: 'Performed `.pop()` on an empty array',\n  50: 'Array index is out of bounds.',\n  65: 'Allocated too much memory or created an array which is too large.',\n  81: 'Attempted to call a zero-initialized variable of internal function type.',\n} as const\n\nexport const solidityError: AbiError = {\n  inputs: [\n    {\n      name: 'message',\n      type: 'string',\n    },\n  ],\n  name: 'Error',\n  type: 'error',\n}\nexport const solidityPanic: AbiError = {\n  inputs: [\n    {\n      name: 'reason',\n      type: 'uint256',\n    },\n  ],\n  name: 'Panic',\n  type: 'error',\n}\n"],"names":[],"mappings":"AAEA,0GAA0G;;;;;;AACnG,MAAM,YAAY,GAAG;IAC1B,CAAC,EAAE,+BAA+B;IAClC,EAAE,EAAE,yDAAyD;IAC7D,EAAE,EAAE,wDAAwD;IAC5D,EAAE,EAAE,0CAA0C;IAC9C,EAAE,EAAE,uEAAuE;IAC3E,EAAE,EAAE,sCAAsC;IAC1C,EAAE,EAAE,+BAA+B;IACnC,EAAE,EAAE,mEAAmE;IACvE,EAAE,EAAE,0EAA0E;CACtE,CAAA;AAEH,MAAM,aAAa,GAAa;IACrC,MAAM,EAAE;QACN;YACE,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,QAAQ;SACf;KACF;IACD,IAAI,EAAE,OAAO;IACb,IAAI,EAAE,OAAO;CACd,CAAA;AACM,MAAM,aAAa,GAAa;IACrC,MAAM,EAAE;QACN;YACE,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,SAAS;SAChB;KACF;IACD,IAAI,EAAE,OAAO;IACb,IAAI,EAAE,OAAO;CACd,CAAA","ignoreList":[0]}},
    {"offset": {"line": 2430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2436, "column": 0}, "map": {"version":3,"file":"number.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/constants/number.ts"],"sourcesContent":["export const maxInt8 = 2n ** (8n - 1n) - 1n\nexport const maxInt16 = 2n ** (16n - 1n) - 1n\nexport const maxInt24 = 2n ** (24n - 1n) - 1n\nexport const maxInt32 = 2n ** (32n - 1n) - 1n\nexport const maxInt40 = 2n ** (40n - 1n) - 1n\nexport const maxInt48 = 2n ** (48n - 1n) - 1n\nexport const maxInt56 = 2n ** (56n - 1n) - 1n\nexport const maxInt64 = 2n ** (64n - 1n) - 1n\nexport const maxInt72 = 2n ** (72n - 1n) - 1n\nexport const maxInt80 = 2n ** (80n - 1n) - 1n\nexport const maxInt88 = 2n ** (88n - 1n) - 1n\nexport const maxInt96 = 2n ** (96n - 1n) - 1n\nexport const maxInt104 = 2n ** (104n - 1n) - 1n\nexport const maxInt112 = 2n ** (112n - 1n) - 1n\nexport const maxInt120 = 2n ** (120n - 1n) - 1n\nexport const maxInt128 = 2n ** (128n - 1n) - 1n\nexport const maxInt136 = 2n ** (136n - 1n) - 1n\nexport const maxInt144 = 2n ** (144n - 1n) - 1n\nexport const maxInt152 = 2n ** (152n - 1n) - 1n\nexport const maxInt160 = 2n ** (160n - 1n) - 1n\nexport const maxInt168 = 2n ** (168n - 1n) - 1n\nexport const maxInt176 = 2n ** (176n - 1n) - 1n\nexport const maxInt184 = 2n ** (184n - 1n) - 1n\nexport const maxInt192 = 2n ** (192n - 1n) - 1n\nexport const maxInt200 = 2n ** (200n - 1n) - 1n\nexport const maxInt208 = 2n ** (208n - 1n) - 1n\nexport const maxInt216 = 2n ** (216n - 1n) - 1n\nexport const maxInt224 = 2n ** (224n - 1n) - 1n\nexport const maxInt232 = 2n ** (232n - 1n) - 1n\nexport const maxInt240 = 2n ** (240n - 1n) - 1n\nexport const maxInt248 = 2n ** (248n - 1n) - 1n\nexport const maxInt256 = 2n ** (256n - 1n) - 1n\n\nexport const minInt8 = -(2n ** (8n - 1n))\nexport const minInt16 = -(2n ** (16n - 1n))\nexport const minInt24 = -(2n ** (24n - 1n))\nexport const minInt32 = -(2n ** (32n - 1n))\nexport const minInt40 = -(2n ** (40n - 1n))\nexport const minInt48 = -(2n ** (48n - 1n))\nexport const minInt56 = -(2n ** (56n - 1n))\nexport const minInt64 = -(2n ** (64n - 1n))\nexport const minInt72 = -(2n ** (72n - 1n))\nexport const minInt80 = -(2n ** (80n - 1n))\nexport const minInt88 = -(2n ** (88n - 1n))\nexport const minInt96 = -(2n ** (96n - 1n))\nexport const minInt104 = -(2n ** (104n - 1n))\nexport const minInt112 = -(2n ** (112n - 1n))\nexport const minInt120 = -(2n ** (120n - 1n))\nexport const minInt128 = -(2n ** (128n - 1n))\nexport const minInt136 = -(2n ** (136n - 1n))\nexport const minInt144 = -(2n ** (144n - 1n))\nexport const minInt152 = -(2n ** (152n - 1n))\nexport const minInt160 = -(2n ** (160n - 1n))\nexport const minInt168 = -(2n ** (168n - 1n))\nexport const minInt176 = -(2n ** (176n - 1n))\nexport const minInt184 = -(2n ** (184n - 1n))\nexport const minInt192 = -(2n ** (192n - 1n))\nexport const minInt200 = -(2n ** (200n - 1n))\nexport const minInt208 = -(2n ** (208n - 1n))\nexport const minInt216 = -(2n ** (216n - 1n))\nexport const minInt224 = -(2n ** (224n - 1n))\nexport const minInt232 = -(2n ** (232n - 1n))\nexport const minInt240 = -(2n ** (240n - 1n))\nexport const minInt248 = -(2n ** (248n - 1n))\nexport const minInt256 = -(2n ** (256n - 1n))\n\nexport const maxUint8 = 2n ** 8n - 1n\nexport const maxUint16 = 2n ** 16n - 1n\nexport const maxUint24 = 2n ** 24n - 1n\nexport const maxUint32 = 2n ** 32n - 1n\nexport const maxUint40 = 2n ** 40n - 1n\nexport const maxUint48 = 2n ** 48n - 1n\nexport const maxUint56 = 2n ** 56n - 1n\nexport const maxUint64 = 2n ** 64n - 1n\nexport const maxUint72 = 2n ** 72n - 1n\nexport const maxUint80 = 2n ** 80n - 1n\nexport const maxUint88 = 2n ** 88n - 1n\nexport const maxUint96 = 2n ** 96n - 1n\nexport const maxUint104 = 2n ** 104n - 1n\nexport const maxUint112 = 2n ** 112n - 1n\nexport const maxUint120 = 2n ** 120n - 1n\nexport const maxUint128 = 2n ** 128n - 1n\nexport const maxUint136 = 2n ** 136n - 1n\nexport const maxUint144 = 2n ** 144n - 1n\nexport const maxUint152 = 2n ** 152n - 1n\nexport const maxUint160 = 2n ** 160n - 1n\nexport const maxUint168 = 2n ** 168n - 1n\nexport const maxUint176 = 2n ** 176n - 1n\nexport const maxUint184 = 2n ** 184n - 1n\nexport const maxUint192 = 2n ** 192n - 1n\nexport const maxUint200 = 2n ** 200n - 1n\nexport const maxUint208 = 2n ** 208n - 1n\nexport const maxUint216 = 2n ** 216n - 1n\nexport const maxUint224 = 2n ** 224n - 1n\nexport const maxUint232 = 2n ** 232n - 1n\nexport const maxUint240 = 2n ** 240n - 1n\nexport const maxUint248 = 2n ** 248n - 1n\nexport const maxUint256 = 2n ** 256n - 1n\n"],"names":[],"mappings":"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,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;AACtC,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;AACtC,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;AACtC,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;AACtC,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;AACtC,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;AACtC,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;AACtC,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;AACtC,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;AACtC,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;AACtC,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;AACtC,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;AACtC,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;AACtC,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;AACtC,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;AACtC,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAA;AAEtC,MAAM,QAAQ,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,CAAA;AAC9B,MAAM,SAAS,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,CAAA;AAChC,MAAM,SAAS,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,CAAA;AAChC,MAAM,SAAS,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,CAAA;AAChC,MAAM,SAAS,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,CAAA;AAChC,MAAM,SAAS,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,CAAA;AAChC,MAAM,SAAS,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,CAAA;AAChC,MAAM,SAAS,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,CAAA;AAChC,MAAM,SAAS,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,CAAA;AAChC,MAAM,SAAS,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,CAAA;AAChC,MAAM,SAAS,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,CAAA;AAChC,MAAM,SAAS,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,CAAA;AAChC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA;AAClC,MAAM,UAAU,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAA","ignoreList":[0]}},
    {"offset": {"line": 2630, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2636, "column": 0}, "map": {"version":3,"file":"kzg.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/constants/kzg.ts"],"sourcesContent":["// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n\nexport const versionedHashVersionKzg = 1\n"],"names":[],"mappings":"AAAA,2EAA2E;;;;AAEpE,MAAM,uBAAuB,GAAG,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 2641, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2647, "column": 0}, "map": {"version":3,"file":"contract.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/constants/contract.ts"],"sourcesContent":["export const aggregate3Signature = '0x82ad56cb'\n"],"names":[],"mappings":";;;AAAO,MAAM,mBAAmB,GAAG,YAAY,CAAA","ignoreList":[0]}},
    {"offset": {"line": 2651, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2657, "column": 0}, "map": {"version":3,"file":"abis.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/constants/abis.ts"],"sourcesContent":["/* [Multicall3](https://github.com/mds1/multicall) */\nexport const multicall3Abi = [\n  {\n    inputs: [\n      {\n        components: [\n          {\n            name: 'target',\n            type: 'address',\n          },\n          {\n            name: 'allowFailure',\n            type: 'bool',\n          },\n          {\n            name: 'callData',\n            type: 'bytes',\n          },\n        ],\n        name: 'calls',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'aggregate3',\n    outputs: [\n      {\n        components: [\n          {\n            name: 'success',\n            type: 'bool',\n          },\n          {\n            name: 'returnData',\n            type: 'bytes',\n          },\n        ],\n        name: 'returnData',\n        type: 'tuple[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n\nconst universalResolverErrors = [\n  {\n    inputs: [],\n    name: 'ResolverNotFound',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'ResolverWildcardNotSupported',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'ResolverNotContract',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        name: 'returnData',\n        type: 'bytes',\n      },\n    ],\n    name: 'ResolverError',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            name: 'status',\n            type: 'uint16',\n          },\n          {\n            name: 'message',\n            type: 'string',\n          },\n        ],\n        name: 'errors',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'HttpError',\n    type: 'error',\n  },\n] as const\n\nexport const universalResolverResolveAbi = [\n  ...universalResolverErrors,\n  {\n    name: 'resolve',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes' },\n      { name: 'data', type: 'bytes' },\n    ],\n    outputs: [\n      { name: '', type: 'bytes' },\n      { name: 'address', type: 'address' },\n    ],\n  },\n  {\n    name: 'resolve',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes' },\n      { name: 'data', type: 'bytes' },\n      { name: 'gateways', type: 'string[]' },\n    ],\n    outputs: [\n      { name: '', type: 'bytes' },\n      { name: 'address', type: 'address' },\n    ],\n  },\n] as const\n\nexport const universalResolverReverseAbi = [\n  ...universalResolverErrors,\n  {\n    name: 'reverse',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ type: 'bytes', name: 'reverseName' }],\n    outputs: [\n      { type: 'string', name: 'resolvedName' },\n      { type: 'address', name: 'resolvedAddress' },\n      { type: 'address', name: 'reverseResolver' },\n      { type: 'address', name: 'resolver' },\n    ],\n  },\n  {\n    name: 'reverse',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { type: 'bytes', name: 'reverseName' },\n      { type: 'string[]', name: 'gateways' },\n    ],\n    outputs: [\n      { type: 'string', name: 'resolvedName' },\n      { type: 'address', name: 'resolvedAddress' },\n      { type: 'address', name: 'reverseResolver' },\n      { type: 'address', name: 'resolver' },\n    ],\n  },\n] as const\n\nexport const textResolverAbi = [\n  {\n    name: 'text',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes32' },\n      { name: 'key', type: 'string' },\n    ],\n    outputs: [{ name: '', type: 'string' }],\n  },\n] as const\n\nexport const addressResolverAbi = [\n  {\n    name: 'addr',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ name: 'name', type: 'bytes32' }],\n    outputs: [{ name: '', type: 'address' }],\n  },\n  {\n    name: 'addr',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes32' },\n      { name: 'coinType', type: 'uint256' },\n    ],\n    outputs: [{ name: '', type: 'bytes' }],\n  },\n] as const\n\n// ERC-1271\n// isValidSignature(bytes32 hash, bytes signature) → bytes4 magicValue\n/** @internal */\nexport const smartAccountAbi = [\n  {\n    name: 'isValidSignature',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'hash', type: 'bytes32' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    outputs: [{ name: '', type: 'bytes4' }],\n  },\n] as const\n\n// ERC-6492 - universal deployless signature validator contract\n// constructor(address _signer, bytes32 _hash, bytes _signature) → bytes4 returnValue\n// returnValue is either 0x1 (valid) or 0x0 (invalid)\nexport const universalSignatureValidatorAbi = [\n  {\n    inputs: [\n      {\n        name: '_signer',\n        type: 'address',\n      },\n      {\n        name: '_hash',\n        type: 'bytes32',\n      },\n      {\n        name: '_signature',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    inputs: [\n      {\n        name: '_signer',\n        type: 'address',\n      },\n      {\n        name: '_hash',\n        type: 'bytes32',\n      },\n      {\n        name: '_signature',\n        type: 'bytes',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n    name: 'isValidSig',\n  },\n] as const\n\n/** [ERC-20 Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-20) */\nexport const erc20Abi = [\n  {\n    type: 'event',\n    name: 'Approval',\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    name: 'Transfer',\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'allowance',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'spender',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'approve',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'balanceOf',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'decimals',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint8',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'name',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'symbol',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'totalSupply',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transfer',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transferFrom',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n] as const\n\n/**\n * [bytes32-flavored ERC-20](https://docs.makerdao.com/smart-contract-modules/mkr-module#4.-gotchas-potential-source-of-user-error)\n * for tokens (ie. Maker) that use bytes32 instead of string.\n */\nexport const erc20Abi_bytes32 = [\n  {\n    type: 'event',\n    name: 'Approval',\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    name: 'Transfer',\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'allowance',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'spender',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'approve',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'balanceOf',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'decimals',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint8',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'name',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'bytes32',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'symbol',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'bytes32',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'totalSupply',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transfer',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transferFrom',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n] as const\n\n/** [ERC-721 Non-Fungible Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-721) */\nexport const erc721Abi = [\n  {\n    type: 'event',\n    name: 'Approval',\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    name: 'ApprovalForAll',\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'event',\n    name: 'Transfer',\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'approve',\n    stateMutability: 'payable',\n    inputs: [\n      {\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'function',\n    name: 'balanceOf',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'getApproved',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'address',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'isApprovedForAll',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'name',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'ownerOf',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'safeTransferFrom',\n    stateMutability: 'payable',\n    inputs: [\n      {\n        name: 'from',\n        type: 'address',\n      },\n      {\n        name: 'to',\n        type: 'address',\n      },\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'function',\n    name: 'safeTransferFrom',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'from',\n        type: 'address',\n      },\n      {\n        name: 'to',\n        type: 'address',\n      },\n      {\n        name: 'id',\n        type: 'uint256',\n      },\n      {\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'function',\n    name: 'setApprovalForAll',\n    stateMutability: 'nonpayable',\n    inputs: [\n      {\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'function',\n    name: 'symbol',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'tokenByIndex',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'index',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'tokenByIndex',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'index',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'tokenURI',\n    stateMutability: 'view',\n    inputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [\n      {\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'totalSupply',\n    stateMutability: 'view',\n    inputs: [],\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transferFrom',\n    stateMutability: 'payable',\n    inputs: [\n      {\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'tokeId',\n        type: 'uint256',\n      },\n    ],\n    outputs: [],\n  },\n] as const\n\n/** [ERC-4626 Tokenized Vaults Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-4626) */\nexport const erc4626Abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'receiver',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'assets',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'Deposit',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'receiver',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'assets',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'Withdraw',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'spender',\n        type: 'address',\n      },\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'asset',\n    outputs: [\n      {\n        name: 'assetTokenAddress',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'convertToAssets',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    name: 'convertToShares',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n      {\n        name: 'receiver',\n        type: 'address',\n      },\n    ],\n    name: 'deposit',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'caller',\n        type: 'address',\n      },\n    ],\n    name: 'maxDeposit',\n    outputs: [\n      {\n        name: 'maxAssets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'caller',\n        type: 'address',\n      },\n    ],\n    name: 'maxMint',\n    outputs: [\n      {\n        name: 'maxShares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'maxRedeem',\n    outputs: [\n      {\n        name: 'maxShares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'maxWithdraw',\n    outputs: [\n      {\n        name: 'maxAssets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n      {\n        name: 'receiver',\n        type: 'address',\n      },\n    ],\n    name: 'mint',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    name: 'previewDeposit',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'previewMint',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    name: 'previewRedeem',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    name: 'previewWithdraw',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n      {\n        name: 'receiver',\n        type: 'address',\n      },\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'redeem',\n    outputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalAssets',\n    outputs: [\n      {\n        name: 'totalManagedAssets',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [\n      {\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'to',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'transfer',\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'from',\n        type: 'address',\n      },\n      {\n        name: 'to',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFrom',\n    outputs: [\n      {\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'assets',\n        type: 'uint256',\n      },\n      {\n        name: 'receiver',\n        type: 'address',\n      },\n      {\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'withdraw',\n    outputs: [\n      {\n        name: 'shares',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n] as const\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4212, "column": 0}, "map": {"version":3,"file":"contracts.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/constants/contracts.ts"],"sourcesContent":["export const deploylessCallViaBytecodeBytecode =\n  '0x608060405234801561001057600080fd5b5060405161018e38038061018e83398101604081905261002f91610124565b6000808351602085016000f59050803b61004857600080fd5b6000808351602085016000855af16040513d6000823e81610067573d81fd5b3d81f35b634e487b7160e01b600052604160045260246000fd5b600082601f83011261009257600080fd5b81516001600160401b038111156100ab576100ab61006b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100d9576100d961006b565b6040528181528382016020018510156100f157600080fd5b60005b82811015610110576020818601810151838301820152016100f4565b506000918101602001919091529392505050565b6000806040838503121561013757600080fd5b82516001600160401b0381111561014d57600080fd5b61015985828601610081565b602085015190935090506001600160401b0381111561017757600080fd5b61018385828601610081565b915050925092905056fe'\n\nexport const deploylessCallViaFactoryBytecode =\n  '0x608060405234801561001057600080fd5b506040516102c03803806102c083398101604081905261002f916101e6565b836001600160a01b03163b6000036100e457600080836001600160a01b03168360405161005c9190610270565b6000604051808303816000865af19150503d8060008114610099576040519150601f19603f3d011682016040523d82523d6000602084013e61009e565b606091505b50915091508115806100b857506001600160a01b0386163b155b156100e1578060405163101bb98d60e01b81526004016100d8919061028c565b60405180910390fd5b50505b6000808451602086016000885af16040513d6000823e81610103573d81fd5b3d81f35b80516001600160a01b038116811461011e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561015457818101518382015260200161013c565b50506000910152565b600082601f83011261016e57600080fd5b81516001600160401b0381111561018757610187610123565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101b5576101b5610123565b6040528181528382016020018510156101cd57600080fd5b6101de826020830160208701610139565b949350505050565b600080600080608085870312156101fc57600080fd5b61020585610107565b60208601519094506001600160401b0381111561022157600080fd5b61022d8782880161015d565b93505061023c60408601610107565b60608601519092506001600160401b0381111561025857600080fd5b6102648782880161015d565b91505092959194509250565b60008251610282818460208701610139565b9190910192915050565b60208152600082518060208401526102ab816040850160208701610139565b601f01601f1916919091016040019291505056fe'\n\nexport const universalSignatureValidatorByteCode =\n  '0x608060405234801561001057600080fd5b5060405161069438038061069483398101604081905261002f9161051e565b600061003c848484610048565b9050806000526001601ff35b60007f64926492649264926492649264926492649264926492649264926492649264926100748361040c565b036101e7576000606080848060200190518101906100929190610577565b60405192955090935091506000906001600160a01b038516906100b69085906105dd565b6000604051808303816000865af19150503d80600081146100f3576040519150601f19603f3d011682016040523d82523d6000602084013e6100f8565b606091505b50509050876001600160a01b03163b60000361016057806101605760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90610190908b9087906004016105f9565b602060405180830381865afa1580156101ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d19190610633565b6001600160e01b03191614945050505050610405565b6001600160a01b0384163b1561027a57604051630b135d3f60e11b808252906001600160a01b03861690631626ba7e9061022790879087906004016105f9565b602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610633565b6001600160e01b031916149050610405565b81516041146102df5760405162461bcd60e51b815260206004820152603a602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e6774680000000000006064820152608401610157565b6102e7610425565b5060208201516040808401518451859392600091859190811061030c5761030c61065d565b016020015160f81c9050601b811480159061032b57508060ff16601c14155b1561038c5760405162461bcd60e51b815260206004820152603b602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c756500000000006064820152608401610157565b60408051600081526020810180835289905260ff83169181019190915260608101849052608081018390526001600160a01b0389169060019060a0016020604051602081039080840390855afa1580156103ea573d6000803e3d6000fd5b505050602060405103516001600160a01b0316149450505050505b9392505050565b600060208251101561041d57600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b038116811461045857600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561048c578181015183820152602001610474565b50506000910152565b600082601f8301126104a657600080fd5b81516001600160401b038111156104bf576104bf61045b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156104ed576104ed61045b565b60405281815283820160200185101561050557600080fd5b610516826020830160208701610471565b949350505050565b60008060006060848603121561053357600080fd5b835161053e81610443565b6020850151604086015191945092506001600160401b0381111561056157600080fd5b61056d86828701610495565b9150509250925092565b60008060006060848603121561058c57600080fd5b835161059781610443565b60208501519093506001600160401b038111156105b357600080fd5b6105bf86828701610495565b604086015190935090506001600160401b0381111561056157600080fd5b600082516105ef818460208701610471565b9190910192915050565b828152604060208201526000825180604084015261061e816060850160208701610471565b601f01601f1916919091016060019392505050565b60006020828403121561064557600080fd5b81516001600160e01b03198116811461040557600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572'\n"],"names":[],"mappings":";;;;;AAAO,MAAM,iCAAiC,GAC5C,gyBAAgyB,CAAA;AAE3xB,MAAM,gCAAgC,GAC3C,o4CAAo4C,CAAA;AAE/3C,MAAM,mCAAmC,GAC9C,4yGAA4yG,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4220, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4226, "column": 0}, "map": {"version":3,"file":"blob.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/constants/blob.ts"],"sourcesContent":["// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n\n/** Blob limit per transaction. */\nconst blobsPerTransaction = 6\n\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32\n\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096\n\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob\n\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction =\n  bytesPerBlob * blobsPerTransaction -\n  // terminator byte (0x80).\n  1 -\n  // zero byte (0x00) appended to each field element.\n  1 * fieldElementsPerBlob * blobsPerTransaction\n"],"names":[],"mappings":"AAAA,2EAA2E;AAE3E,gCAAA,EAAkC;;;;;;AAClC,MAAM,mBAAmB,GAAG,CAAC,CAAA;AAGtB,MAAM,oBAAoB,GAAG,EAAE,CAAA;AAG/B,MAAM,oBAAoB,GAAG,IAAI,CAAA;AAGjC,MAAM,YAAY,GAAG,oBAAoB,GAAG,oBAAoB,CAAA;AAGhE,MAAM,sBAAsB,GACjC,YAAY,GAAG,mBAAmB,GAClC,0BAA0B;AAC1B,CAAC,GACD,mDAAmD;AACnD,CAAC,GAAG,oBAAoB,GAAG,mBAAmB,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4246, "column": 0}, "map": {"version":3,"file":"address.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/constants/address.ts"],"sourcesContent":["export const entryPoint06Address =\n  '0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789' as const\nexport const entryPoint07Address =\n  '0x0000000071727De22E5E9d8BAf0edAc6f37da032' as const\n\nexport const ethAddress = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee' as const\n\nexport const zeroAddress = '0x0000000000000000000000000000000000000000' as const\n"],"names":[],"mappings":";;;;;;AAAO,MAAM,mBAAmB,GAC9B,4CAAqD,CAAA;AAChD,MAAM,mBAAmB,GAC9B,4CAAqD,CAAA;AAEhD,MAAM,UAAU,GAAG,4CAAqD,CAAA;AAExE,MAAM,WAAW,GAAG,4CAAqD,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4256, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4262, "column": 0}, "map": {"version":3,"file":"strings.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/constants/strings.ts"],"sourcesContent":["export const presignMessagePrefix = '\\x19Ethereum Signed Message:\\n'\n"],"names":[],"mappings":";;;AAAO,MAAM,oBAAoB,GAAG,gCAAgC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4272, "column": 0}, "map": {"version":3,"file":"bytes.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/constants/bytes.ts"],"sourcesContent":["export const erc6492MagicBytes =\n  '0x6492649264926492649264926492649264926492649264926492649264926492' as const\n\nexport const zeroHash =\n  '0x0000000000000000000000000000000000000000000000000000000000000000' as const\n"],"names":[],"mappings":";;;;AAAO,MAAM,iBAAiB,GAC5B,oEAA6E,CAAA;AAExE,MAAM,QAAQ,GACnB,oEAA6E,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4278, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4284, "column": 0}, "map": {"version":3,"file":"parseAccount.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/accounts/utils/parseAccount.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../types.js'\n\nexport type ParseAccountErrorType = ErrorType\n\nexport function parseAccount<accountOrAddress extends Address | Account>(\n  account: accountOrAddress,\n): accountOrAddress extends Address ? Account : accountOrAddress {\n  if (typeof account === 'string')\n    return { address: account, type: 'json-rpc' } as any\n  return account as any\n}\n"],"names":[],"mappings":";;;AAOM,SAAU,YAAY,CAC1B,OAAyB;IAEzB,IAAI,OAAO,OAAO,KAAK,QAAQ,EAC7B,OAAO;QAAE,OAAO,EAAE,OAAO;QAAE,IAAI,EAAE,UAAU;IAAA,CAAS,CAAA;IACtD,OAAO,OAAc,CAAA;AACvB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4300, "column": 0}, "map": {"version":3,"file":"publicKeyToAddress.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/accounts/utils/publicKeyToAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../../utils/address/getAddress.js'\nimport {\n  type Keccak256ErrorType,\n  keccak256,\n} from '../../utils/hash/keccak256.js'\n\nexport type PublicKeyToAddressErrorType =\n  | ChecksumAddressErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\n/**\n * @description Converts an ECDSA public key to an address.\n *\n * @param publicKey The public key to convert.\n *\n * @returns The address.\n */\nexport function publicKeyToAddress(publicKey: Hex): Address {\n  const address = keccak256(`0x${publicKey.substring(4)}`).substring(26)\n  return checksumAddress(`0x${address}`) as Address\n}\n"],"names":[],"mappings":";;;AAQA,OAAO,EAEL,SAAS,GACV,MAAM,+BAA+B,CAAA;AAPtC,OAAO,EAEL,eAAe,GAChB,MAAM,mCAAmC,CAAA;;;AAkBpC,SAAU,kBAAkB,CAAC,SAAc;IAC/C,MAAM,OAAO,kKAAG,YAAA,AAAS,EAAC,CAAA,EAAA,EAAK,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;IACtE,0KAAO,kBAAA,AAAe,EAAC,CAAA,EAAA,EAAK,OAAO,EAAE,CAAY,CAAA;AACnD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4317, "column": 0}, "map": {"version":3,"file":"toAccount.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/accounts/toAccount.ts"],"sourcesContent":["// TODO(v3): Rename to `toLocalAccount` + add `source` property to define source (privateKey, mnemonic, hdKey, etc).\n\nimport type { Address } from 'abitype'\n\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../errors/address.js'\nimport {\n  type IsAddressErrorType,\n  isAddress,\n} from '../utils/address/isAddress.js'\n\nimport type { ErrorType } from '../errors/utils.js'\nimport type {\n  AccountSource,\n  CustomSource,\n  JsonRpcAccount,\n  LocalAccount,\n} from './types.js'\n\ntype GetAccountReturnType<accountSource extends AccountSource> =\n  | (accountSource extends Address ? JsonRpcAccount : never)\n  | (accountSource extends CustomSource ? LocalAccount : never)\n\nexport type ToAccountErrorType =\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\n/**\n * @description Creates an Account from a custom signing implementation.\n *\n * @returns A Local Account.\n */\nexport function toAccount<accountSource extends AccountSource>(\n  source: accountSource,\n): GetAccountReturnType<accountSource> {\n  if (typeof source === 'string') {\n    if (!isAddress(source, { strict: false }))\n      throw new InvalidAddressError({ address: source })\n    return {\n      address: source,\n      type: 'json-rpc',\n    } as GetAccountReturnType<accountSource>\n  }\n\n  if (!isAddress(source.address, { strict: false }))\n    throw new InvalidAddressError({ address: source.address })\n  return {\n    address: source.address,\n    nonceManager: source.nonceManager,\n    sign: source.sign,\n    experimental_signAuthorization: source.experimental_signAuthorization,\n    signMessage: source.signMessage,\n    signTransaction: source.signTransaction,\n    signTypedData: source.signTypedData,\n    source: 'custom',\n    type: 'local',\n  } as GetAccountReturnType<accountSource>\n}\n"],"names":[],"mappings":"AAAA,oHAAoH;;;;AAQpH,OAAO,EAEL,SAAS,GACV,MAAM,+BAA+B,CAAA;AAPtC,OAAO,EACL,mBAAmB,GAEpB,MAAM,sBAAsB,CAAA;;;AA4BvB,SAAU,SAAS,CACvB,MAAqB;IAErB,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE,CAAC;QAC/B,IAAI,mKAAC,YAAA,AAAS,EAAC,MAAM,EAAE;YAAE,MAAM,EAAE,KAAK;QAAA,CAAE,CAAC,EACvC,MAAM,qJAAI,uBAAmB,CAAC;YAAE,OAAO,EAAE,MAAM;QAAA,CAAE,CAAC,CAAA;QACpD,OAAO;YACL,OAAO,EAAE,MAAM;YACf,IAAI,EAAE,UAAU;SACsB,CAAA;IAC1C,CAAC;IAED,IAAI,mKAAC,YAAA,AAAS,EAAC,MAAM,CAAC,OAAO,EAAE;QAAE,MAAM,EAAE,KAAK;IAAA,CAAE,CAAC,EAC/C,MAAM,sJAAI,sBAAmB,CAAC;QAAE,OAAO,EAAE,MAAM,CAAC,OAAO;IAAA,CAAE,CAAC,CAAA;IAC5D,OAAO;QACL,OAAO,EAAE,MAAM,CAAC,OAAO;QACvB,YAAY,EAAE,MAAM,CAAC,YAAY;QACjC,IAAI,EAAE,MAAM,CAAC,IAAI;QACjB,8BAA8B,EAAE,MAAM,CAAC,8BAA8B;QACrE,WAAW,EAAE,MAAM,CAAC,WAAW;QAC/B,eAAe,EAAE,MAAM,CAAC,eAAe;QACvC,aAAa,EAAE,MAAM,CAAC,aAAa;QACnC,MAAM,EAAE,QAAQ;QAChB,IAAI,EAAE,OAAO;KACyB,CAAA;AAC1C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4354, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4360, "column": 0}, "map": {"version":3,"file":"eip1193.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/types/eip1193.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type * as BlockOverrides from 'ox/BlockOverrides'\nimport type {\n  RpcEstimateUserOperationGasReturnType,\n  RpcGetUserOperationByHashReturnType,\n  RpcUserOperation,\n  RpcUserOperationReceipt,\n} from '../account-abstraction/types/rpc.js'\nimport type { BlockTag } from './block.js'\nimport type { Hash, Hex, LogTopic } from './misc.js'\nimport type { RpcStateOverride } from './rpc.js'\nimport type {\n  RpcBlock as Block,\n  RpcBlockIdentifier as BlockIdentifier,\n  RpcBlockNumber as BlockNumber,\n  RpcFeeHistory as FeeHistory,\n  RpcLog as Log,\n  RpcProof as Proof,\n  Quantity,\n  RpcTransaction as Transaction,\n  RpcTransactionReceipt as TransactionReceipt,\n  RpcTransactionRequest as TransactionRequest,\n  RpcUncle as Uncle,\n} from './rpc.js'\nimport type { AccessList } from './transaction.js'\nimport type { ExactPartial, OneOf, PartialBy, Prettify } from './utils.js'\n\n//////////////////////////////////////////////////\n// Provider\n\nexport type EIP1474Methods = [\n  ...PublicRpcSchema,\n  ...WalletRpcSchema,\n  ...BundlerRpcSchema,\n  ...PaymasterRpcSchema,\n]\n\nexport type EIP1193Provider = Prettify<\n  EIP1193Events & {\n    request: EIP1193RequestFn<EIP1474Methods>\n  }\n>\n\n//////////////////////////////////////////////////\n// Errors\n\nexport type ProviderRpcErrorType = ProviderRpcError & {\n  name: 'ProviderRpcError'\n}\nexport class ProviderRpcError extends Error {\n  code: number\n  details: string\n\n  constructor(code: number, message: string) {\n    super(message)\n    this.code = code\n    this.details = message\n  }\n}\n\n//////////////////////////////////////////////////\n// Provider Events\n\nexport type ProviderConnectInfo = {\n  chainId: string\n}\n\nexport type ProviderMessage = {\n  type: string\n  data: unknown\n}\n\nexport type EIP1193EventMap = {\n  accountsChanged(accounts: Address[]): void\n  chainChanged(chainId: string): void\n  connect(connectInfo: ProviderConnectInfo): void\n  disconnect(error: ProviderRpcError): void\n  message(message: ProviderMessage): void\n}\n\nexport type EIP1193Events = {\n  on<event extends keyof EIP1193EventMap>(\n    event: event,\n    listener: EIP1193EventMap[event],\n  ): void\n  removeListener<event extends keyof EIP1193EventMap>(\n    event: event,\n    listener: EIP1193EventMap[event],\n  ): void\n}\n\n//////////////////////////////////////////////////\n// Provider Requests\n\nexport type AddEthereumChainParameter = {\n  /** A 0x-prefixed hexadecimal string */\n  chainId: string\n  /** The chain name. */\n  chainName: string\n  /** Native currency for the chain. */\n  nativeCurrency?:\n    | {\n        name: string\n        symbol: string\n        decimals: number\n      }\n    | undefined\n  rpcUrls: readonly string[]\n  blockExplorerUrls?: string[] | undefined\n  iconUrls?: string[] | undefined\n}\n\nexport type NetworkSync = {\n  /** The current block number */\n  currentBlock: Quantity\n  /** Number of latest block on the network */\n  highestBlock: Quantity\n  /** Block number at which syncing started */\n  startingBlock: Quantity\n}\n\nexport type WalletCapabilities = {\n  [capability: string]: any\n}\n\nexport type WalletCapabilitiesRecord<\n  capabilities extends WalletCapabilities = WalletCapabilities,\n  id extends string | number = Hex,\n> = {\n  [chainId in id]: capabilities\n}\n\nexport type WalletCallReceipt<quantity = Hex, status = Hex> = {\n  logs: {\n    address: Hex\n    data: Hex\n    topics: Hex[]\n  }[]\n  status: status\n  blockHash: Hex\n  blockNumber: quantity\n  gasUsed: quantity\n  transactionHash: Hex\n}\n\nexport type WalletGrantPermissionsParameters = {\n  signer?:\n    | {\n        type: string\n        data?: unknown | undefined\n      }\n    | undefined\n  permissions: readonly {\n    data: unknown\n    policies: readonly {\n      data: unknown\n      type: string\n    }[]\n    required?: boolean | undefined\n    type: string\n  }[]\n  expiry: number\n}\n\nexport type WalletGrantPermissionsReturnType = {\n  expiry: number\n  factory?: `0x${string}` | undefined\n  factoryData?: string | undefined\n  grantedPermissions: readonly {\n    data: unknown\n    policies: readonly {\n      data: unknown\n      type: string\n    }[]\n    required?: boolean | undefined\n    type: string\n  }[]\n  permissionsContext: string\n  signerData?:\n    | {\n        userOpBuilder?: `0x${string}` | undefined\n        submitToAddress?: `0x${string}` | undefined\n      }\n    | undefined\n}\n\nexport type WalletGetCallsStatusReturnType<quantity = Hex, status = Hex> = {\n  status: 'PENDING' | 'CONFIRMED'\n  receipts?: WalletCallReceipt<quantity, status>[] | undefined\n}\n\nexport type WalletPermissionCaveat = {\n  type: string\n  value: any\n}\n\nexport type WalletPermission = {\n  caveats: WalletPermissionCaveat[]\n  date: number\n  id: string\n  invoker: `http://${string}` | `https://${string}`\n  parentCapability: 'eth_accounts' | string\n}\n\nexport type WalletSendCallsParameters<\n  capabilities extends WalletCapabilities = WalletCapabilities,\n  chainId extends Hex | number = Hex,\n  quantity extends Quantity | bigint = Quantity,\n> = [\n  {\n    calls: readonly {\n      chainId?: chainId | undefined\n      to?: Address | undefined\n      data?: Hex | undefined\n      value?: quantity | undefined\n    }[]\n    capabilities?: capabilities | undefined\n    /** @deprecated Use `chainId` on `calls` instead. */\n    chainId?: chainId | undefined\n    from: Address\n    version: string\n  },\n]\n\nexport type WatchAssetParams = {\n  /** Token type. */\n  type: 'ERC20'\n  options: {\n    /** The address of the token contract */\n    address: string\n    /** A ticker symbol or shorthand, up to 11 characters */\n    symbol: string\n    /** The number of token decimals */\n    decimals: number\n    /** A string url of the token logo */\n    image?: string | undefined\n  }\n}\n\nexport type BundlerRpcSchema = [\n  /**\n   * @description Returns the chain ID associated with the current network\n   *\n   * @link https://eips.ethereum.org/EIPS/eip-4337#-eth_chainid\n   */\n  {\n    Method: 'eth_chainId'\n    Parameters?: undefined\n    ReturnType: Hex\n  },\n  /**\n   * @description Estimate the gas values for a UserOperation.\n   *\n   * @link https://eips.ethereum.org/EIPS/eip-4337#-eth_estimateuseroperationgas\n   *\n   * @example\n   * provider.request({\n   *  method: 'eth_estimateUserOperationGas',\n   *  params: [{ ... }]\n   * })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_estimateUserOperationGas'\n    Parameters:\n      | [userOperation: RpcUserOperation, entrypoint: Address]\n      | [\n          userOperation: RpcUserOperation,\n          entrypoint: Address,\n          stateOverrideSet: RpcStateOverride,\n        ]\n    ReturnType: RpcEstimateUserOperationGasReturnType\n  },\n  /**\n   * @description Return a UserOperation based on a hash.\n   *\n   * @link https://eips.ethereum.org/EIPS/eip-4337#-eth_getuseroperationbyhash\n   *\n   * @example\n   * provider.request({\n   *  method: 'eth_getUserOperationByHash',\n   *  params: ['0x...']\n   * })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_getUserOperationByHash'\n    Parameters: [hash: Hash]\n    ReturnType: RpcGetUserOperationByHashReturnType | null\n  },\n  /**\n   * @description Return a UserOperation receipt based on a hash.\n   *\n   * @link https://eips.ethereum.org/EIPS/eip-4337#-eth_getuseroperationreceipt\n   *\n   * @example\n   * provider.request({\n   *  method: 'eth_getUserOperationReceipt',\n   *  params: ['0x...']\n   * })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_getUserOperationReceipt'\n    Parameters: [hash: Hash]\n    ReturnType: RpcUserOperationReceipt | null\n  },\n  /**\n   * @description Submits a User Operation object to the User Operation pool of the client.\n   *\n   * @link https://eips.ethereum.org/EIPS/eip-4337#-eth_senduseroperation\n   *\n   * @example\n   * provider.request({\n   *  method: 'eth_sendUserOperation',\n   *  params: [{ ... }]\n   * })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_sendUserOperation'\n    Parameters: [userOperation: RpcUserOperation, entrypoint: Address]\n    ReturnType: Hash\n  },\n  /**\n   * @description Return the list of supported entry points by the client.\n   *\n   * @link https://eips.ethereum.org/EIPS/eip-4337#-eth_supportedentrypoints\n   */\n  {\n    Method: 'eth_supportedEntryPoints'\n    Parameters?: undefined\n    ReturnType: readonly Address[]\n  },\n]\n\nexport type DebugBundlerRpcSchema = [\n  /**\n   * @description Clears the bundler mempool and reputation data of paymasters/accounts/factories/aggregators.\n   *\n   * @link https://github.com/eth-infinitism/bundler-spec/blob/a247b5de59a702063ea5b09d6136f119a061642b/src/debug/debug.yaml#L1\n   */\n  {\n    Method: 'debug_bundler_clearState'\n    Parameters?: undefined\n    ReturnType: undefined\n  },\n  /**\n   * @description Returns the current mempool\n   *\n   * @link https://github.com/eth-infinitism/bundler-spec/blob/a247b5de59a702063ea5b09d6136f119a061642b/src/debug/debug.yaml#L8\n   */\n  {\n    Method: 'debug_bundler_dumpMempool'\n    Parameters: [entryPoint: Address]\n    ReturnType: readonly { userOp: RpcUserOperation }[]\n  },\n  /**\n   * @description Forces the bundler to execute the entire current mempool.\n   *\n   * @link https://github.com/eth-infinitism/bundler-spec/blob/a247b5de59a702063ea5b09d6136f119a061642b/src/debug/debug.yaml#L19\n   */\n  {\n    Method: 'debug_bundler_sendBundleNow'\n    Parameters?: undefined\n    ReturnType: Hash\n  },\n  /**\n   * @description Toggles bundling mode between 'auto' and 'manual'\n   *\n   * @link https://github.com/eth-infinitism/bundler-spec/blob/a247b5de59a702063ea5b09d6136f119a061642b/src/debug/debug.yaml#L26\n   */\n  {\n    Method: 'debug_bundler_setBundlingMode'\n    Parameters: [mode: 'auto' | 'manual']\n    ReturnType: undefined\n  },\n  /**\n   * @description Sets reputation of given addresses.\n   *\n   * @link https://github.com/eth-infinitism/bundler-spec/blob/a247b5de59a702063ea5b09d6136f119a061642b/src/debug/debug.yaml#L37\n   */\n  {\n    Method: 'debug_bundler_setReputation'\n    Parameters: [\n      reputations: readonly {\n        address: Address\n        opsSeen: Hex\n        opsIncluded: Hex\n      }[],\n      entryPoint: Address,\n    ]\n    ReturnType: undefined\n  },\n  /**\n   * @description Returns the reputation data of all observed addresses.\n   *\n   * @link https://github.com/eth-infinitism/bundler-spec/blob/a247b5de59a702063ea5b09d6136f119a061642b/src/debug/debug.yaml#L52\n   */\n  {\n    Method: 'debug_bundler_dumpReputation'\n    Parameters: [entryPoint: Address]\n    ReturnType: readonly {\n      address: Address\n      opsSeen: Hex\n      opsIncluded: Hex\n    }[]\n  },\n  /**\n   * @description Add a bulk of UserOps into the mempool\n   *\n   * @link https://github.com/eth-infinitism/bundler-spec/blob/a247b5de59a702063ea5b09d6136f119a061642b/src/debug/debug.yaml#L64\n   */\n  {\n    Method: 'debug_bundler_addUserOps'\n    Parameters: [userOps: readonly RpcUserOperation[], entryPoint: Address]\n    ReturnType: undefined\n  },\n]\n\nexport type PaymasterRpcSchema = [\n  /**\n   * @description Returns the chain ID associated with the current network\n   *\n   * @link https://eips.ethereum.org/EIPS/eip-4337#-eth_chainid\n   */\n  {\n    Method: 'pm_getPaymasterStubData'\n    Parameters?: [\n      userOperation: OneOf<\n        | PartialBy<\n            Pick<\n              RpcUserOperation<'0.6'>,\n              | 'callData'\n              | 'callGasLimit'\n              | 'initCode'\n              | 'maxFeePerGas'\n              | 'maxPriorityFeePerGas'\n              | 'nonce'\n              | 'sender'\n              | 'preVerificationGas'\n              | 'verificationGasLimit'\n            >,\n            | 'callGasLimit'\n            | 'initCode'\n            | 'maxFeePerGas'\n            | 'maxPriorityFeePerGas'\n            | 'preVerificationGas'\n            | 'verificationGasLimit'\n          >\n        | PartialBy<\n            Pick<\n              RpcUserOperation<'0.7'>,\n              | 'callData'\n              | 'callGasLimit'\n              | 'factory'\n              | 'factoryData'\n              | 'maxFeePerGas'\n              | 'maxPriorityFeePerGas'\n              | 'nonce'\n              | 'sender'\n              | 'preVerificationGas'\n              | 'verificationGasLimit'\n            >,\n            | 'callGasLimit'\n            | 'factory'\n            | 'factoryData'\n            | 'maxFeePerGas'\n            | 'maxPriorityFeePerGas'\n            | 'preVerificationGas'\n            | 'verificationGasLimit'\n          >\n      >,\n      entrypoint: Address,\n      chainId: Hex,\n      context: unknown,\n    ]\n    ReturnType: OneOf<\n      | { paymasterAndData: Hex }\n      | {\n          paymaster: Address\n          paymasterData: Hex\n          paymasterVerificationGasLimit: Hex\n          paymasterPostOpGasLimit: Hex\n        }\n    > & {\n      sponsor?: { name: string; icon?: string | undefined } | undefined\n      isFinal?: boolean | undefined\n    }\n  },\n  /**\n   * @description Returns values to be used in paymaster-related fields of a signed user operation.\n   *\n   * @link https://github.com/ethereum/ERCs/blob/master/ERCS/erc-7677.md#pm_getpaymasterdata\n   */\n  {\n    Method: 'pm_getPaymasterData'\n    Parameters?: [\n      userOperation:\n        | Pick<\n            RpcUserOperation<'0.6'>,\n            | 'callData'\n            | 'callGasLimit'\n            | 'initCode'\n            | 'maxFeePerGas'\n            | 'maxPriorityFeePerGas'\n            | 'nonce'\n            | 'sender'\n            | 'preVerificationGas'\n            | 'verificationGasLimit'\n          >\n        | Pick<\n            RpcUserOperation<'0.7'>,\n            | 'callData'\n            | 'callGasLimit'\n            | 'factory'\n            | 'factoryData'\n            | 'maxFeePerGas'\n            | 'maxPriorityFeePerGas'\n            | 'nonce'\n            | 'sender'\n            | 'preVerificationGas'\n            | 'verificationGasLimit'\n          >,\n      entrypoint: Address,\n      chainId: Hex,\n      context: unknown,\n    ]\n    ReturnType: OneOf<\n      | { paymasterAndData: Hex }\n      | {\n          paymaster: Address\n          paymasterData: Hex\n          paymasterVerificationGasLimit: Hex\n          paymasterPostOpGasLimit: Hex\n        }\n    >\n  },\n]\n\nexport type PublicRpcSchema = [\n  /**\n   * @description Returns the version of the current client\n   *\n   * @example\n   * provider.request({ method: 'web3_clientVersion' })\n   * // => 'MetaMask/v1.0.0'\n   */\n  {\n    Method: 'web3_clientVersion'\n    Parameters?: undefined\n    ReturnType: string\n  },\n  /**\n   * @description Hashes data using the Keccak-256 algorithm\n   *\n   * @example\n   * provider.request({ method: 'web3_sha3', params: ['0x68656c6c6f20776f726c64'] })\n   * // => '0xc94770007dda54cF92009BFF0dE90c06F603a09f'\n   */\n  {\n    Method: 'web3_sha3'\n    Parameters: [data: Hash]\n    ReturnType: string\n  },\n  /**\n   * @description Determines if this client is listening for new network connections\n   *\n   * @example\n   * provider.request({ method: 'net_listening' })\n   * // => true\n   */\n  {\n    Method: 'net_listening'\n    Parameters?: undefined\n    ReturnType: boolean\n  },\n  /**\n   * @description Returns the number of peers currently connected to this client\n   *\n   * @example\n   * provider.request({ method: 'net_peerCount' })\n   * // => '0x1'\n   */\n  {\n    Method: 'net_peerCount'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the chain ID associated with the current network\n   *\n   * @example\n   * provider.request({ method: 'net_version' })\n   * // => '1'\n   */\n  {\n    Method: 'net_version'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the base fee per blob gas in wei.\n   *\n   * @example\n   * provider.request({ method: 'eth_blobBaseFee' })\n   * // => '0x09184e72a000'\n   */\n  {\n    Method: 'eth_blobBaseFee'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the number of the most recent block seen by this client\n   *\n   * @example\n   * provider.request({ method: 'eth_blockNumber' })\n   * // => '0x1b4'\n   */\n  {\n    Method: 'eth_blockNumber'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Executes a new message call immediately without submitting a transaction to the network\n   *\n   * @example\n   * provider.request({ method: 'eth_call', params: [{ to: '0x...', data: '0x...' }] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_call'\n    Parameters:\n      | [transaction: ExactPartial<TransactionRequest>]\n      | [\n          transaction: ExactPartial<TransactionRequest>,\n          block: BlockNumber | BlockTag | BlockIdentifier,\n        ]\n      | [\n          transaction: ExactPartial<TransactionRequest>,\n          block: BlockNumber | BlockTag | BlockIdentifier,\n          stateOverrideSet: RpcStateOverride,\n        ]\n    ReturnType: Hex\n  },\n  /**\n   * @description Executes a new message call immediately without submitting a transaction to the network\n   *\n   * @example\n   * provider.request({ method: 'eth_call', params: [{ to: '0x...', data: '0x...' }] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_createAccessList'\n    Parameters:\n      | [transaction: ExactPartial<TransactionRequest>]\n      | [\n          transaction: ExactPartial<TransactionRequest>,\n          block: BlockNumber | BlockTag | BlockIdentifier,\n        ]\n    ReturnType: {\n      accessList: AccessList\n      gasUsed: Quantity\n    }\n  },\n  /**\n   * @description Returns the chain ID associated with the current network\n   * @example\n   * provider.request({ method: 'eth_chainId' })\n   * // => '1'\n   */\n  {\n    Method: 'eth_chainId'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the client coinbase address.\n   * @example\n   * provider.request({ method: 'eth_coinbase' })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_coinbase'\n    Parameters?: undefined\n    ReturnType: Address\n  },\n  /**\n   * @description Estimates the gas necessary to complete a transaction without submitting it to the network\n   *\n   * @example\n   * provider.request({\n   *  method: 'eth_estimateGas',\n   *  params: [{ from: '0x...', to: '0x...', value: '0x...' }]\n   * })\n   * // => '0x5208'\n   */\n  {\n    Method: 'eth_estimateGas'\n    Parameters:\n      | [transaction: TransactionRequest]\n      | [transaction: TransactionRequest, block: BlockNumber | BlockTag]\n      | [\n          transaction: TransactionRequest,\n          block: BlockNumber | BlockTag,\n          stateOverride: RpcStateOverride,\n        ]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns a collection of historical gas information\n   *\n   * @example\n   * provider.request({\n   *  method: 'eth_feeHistory',\n   *  params: ['4', 'latest', ['25', '75']]\n   * })\n   * // => {\n   * //   oldestBlock: '0x1',\n   * //   baseFeePerGas: ['0x1', '0x2', '0x3', '0x4'],\n   * //   gasUsedRatio: ['0x1', '0x2', '0x3', '0x4'],\n   * //   reward: [['0x1', '0x2'], ['0x3', '0x4'], ['0x5', '0x6'], ['0x7', '0x8']]\n   * // }\n   * */\n  {\n    Method: 'eth_feeHistory'\n    Parameters: [\n      /** Number of blocks in the requested range. Between 1 and 1024 blocks can be requested in a single query. Less than requested may be returned if not all blocks are available. */\n      blockCount: Quantity,\n      /** Highest number block of the requested range. */\n      newestBlock: BlockNumber | BlockTag,\n      /** A monotonically increasing list of percentile values to sample from each block's effective priority fees per gas in ascending order, weighted by gas used. */\n      rewardPercentiles: number[] | undefined,\n    ]\n    ReturnType: FeeHistory\n  },\n  /**\n   * @description Returns the current price of gas expressed in wei\n   *\n   * @example\n   * provider.request({ method: 'eth_gasPrice' })\n   * // => '0x09184e72a000'\n   */\n  {\n    Method: 'eth_gasPrice'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the balance of an address in wei\n   *\n   * @example\n   * provider.request({ method: 'eth_getBalance', params: ['0x...', 'latest'] })\n   * // => '0x12a05...'\n   */\n  {\n    Method: 'eth_getBalance'\n    Parameters: [\n      address: Address,\n      block: BlockNumber | BlockTag | BlockIdentifier,\n    ]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns information about a block specified by hash\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getBlockByHash', params: ['0x...', true] })\n   * // => {\n   * //   number: '0x1b4',\n   * //   hash: '0x...',\n   * //   parentHash: '0x...',\n   * //   ...\n   * // }\n   */\n  {\n    Method: 'eth_getBlockByHash'\n    Parameters: [\n      /** hash of a block */\n      hash: Hash,\n      /** true will pull full transaction objects, false will pull transaction hashes */\n      includeTransactionObjects: boolean,\n    ]\n    ReturnType: Block | null\n  },\n  /**\n   * @description Returns information about a block specified by number\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getBlockByNumber', params: ['0x1b4', true] })\n   * // => {\n   * //   number: '0x1b4',\n   * //   hash: '0x...',\n   * //   parentHash: '0x...',\n   * //   ...\n   * // }\n   */\n  {\n    Method: 'eth_getBlockByNumber'\n    Parameters: [\n      /** block number, or one of \"latest\", \"safe\", \"finalized\", \"earliest\" or \"pending\" */\n      block: BlockNumber | BlockTag,\n      /** true will pull full transaction objects, false will pull transaction hashes */\n      includeTransactionObjects: boolean,\n    ]\n    ReturnType: Block | null\n  },\n  /**\n   * @description Returns the number of transactions in a block specified by block hash\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getBlockTransactionCountByHash', params: ['0x...'] })\n   * // => '0x1'\n   */\n  {\n    Method: 'eth_getBlockTransactionCountByHash'\n    Parameters: [hash: Hash]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the number of transactions in a block specified by block number\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getBlockTransactionCountByNumber', params: ['0x1b4'] })\n   * // => '0x1'\n   */\n  {\n    Method: 'eth_getBlockTransactionCountByNumber'\n    Parameters: [block: BlockNumber | BlockTag]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the contract code stored at a given address\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getCode', params: ['0x...', 'latest'] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_getCode'\n    Parameters: [\n      address: Address,\n      block: BlockNumber | BlockTag | BlockIdentifier,\n    ]\n    ReturnType: Hex\n  },\n  /**\n   * @description Returns a list of all logs based on filter ID since the last log retrieval\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getFilterChanges', params: ['0x...'] })\n   * // => [{ ... }, { ... }]\n   */\n  {\n    Method: 'eth_getFilterChanges'\n    Parameters: [filterId: Quantity]\n    ReturnType: Log[] | Hex[]\n  },\n  /**\n   * @description Returns a list of all logs based on filter ID\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getFilterLogs', params: ['0x...'] })\n   * // => [{ ... }, { ... }]\n   */\n  {\n    Method: 'eth_getFilterLogs'\n    Parameters: [filterId: Quantity]\n    ReturnType: Log[]\n  },\n  /**\n   * @description Returns a list of all logs based on a filter object\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getLogs', params: [{ fromBlock: '0x...', toBlock: '0x...', address: '0x...', topics: ['0x...'] }] })\n   * // => [{ ... }, { ... }]\n   */\n  {\n    Method: 'eth_getLogs'\n    Parameters: [\n      {\n        address?: Address | Address[] | undefined\n        topics?: LogTopic[] | undefined\n      } & (\n        | {\n            fromBlock?: BlockNumber | BlockTag | undefined\n            toBlock?: BlockNumber | BlockTag | undefined\n            blockHash?: undefined\n          }\n        | {\n            fromBlock?: undefined\n            toBlock?: undefined\n            blockHash?: Hash | undefined\n          }\n      ),\n    ]\n    ReturnType: Log[]\n  },\n  /**\n   * @description Returns the account and storage values of the specified account including the Merkle-proof.\n   * @link https://eips.ethereum.org/EIPS/eip-1186\n   * @example\n   * provider.request({ method: 'eth_getProof', params: ['0x...', ['0x...'], 'latest'] })\n   * // => {\n   * //   ...\n   * // }\n   */\n  {\n    Method: 'eth_getProof'\n    Parameters: [\n      /** Address of the account. */\n      address: Address,\n      /** An array of storage-keys that should be proofed and included. */\n      storageKeys: Hash[],\n      block: BlockNumber | BlockTag,\n    ]\n    ReturnType: Proof\n  },\n  /**\n   * @description Returns the value from a storage position at an address\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getStorageAt', params: ['0x...', '0x...', 'latest'] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_getStorageAt'\n    Parameters: [\n      address: Address,\n      index: Quantity,\n      block: BlockNumber | BlockTag | BlockIdentifier,\n    ]\n    ReturnType: Hex\n  },\n  /**\n   * @description Returns information about a transaction specified by block hash and transaction index\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getTransactionByBlockHashAndIndex', params: ['0x...', '0x...'] })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_getTransactionByBlockHashAndIndex'\n    Parameters: [hash: Hash, index: Quantity]\n    ReturnType: Transaction | null\n  },\n  /**\n   * @description Returns information about a transaction specified by block number and transaction index\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getTransactionByBlockNumberAndIndex', params: ['0x...', '0x...'] })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_getTransactionByBlockNumberAndIndex'\n    Parameters: [block: BlockNumber | BlockTag, index: Quantity]\n    ReturnType: Transaction | null\n  },\n  /**\n   * @description Returns information about a transaction specified by hash\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getTransactionByHash', params: ['0x...'] })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_getTransactionByHash'\n    Parameters: [hash: Hash]\n    ReturnType: Transaction | null\n  },\n  /**\n   * @description Returns the number of transactions sent from an address\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getTransactionCount', params: ['0x...', 'latest'] })\n   * // => '0x1'\n   */\n  {\n    Method: 'eth_getTransactionCount'\n    Parameters: [\n      address: Address,\n      block: BlockNumber | BlockTag | BlockIdentifier,\n    ]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the receipt of a transaction specified by hash\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getTransactionReceipt', params: ['0x...'] })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_getTransactionReceipt'\n    Parameters: [hash: Hash]\n    ReturnType: TransactionReceipt | null\n  },\n  /**\n   * @description Returns information about an uncle specified by block hash and uncle index position\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getUncleByBlockHashAndIndex', params: ['0x...', '0x...'] })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_getUncleByBlockHashAndIndex'\n    Parameters: [hash: Hash, index: Quantity]\n    ReturnType: Uncle | null\n  },\n  /**\n   * @description Returns information about an uncle specified by block number and uncle index position\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getUncleByBlockNumberAndIndex', params: ['0x...', '0x...'] })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_getUncleByBlockNumberAndIndex'\n    Parameters: [block: BlockNumber | BlockTag, index: Quantity]\n    ReturnType: Uncle | null\n  },\n  /**\n   * @description Returns the number of uncles in a block specified by block hash\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getUncleCountByBlockHash', params: ['0x...'] })\n   * // => '0x1'\n   */\n  {\n    Method: 'eth_getUncleCountByBlockHash'\n    Parameters: [hash: Hash]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the number of uncles in a block specified by block number\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_getUncleCountByBlockNumber', params: ['0x...'] })\n   * // => '0x1'\n   */\n  {\n    Method: 'eth_getUncleCountByBlockNumber'\n    Parameters: [block: BlockNumber | BlockTag]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the current maxPriorityFeePerGas in wei.\n   * @link https://ethereum.github.io/execution-apis/api-documentation/\n   * @example\n   * provider.request({ method: 'eth_maxPriorityFeePerGas' })\n   * // => '0x5f5e100'\n   */\n  {\n    Method: 'eth_maxPriorityFeePerGas'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Creates a filter to listen for new blocks that can be used with `eth_getFilterChanges`\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_newBlockFilter' })\n   * // => '0x1'\n   */\n  {\n    Method: 'eth_newBlockFilter'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Creates a filter to listen for specific state changes that can then be used with `eth_getFilterChanges`\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_newFilter', params: [{ fromBlock: '0x...', toBlock: '0x...', address: '0x...', topics: ['0x...'] }] })\n   * // => '0x1'\n   */\n  {\n    Method: 'eth_newFilter'\n    Parameters: [\n      filter: {\n        fromBlock?: BlockNumber | BlockTag | undefined\n        toBlock?: BlockNumber | BlockTag | undefined\n        address?: Address | Address[] | undefined\n        topics?: LogTopic[] | undefined\n      },\n    ]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Creates a filter to listen for new pending transactions that can be used with `eth_getFilterChanges`\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_newPendingTransactionFilter' })\n   * // => '0x1'\n   */\n  {\n    Method: 'eth_newPendingTransactionFilter'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Returns the current Ethereum protocol version\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_protocolVersion' })\n   * // => '54'\n   */\n  {\n    Method: 'eth_protocolVersion'\n    Parameters?: undefined\n    ReturnType: string\n  },\n  /**\n   * @description Sends a **signed** transaction to the network\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_sendRawTransaction', params: ['0x...'] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_sendRawTransaction'\n    Parameters: [signedTransaction: Hex]\n    ReturnType: Hash\n  },\n  /**\n   * @description Simulates execution of a set of calls with optional block and state overrides.\n   * @example\n   * provider.request({ method: 'eth_simulateV1', params: [{ blockStateCalls: [{ calls: [{ from: '0x...', to: '0x...', value: '0x...', data: '0x...' }] }] }, 'latest'] })\n   * // => { ... }\n   */\n  {\n    Method: 'eth_simulateV1'\n    Parameters: [\n      {\n        blockStateCalls: readonly {\n          blockOverrides?: BlockOverrides.Rpc | undefined\n          calls?: readonly ExactPartial<TransactionRequest>[] | undefined\n          stateOverrides?: RpcStateOverride | undefined\n        }[]\n        returnFullTransactions?: boolean | undefined\n        traceTransfers?: boolean | undefined\n        validation?: boolean | undefined\n      },\n      BlockNumber | BlockTag,\n    ]\n    ReturnType: readonly (Block & {\n      calls: readonly {\n        error?:\n          | {\n              data?: Hex | undefined\n              code: number\n              message: string\n            }\n          | undefined\n        logs?: readonly Log[] | undefined\n        gasUsed: Hex\n        returnData: Hex\n        status: Hex\n      }[]\n    })[]\n  },\n  /**\n   * @description Destroys a filter based on filter ID\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_uninstallFilter', params: ['0x1'] })\n   * // => true\n   */\n  {\n    Method: 'eth_uninstallFilter'\n    Parameters: [filterId: Quantity]\n    ReturnType: boolean\n  },\n]\n\nexport type TestRpcSchema<mode extends string> = [\n  /**\n   * @description Add information about compiled contracts\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_addcompilationresult\n   */\n  {\n    Method: `${mode}_addCompilationResult`\n    Parameters: any[]\n    ReturnType: any\n  },\n  /**\n   * @description Remove a transaction from the mempool\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_droptransaction\n   */\n  {\n    Method: `${mode}_dropTransaction`\n    Parameters: [hash: Hash]\n    ReturnType: void\n  },\n  /**\n   * @description Serializes the current state (including contracts code, contract's storage, accounts properties, etc.) into a savable data blob.\n   */\n  {\n    Method: `${mode}_dumpState`\n    Parameters?: undefined\n    ReturnType: Hex\n  },\n  /**\n   * @description Turn on call traces for transactions that are returned to the user when they execute a transaction (instead of just txhash/receipt).\n   */\n  {\n    Method: `${mode}_enableTraces`\n    Parameters?: undefined\n    ReturnType: void\n  },\n  /**\n   * @description Impersonate an account or contract address.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_impersonateaccount\n   */\n  {\n    Method: `${mode}_impersonateAccount`\n    Parameters: [address: Address]\n    ReturnType: void\n  },\n  /**\n   * @description Returns true if automatic mining is enabled, and false otherwise. See [Mining Modes](https://hardhat.org/hardhat-network/explanation/mining-modes) to learn more.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_getautomine\n   */\n  {\n    Method: `${mode}_getAutomine`\n    Parameters?: undefined\n    ReturnType: boolean\n  },\n  /**\n   * @description Adds state previously dumped with `dumpState` to the current chain.\n   */\n  {\n    Method: `${mode}_loadState`\n    Parameters?: [Hex] | undefined\n    ReturnType: void\n  },\n  /**\n   * @description Advance the block number of the network by a certain number of blocks\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_mine\n   */\n  {\n    Method: `${mode}_mine`\n    Parameters: [\n      /** Number of blocks to mine. */\n      count: Hex,\n      /** Interval between each block in seconds. */\n      interval: Hex | undefined,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Resets the fork.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_reset\n   */\n  {\n    Method: `${mode}_reset`\n    Parameters: any[]\n    ReturnType: void\n  },\n  /**\n   * @description Modifies the balance of an account.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_setbalance\n   */\n  {\n    Method: `${mode}_setBalance`\n    Parameters: [\n      /** The address of the target account. */\n      address: Address,\n      /** Amount to send in wei. */\n      balance: Quantity,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Modifies the bytecode stored at an account's address.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_setcode\n   */\n  {\n    Method: `${mode}_setCode`\n    Parameters: [\n      /** The address of the contract. */\n      address: Address,\n      /** Data bytecode. */\n      data: string,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Sets the coinbase address to be used in new blocks.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_setcoinbase\n   */\n  {\n    Method: `${mode}_setCoinbase`\n    Parameters: [\n      /** The address to set as the coinbase address. */\n      address: Address,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Enable or disable logging on the test node network.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_setcoinbase\n   */\n  {\n    Method: `${mode}_setLoggingEnabled`\n    Parameters: [enabled: boolean]\n    ReturnType: void\n  },\n  /**\n   * @description Change the minimum gas price accepted by the network (in wei).\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_setmingasprice\n   */\n  {\n    Method: `${mode}_setMinGasPrice`\n    Parameters: [gasPrice: Quantity]\n    ReturnType: void\n  },\n  /**\n   * @description Sets the base fee of the next block.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_setnextblockbasefeepergas\n   */\n  {\n    Method: `${mode}_setNextBlockBaseFeePerGas`\n    Parameters: [baseFeePerGas: Quantity]\n    ReturnType: void\n  },\n  /**\n   * @description Modifies an account's nonce by overwriting it.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_setnonce\n   */\n  {\n    Method: `${mode}_setNonce`\n    Parameters: [\n      /** The account address. */\n      address: Address,\n      /** The new nonce. */\n      nonce: Quantity,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Sets the backend RPC URL.\n   */\n  {\n    Method: `${mode}_setRpcUrl`\n    Parameters: [url: string]\n    ReturnType: void\n  },\n  /**\n   * @description Writes a single position of an account's storage.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_setstorageat\n   */\n  {\n    Method: `${mode}_setStorageAt`\n    Parameters: [\n      /** The account address. */\n      address: Address,\n      /** The storage position index. */\n      index: Quantity,\n      /** The storage value. */\n      value: Quantity,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Use this method to stop impersonating an account after having previously used impersonateAccount.\n   * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_stopimpersonatingaccount\n   */\n  {\n    Method: `${mode}_stopImpersonatingAccount`\n    Parameters: [\n      /** The address to stop impersonating. */\n      address: Address,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Jump forward in time by the given amount of time, in seconds.\n   * @link https://github.com/trufflesuite/ganache/blob/ef1858d5d6f27e4baeb75cccd57fb3dc77a45ae8/src/chains/ethereum/ethereum/RPC-METHODS.md#evm_increasetime\n   */\n  {\n    Method: `${mode}_increaseTime`\n    Parameters: [seconds: number]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Modifies the balance of an account.\n   * @link https://ganache.dev/#evm_setAccountBalance\n   */\n  {\n    Method: 'evm_setAccountBalance'\n    Parameters: [\n      /** The address of the target account. */\n      address: Address,\n      /** Amount to send in wei. */\n      value: Quantity,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Modifies the bytecode stored at an account's address.\n   * @link https://ganache.dev/#evm_setAccountCode\n   */\n  {\n    Method: 'evm_setAccountCode'\n    Parameters: [\n      /** The address of the contract. */\n      address: Address,\n      /** Data bytecode. */\n      data: string,\n    ]\n    ReturnType: void\n  },\n  /**\n   * @description Enables or disables, based on the single boolean argument, the automatic mining of new blocks with each new transaction submitted to the network.\n   * @link https://hardhat.org/hardhat-network/docs/reference#evm_setautomine\n   */\n  {\n    Method: 'evm_setAutomine'\n    Parameters: [boolean]\n    ReturnType: void\n  },\n  /**\n   * @description Sets the block's gas limit.\n   * @link https://hardhat.org/hardhat-network/docs/reference#evm_setblockgaslimit\n   */\n  {\n    Method: 'evm_setBlockGasLimit'\n    Parameters: [gasLimit: Quantity]\n    ReturnType: void\n  },\n  /**\n   * @description Jump forward in time by the given amount of time, in seconds.\n   * @link https://github.com/trufflesuite/ganache/blob/ef1858d5d6f27e4baeb75cccd57fb3dc77a45ae8/src/chains/ethereum/ethereum/RPC-METHODS.md#evm_increasetime\n   */\n  {\n    Method: 'evm_increaseTime'\n    Parameters: [seconds: Quantity]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Similar to `evm_increaseTime` but sets a block timestamp `interval`.\n   * The timestamp of the next block will be computed as `lastBlock_timestamp` + `interval`\n   */\n  {\n    Method: `${mode}_setBlockTimestampInterval`\n    Parameters: [seconds: number]\n    ReturnType: void\n  },\n  /**\n   * @description Removes `setBlockTimestampInterval` if it exists\n   */\n  {\n    Method: `${mode}_removeBlockTimestampInterval`\n    Parameters?: undefined\n    ReturnType: void\n  },\n  /**\n   * @description Enables (with a numeric argument greater than 0) or disables (with a numeric argument equal to 0), the automatic mining of blocks at a regular interval of milliseconds, each of which will include all pending transactions.\n   * @link https://hardhat.org/hardhat-network/docs/reference#evm_setintervalmining\n   */\n  {\n    Method: 'evm_setIntervalMining'\n    Parameters: [number]\n    ReturnType: void\n  },\n  /**\n   * @description Set the timestamp of the next block.\n   * @link https://hardhat.org/hardhat-network/docs/reference#evm_setnextblocktimestamp\n   */\n  {\n    Method: 'evm_setNextBlockTimestamp'\n    Parameters: [Quantity]\n    ReturnType: void\n  },\n  /**\n   * @description Snapshot the state of the blockchain at the current block. Takes no parameters. Returns the id of the snapshot that was created.\n   * @link https://hardhat.org/hardhat-network/docs/reference#evm_snapshot\n   */\n  {\n    Method: 'evm_snapshot'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Revert the state of the blockchain to a previous snapshot. Takes a single parameter, which is the snapshot id to revert to.\n   */\n  {\n    Method: 'evm_revert'\n    Parameters?: [id: Quantity] | undefined\n    ReturnType: void\n  },\n  /**\n   * @description Enables the automatic mining of new blocks with each new transaction submitted to the network.\n   * @link https://ganache.dev/#miner_start\n   */\n  {\n    Method: 'miner_start'\n    Parameters?: undefined\n    ReturnType: void\n  },\n  /**\n   * @description Disables the automatic mining of new blocks with each new transaction submitted to the network.\n   * @link https://ganache.dev/#miner_stop\n   */\n  {\n    Method: 'miner_stop'\n    Parameters?: undefined\n    ReturnType: void\n  },\n  /**\n   * @link https://geth.ethereum.org/docs/interacting-with-geth/rpc/ns-txpool#txpool-content\n   */\n  {\n    Method: 'txpool_content'\n    Parameters?: undefined\n    ReturnType: {\n      pending: Record<Address, Record<string, Transaction>>\n      queued: Record<Address, Record<string, Transaction>>\n    }\n  },\n  /**\n   * @link https://geth.ethereum.org/docs/interacting-with-geth/rpc/ns-txpool#txpool-inspect\n   */\n  {\n    Method: 'txpool_inspect'\n    Parameters?: undefined\n    ReturnType: {\n      pending: Record<Address, Record<string, string>>\n      queued: Record<Address, Record<string, string>>\n    }\n  },\n  /**\n   * @link https://geth.ethereum.org/docs/interacting-with-geth/rpc/ns-txpool#txpool-inspect\n   */\n  {\n    Method: 'txpool_status'\n    Parameters?: undefined\n    ReturnType: {\n      pending: Quantity\n      queued: Quantity\n    }\n  },\n  /**\n   * @description Returns whether the client is actively mining new blocks.\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_mining' })\n   * // => true\n   */\n  {\n    Method: 'eth_mining'\n    Parameters?: undefined\n    ReturnType: boolean\n  },\n  /**\n   * @description Advance the block number of the network by a certain number of blocks.\n   * @link https://ganache.dev/#evm_mine\n   */\n  {\n    Method: 'evm_mine'\n    Parameters?:\n      | [\n          {\n            /** Number of blocks to mine. */\n            blocks: Hex\n          },\n        ]\n      | undefined\n    ReturnType: void\n  },\n  /**\n   * @description Creates, signs, and sends a new transaction to the network regardless of the signature.\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_sendTransaction', params: [{ from: '0x...', to: '0x...', value: '0x...' }] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_sendUnsignedTransaction'\n    Parameters: [transaction: TransactionRequest]\n    ReturnType: Hash\n  },\n]\n\nexport type WalletRpcSchema = [\n  /**\n   * @description Returns a list of addresses owned by this client\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_accounts' })\n   * // => ['0x0fB69...']\n   */\n  {\n    Method: 'eth_accounts'\n    Parameters?: undefined\n    ReturnType: Address[]\n  },\n  /**\n   * @description Returns the current chain ID associated with the wallet.\n   * @example\n   * provider.request({ method: 'eth_chainId' })\n   * // => '1'\n   */\n  {\n    Method: 'eth_chainId'\n    Parameters?: undefined\n    ReturnType: Quantity\n  },\n  /**\n   * @description Estimates the gas necessary to complete a transaction without submitting it to the network\n   *\n   * @example\n   * provider.request({\n   *  method: 'eth_estimateGas',\n   *  params: [{ from: '0x...', to: '0x...', value: '0x...' }]\n   * })\n   * // => '0x5208'\n   */\n  {\n    Method: 'eth_estimateGas'\n    Parameters:\n      | [transaction: TransactionRequest]\n      | [transaction: TransactionRequest, block: BlockNumber | BlockTag]\n      | [\n          transaction: TransactionRequest,\n          block: BlockNumber | BlockTag,\n          stateOverride: RpcStateOverride,\n        ]\n    ReturnType: Quantity\n  },\n  /**\n   * @description Requests that the user provides an Ethereum address to be identified by. Typically causes a browser extension popup to appear.\n   * @link https://eips.ethereum.org/EIPS/eip-1102\n   * @example\n   * provider.request({ method: 'eth_requestAccounts' }] })\n   * // => ['0x...', '0x...']\n   */\n  {\n    Method: 'eth_requestAccounts'\n    Parameters?: undefined\n    ReturnType: Address[]\n  },\n  /**\n   * @description Creates, signs, and sends a new transaction to the network\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_sendTransaction', params: [{ from: '0x...', to: '0x...', value: '0x...' }] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_sendTransaction'\n    Parameters: [transaction: TransactionRequest]\n    ReturnType: Hash\n  },\n  /**\n   * @description Sends and already-signed transaction to the network\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_sendRawTransaction', params: ['0x...'] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_sendRawTransaction'\n    Parameters: [signedTransaction: Hex]\n    ReturnType: Hash\n  },\n  /**\n   * @description Calculates an Ethereum-specific signature in the form of `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_sign', params: ['0x...', '0x...'] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_sign'\n    Parameters: [\n      /** Address to use for signing */\n      address: Address,\n      /** Data to sign */\n      data: Hex,\n    ]\n    ReturnType: Hex\n  },\n  /**\n   * @description Signs a transaction that can be submitted to the network at a later time using with `eth_sendRawTransaction`\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_signTransaction', params: [{ from: '0x...', to: '0x...', value: '0x...' }] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_signTransaction'\n    Parameters: [request: TransactionRequest]\n    ReturnType: Hex\n  },\n  /**\n   * @description Calculates an Ethereum-specific signature in the form of `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_signTypedData_v4', params: [{ from: '0x...', data: [{ type: 'string', name: 'message', value: 'hello world' }] }] })\n   * // => '0x...'\n   */\n  {\n    Method: 'eth_signTypedData_v4'\n    Parameters: [\n      /** Address to use for signing */\n      address: Address,\n      /** Message to sign containing type information, a domain separator, and data */\n      message: string,\n    ]\n    ReturnType: Hex\n  },\n  /**\n   * @description Returns information about the status of this client’s network synchronization\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'eth_syncing' })\n   * // => { startingBlock: '0x...', currentBlock: '0x...', highestBlock: '0x...' }\n   */\n  {\n    Method: 'eth_syncing'\n    Parameters?: undefined\n    ReturnType: NetworkSync | false\n  },\n  /**\n   * @description Calculates an Ethereum-specific signature in the form of `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'personal_sign', params: ['0x...', '0x...'] })\n   * // => '0x...'\n   */\n  {\n    Method: 'personal_sign'\n    Parameters: [\n      /** Data to sign */\n      data: Hex,\n      /** Address to use for signing */\n      address: Address,\n    ]\n    ReturnType: Hex\n  },\n  /**\n   * @description Add an Ethereum chain to the wallet.\n   * @link https://eips.ethereum.org/EIPS/eip-3085\n   * @example\n   * provider.request({ method: 'wallet_addEthereumChain', params: [{ chainId: 1, rpcUrl: 'https://mainnet.infura.io/v3/...' }] })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_addEthereumChain'\n    Parameters: [chain: AddEthereumChainParameter]\n    ReturnType: null\n  },\n  /**\n   * @description Returns the status of a call batch that was sent via `wallet_sendCalls`.\n   * @link https://eips.ethereum.org/EIPS/eip-5792\n   * @example\n   * provider.request({ method: 'wallet_getCallsStatus' })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_getCallsStatus'\n    Parameters?: [string]\n    ReturnType: WalletGetCallsStatusReturnType\n  },\n  /**\n   * @description Gets the connected wallet's capabilities.\n   * @link https://eips.ethereum.org/EIPS/eip-5792\n   * @example\n   * provider.request({ method: 'wallet_getCapabilities' })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_getCapabilities'\n    Parameters?: [Address]\n    ReturnType: Prettify<WalletCapabilitiesRecord>\n  },\n  /**\n   * @description Gets the wallets current permissions.\n   * @link https://eips.ethereum.org/EIPS/eip-2255\n   * @example\n   * provider.request({ method: 'wallet_getPermissions' })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_getPermissions'\n    Parameters?: undefined\n    ReturnType: WalletPermission[]\n  },\n  /**\n   * @description Requests permissions from a wallet\n   * @link https://eips.ethereum.org/EIPS/eip-7715\n   * @example\n   * provider.request({ method: 'wallet_grantPermissions', params: [{ ... }] })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_grantPermissions'\n    Parameters?: [WalletGrantPermissionsParameters]\n    ReturnType: Prettify<WalletGrantPermissionsReturnType>\n  },\n  /**\n   * @description Requests the given permissions from the user.\n   * @link https://eips.ethereum.org/EIPS/eip-2255\n   * @example\n   * provider.request({ method: 'wallet_requestPermissions', params: [{ eth_accounts: {} }] })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_requestPermissions'\n    Parameters: [permissions: { eth_accounts: Record<string, any> }]\n    ReturnType: WalletPermission[]\n  },\n  /**\n   * @description Revokes the given permissions from the user.\n   * @link https://github.com/MetaMask/metamask-improvement-proposals/blob/main/MIPs/mip-2.md\n   * @example\n   * provider.request({ method: 'wallet_revokePermissions', params: [{ eth_accounts: {} }] })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_revokePermissions'\n    Parameters: [permissions: { eth_accounts: Record<string, any> }]\n    ReturnType: null\n  },\n  /**\n   * @description Requests the connected wallet to send a batch of calls.\n   * @link https://eips.ethereum.org/EIPS/eip-5792\n   * @example\n   * provider.request({ method: 'wallet_sendCalls' })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_sendCalls'\n    Parameters?: WalletSendCallsParameters\n    ReturnType: string\n  },\n  /**\n   * @description Creates, signs, and sends a new transaction to the network\n   * @link https://eips.ethereum.org/EIPS/eip-1474\n   * @example\n   * provider.request({ method: 'wallet_sendTransaction', params: [{ from: '0x...', to: '0x...', value: '0x...' }] })\n   * // => '0x...'\n   */\n  {\n    Method: 'wallet_sendTransaction'\n    Parameters: [transaction: TransactionRequest]\n    ReturnType: Hash\n  },\n  /**\n   * @description Requests for the wallet to show information about a call batch\n   * that was sent via `wallet_sendCalls`.\n   * @link https://eips.ethereum.org/EIPS/eip-5792\n   * @example\n   * provider.request({ method: 'wallet_showCallsStatus', params: ['...'] })\n   */\n  {\n    Method: 'wallet_showCallsStatus'\n    Parameters?: [string]\n    ReturnType: void\n  },\n  /**\n   * @description Switch the wallet to the given Ethereum chain.\n   * @link https://eips.ethereum.org/EIPS/eip-3326\n   * @example\n   * provider.request({ method: 'wallet_switchEthereumChain', params: [{ chainId: '0xf00' }] })\n   * // => { ... }\n   */\n  {\n    Method: 'wallet_switchEthereumChain'\n    Parameters: [chain: { chainId: string }]\n    ReturnType: null\n  },\n  /**\n   * @description Requests that the user tracks the token in their wallet. Returns a boolean indicating if the token was successfully added.\n   * @link https://eips.ethereum.org/EIPS/eip-747\n   * @example\n   * provider.request({ method: 'wallet_watchAsset' }] })\n   * // => true\n   */\n  {\n    Method: 'wallet_watchAsset'\n    Parameters: WatchAssetParams\n    ReturnType: boolean\n  },\n]\n\n///////////////////////////////////////////////////////////////////////////\n// Utils\n\nexport type RpcSchema = readonly {\n  Method: string\n  Parameters?: unknown | undefined\n  ReturnType: unknown\n}[]\n\nexport type RpcSchemaOverride = Omit<RpcSchema[number], 'Method'>\n\nexport type EIP1193Parameters<\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = rpcSchema extends RpcSchema\n  ? {\n      [K in keyof rpcSchema]: Prettify<\n        {\n          method: rpcSchema[K] extends rpcSchema[number]\n            ? rpcSchema[K]['Method']\n            : never\n        } & (rpcSchema[K] extends rpcSchema[number]\n          ? rpcSchema[K]['Parameters'] extends undefined\n            ? { params?: undefined }\n            : { params: rpcSchema[K]['Parameters'] }\n          : never)\n      >\n    }[number]\n  : {\n      method: string\n      params?: unknown | undefined\n    }\n\nexport type EIP1193RequestOptions = {\n  /** Deduplicate in-flight requests. */\n  dedupe?: boolean | undefined\n  /** Methods to include or exclude from executing RPC requests. */\n  methods?:\n    | OneOf<\n        | {\n            include?: string[] | undefined\n          }\n        | {\n            exclude?: string[] | undefined\n          }\n      >\n    | undefined\n  /** The base delay (in ms) between retries. */\n  retryDelay?: number | undefined\n  /** The max number of times to retry. */\n  retryCount?: number | undefined\n  /** Unique identifier for the request. */\n  uid?: string | undefined\n}\n\ntype DerivedRpcSchema<\n  rpcSchema extends RpcSchema | undefined,\n  rpcSchemaOverride extends RpcSchemaOverride | undefined,\n> = rpcSchemaOverride extends RpcSchemaOverride\n  ? [rpcSchemaOverride & { Method: string }]\n  : rpcSchema\n\nexport type EIP1193RequestFn<\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = <\n  rpcSchemaOverride extends RpcSchemaOverride | undefined = undefined,\n  _parameters extends EIP1193Parameters<\n    DerivedRpcSchema<rpcSchema, rpcSchemaOverride>\n  > = EIP1193Parameters<DerivedRpcSchema<rpcSchema, rpcSchemaOverride>>,\n  _returnType = DerivedRpcSchema<rpcSchema, rpcSchemaOverride> extends RpcSchema\n    ? Extract<\n        DerivedRpcSchema<rpcSchema, rpcSchemaOverride>[number],\n        { Method: _parameters['method'] }\n      >['ReturnType']\n    : unknown,\n>(\n  args: _parameters,\n  options?: EIP1193RequestOptions | undefined,\n) => Promise<_returnType>\n"],"names":[],"mappings":";;;AAkDM,MAAO,gBAAiB,SAAQ,KAAK;IAIzC,YAAY,IAAY,EAAE,OAAe,CAAA;QACvC,KAAK,CAAC,OAAO,CAAC,CAAA;QAJhB,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;;WAAY;QACZ,OAAA,cAAA,CAAA,IAAA,EAAA,WAAA;;;;;WAAe;QAIb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;IACxB,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 4382, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4388, "column": 0}, "map": {"version":3,"file":"createClient.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/clients/createClient.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { JsonRpcAccount } from '../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../accounts/utils/parseAccount.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { Account } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type {\n  EIP1193RequestFn,\n  EIP1474Methods,\n  RpcSchema,\n} from '../types/eip1193.js'\nimport type { ExactPartial, Prettify } from '../types/utils.js'\nimport type {\n  CcipRequestParameters,\n  CcipRequestReturnType,\n} from '../utils/ccip.js'\nimport { uid } from '../utils/uid.js'\nimport type { PublicActions } from './decorators/public.js'\nimport type { WalletActions } from './decorators/wallet.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type ClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = {\n  /** The Account to use for the Client. This will be used for Actions that require an account as an argument. */\n  account?: accountOrAddress | Account | Address | undefined\n  /** Flags for batch settings. */\n  batch?:\n    | {\n        /** Toggle to enable `eth_call` multicall aggregation. */\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined\n      }\n    | undefined\n  /**\n   * Time (in ms) that cached data will remain in memory.\n   * @default 4_000\n   */\n  cacheTime?: number | undefined\n  /**\n   * [CCIP Read](https://eips.ethereum.org/EIPS/eip-3668) configuration.\n   * If `false`, the client will not support offchain CCIP lookups.\n   */\n  ccipRead?:\n    | {\n        /**\n         * A function that will be called to make the offchain CCIP lookup request.\n         * @see https://eips.ethereum.org/EIPS/eip-3668#client-lookup-protocol\n         */\n        request?: (\n          parameters: CcipRequestParameters,\n        ) => Promise<CcipRequestReturnType>\n      }\n    | false\n    | undefined\n  /** Chain for the client. */\n  chain?: Chain | undefined | chain\n  /** A key for the client. */\n  key?: string | undefined\n  /** A name for the client. */\n  name?: string | undefined\n  /**\n   * Frequency (in ms) for polling enabled actions & events.\n   * @default 4_000\n   */\n  pollingInterval?: number | undefined\n  /**\n   * Typed JSON-RPC schema for the client.\n   */\n  rpcSchema?: rpcSchema | undefined\n  /** The RPC transport */\n  transport: transport\n  /** The type of client. */\n  type?: string | undefined\n}\n\n// Actions that are used internally by other Actions (ie. `call` is used by `readContract`).\n// They are allowed to be extended, but must conform to their parameter & return type interfaces.\n// Example: an extended `call` action must accept `CallParameters` as parameters,\n// and conform to the `CallReturnType` return type.\ntype ExtendableProtectedActions<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n> = Pick<\n  PublicActions<transport, chain, account>,\n  | 'call'\n  | 'createContractEventFilter'\n  | 'createEventFilter'\n  | 'estimateContractGas'\n  | 'estimateGas'\n  | 'getBlock'\n  | 'getBlockNumber'\n  | 'getChainId'\n  | 'getContractEvents'\n  | 'getEnsText'\n  | 'getFilterChanges'\n  | 'getGasPrice'\n  | 'getLogs'\n  | 'getTransaction'\n  | 'getTransactionCount'\n  | 'getTransactionReceipt'\n  | 'prepareTransactionRequest'\n  | 'readContract'\n  | 'sendRawTransaction'\n  | 'simulateContract'\n  | 'uninstallFilter'\n  | 'watchBlockNumber'\n  | 'watchContractEvent'\n> &\n  Pick<WalletActions<chain, account>, 'sendTransaction' | 'writeContract'>\n\n// TODO: Move `transport` to slot index 2 since `chain` and `account` used more frequently.\n// Otherwise, we end up with a lot of `Client<Transport, chain, account>` in actions.\nexport type Client<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n  extended extends Extended | undefined = Extended | undefined,\n> = Client_Base<transport, chain, account, rpcSchema> &\n  (extended extends Extended ? extended : unknown) & {\n    extend: <\n      const client extends Extended &\n        ExactPartial<ExtendableProtectedActions<transport, chain, account>>,\n    >(\n      fn: (\n        client: Client<transport, chain, account, rpcSchema, extended>,\n      ) => client,\n    ) => Client<\n      transport,\n      chain,\n      account,\n      rpcSchema,\n      Prettify<client> & (extended extends Extended ? extended : unknown)\n    >\n  }\n\ntype Client_Base<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = {\n  /** The Account of the Client. */\n  account: account\n  /** Flags for batch settings. */\n  batch?: ClientConfig['batch'] | undefined\n  /** Time (in ms) that cached data will remain in memory. */\n  cacheTime: number\n  /** [CCIP Read](https://eips.ethereum.org/EIPS/eip-3668) configuration. */\n  ccipRead?: ClientConfig['ccipRead'] | undefined\n  /** Chain for the client. */\n  chain: chain\n  /** A key for the client. */\n  key: string\n  /** A name for the client. */\n  name: string\n  /** Frequency (in ms) for polling enabled actions & events. Defaults to 4_000 milliseconds. */\n  pollingInterval: number\n  /** Request function wrapped with friendly error handling */\n  request: EIP1193RequestFn<\n    rpcSchema extends undefined ? EIP1474Methods : rpcSchema\n  >\n  /** The RPC transport */\n  transport: ReturnType<transport>['config'] & ReturnType<transport>['value']\n  /** The type of client. */\n  type: string\n  /** A unique ID for the client. */\n  uid: string\n}\n\ntype Extended = Prettify<\n  // disallow redefining base properties\n  { [_ in keyof Client_Base]?: undefined } & {\n    [key: string]: unknown\n  }\n>\n\nexport type MulticallBatchOptions = {\n  /** The maximum size (in bytes) for each calldata chunk. @default 1_024 */\n  batchSize?: number | undefined\n  /** The maximum number of milliseconds to wait before sending a batch. @default 0 */\n  wait?: number | undefined\n}\n\nexport type CreateClientErrorType = ParseAccountErrorType | ErrorType\n\nexport function createClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n>(\n  parameters: ClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n): Prettify<\n  Client<\n    transport,\n    chain,\n    accountOrAddress extends Address\n      ? Prettify<JsonRpcAccount<accountOrAddress>>\n      : accountOrAddress,\n    rpcSchema\n  >\n>\n\nexport function createClient(parameters: ClientConfig): Client {\n  const {\n    batch,\n    cacheTime = parameters.pollingInterval ?? 4_000,\n    ccipRead,\n    key = 'base',\n    name = 'Base Client',\n    pollingInterval = 4_000,\n    type = 'base',\n  } = parameters\n\n  const chain = parameters.chain\n  const account = parameters.account\n    ? parseAccount(parameters.account)\n    : undefined\n  const { config, request, value } = parameters.transport({\n    chain,\n    pollingInterval,\n  })\n  const transport = { ...config, ...value }\n\n  const client = {\n    account,\n    batch,\n    cacheTime,\n    ccipRead,\n    chain,\n    key,\n    name,\n    pollingInterval,\n    request,\n    transport,\n    type,\n    uid: uid(),\n  }\n\n  function extend(base: typeof client) {\n    type ExtendFn = (base: typeof client) => unknown\n    return (extendFn: ExtendFn) => {\n      const extended = extendFn(base) as Extended\n      for (const key in client) delete extended[key]\n      const combined = { ...base, ...extended }\n      return Object.assign(combined, { extend: extend(combined as any) })\n    }\n  }\n\n  return Object.assign(client, { extend: extend(client) as any })\n}\n\n/**\n * Defines a typed JSON-RPC schema for the client.\n * Note: This is a runtime noop function.\n */\nexport function rpcSchema<rpcSchema extends RpcSchema>(): rpcSchema {\n  return null as any\n}\n"],"names":[],"mappings":";;;;AAGA,OAAO,EAEL,YAAY,GACb,MAAM,mCAAmC,CAAA;AAc1C,OAAO,EAAE,GAAG,EAAE,MAAM,iBAAiB,CAAA;;;AAmM/B,SAAU,YAAY,CAAC,UAAwB;IACnD,MAAM,EACJ,KAAK,EACL,SAAS,GAAG,UAAU,CAAC,eAAe,IAAI,KAAK,EAC/C,QAAQ,EACR,GAAG,GAAG,MAAM,EACZ,IAAI,GAAG,aAAa,EACpB,eAAe,GAAG,KAAK,EACvB,IAAI,GAAG,MAAM,EACd,GAAG,UAAU,CAAA;IAEd,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAA;IAC9B,MAAM,OAAO,GAAG,UAAU,CAAC,OAAO,yKAC9B,eAAA,AAAY,EAAC,UAAU,CAAC,OAAO,CAAC,GAChC,SAAS,CAAA;IACb,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC;QACtD,KAAK;QACL,eAAe;KAChB,CAAC,CAAA;IACF,MAAM,SAAS,GAAG;QAAE,GAAG,MAAM;QAAE,GAAG,KAAK;IAAA,CAAE,CAAA;IAEzC,MAAM,MAAM,GAAG;QACb,OAAO;QACP,KAAK;QACL,SAAS;QACT,QAAQ;QACR,KAAK;QACL,GAAG;QACH,IAAI;QACJ,eAAe;QACf,OAAO;QACP,SAAS;QACT,IAAI;QACJ,GAAG,mJAAE,MAAA,AAAG,EAAE;KACX,CAAA;IAED,SAAS,MAAM,CAAC,IAAmB;QAEjC,OAAO,CAAC,QAAkB,EAAE,EAAE;YAC5B,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAa,CAAA;YAC3C,IAAK,MAAM,GAAG,IAAI,MAAM,CAAE,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAA;YAC9C,MAAM,QAAQ,GAAG;gBAAE,GAAG,IAAI;gBAAE,GAAG,QAAQ;YAAA,CAAE,CAAA;YACzC,OAAO,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;gBAAE,MAAM,EAAE,MAAM,CAAC,QAAe,CAAC;YAAA,CAAE,CAAC,CAAA;QACrE,CAAC,CAAA;IACH,CAAC;IAED,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;QAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAQ;IAAA,CAAE,CAAC,CAAA;AACjE,CAAC;AAMK,SAAU,SAAS;IACvB,OAAO,IAAW,CAAA;AACpB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4442, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4448, "column": 0}, "map": {"version":3,"file":"public.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/clients/decorators/public.ts"],"sourcesContent":["import type { Abi, AbiEvent, Address } from 'abitype'\n\nimport {\n  type GetEnsAddressParameters,\n  type GetEnsAddressReturnType,\n  getEnsAddress,\n} from '../../actions/ens/getEnsAddress.js'\nimport {\n  type GetEnsAvatarParameters,\n  type GetEnsAvatarReturnType,\n  getEnsAvatar,\n} from '../../actions/ens/getEnsAvatar.js'\nimport {\n  type GetEnsNameParameters,\n  type GetEnsNameReturnType,\n  getEnsName,\n} from '../../actions/ens/getEnsName.js'\nimport {\n  type GetEnsResolverParameters,\n  type GetEnsResolverReturnType,\n  getEnsResolver,\n} from '../../actions/ens/getEnsResolver.js'\nimport {\n  type GetEnsTextParameters,\n  type GetEnsTextReturnType,\n  getEnsText,\n} from '../../actions/ens/getEnsText.js'\nimport {\n  type CallParameters,\n  type CallReturnType,\n  call,\n} from '../../actions/public/call.js'\nimport {\n  type CreateAccessListParameters,\n  type CreateAccessListReturnType,\n  createAccessList,\n} from '../../actions/public/createAccessList.js'\nimport {\n  type CreateBlockFilterReturnType,\n  createBlockFilter,\n} from '../../actions/public/createBlockFilter.js'\nimport {\n  type CreateContractEventFilterParameters,\n  type CreateContractEventFilterReturnType,\n  createContractEventFilter,\n} from '../../actions/public/createContractEventFilter.js'\nimport {\n  type CreateEventFilterParameters,\n  type CreateEventFilterReturnType,\n  createEventFilter,\n} from '../../actions/public/createEventFilter.js'\nimport {\n  type CreatePendingTransactionFilterReturnType,\n  createPendingTransactionFilter,\n} from '../../actions/public/createPendingTransactionFilter.js'\nimport {\n  type EstimateContractGasParameters,\n  type EstimateContractGasReturnType,\n  estimateContractGas,\n} from '../../actions/public/estimateContractGas.js'\nimport {\n  type EstimateFeesPerGasParameters,\n  type EstimateFeesPerGasReturnType,\n  estimateFeesPerGas,\n} from '../../actions/public/estimateFeesPerGas.js'\nimport {\n  type EstimateGasParameters,\n  type EstimateGasReturnType,\n  estimateGas,\n} from '../../actions/public/estimateGas.js'\nimport {\n  type EstimateMaxPriorityFeePerGasParameters,\n  type EstimateMaxPriorityFeePerGasReturnType,\n  estimateMaxPriorityFeePerGas,\n} from '../../actions/public/estimateMaxPriorityFeePerGas.js'\nimport {\n  type GetBalanceParameters,\n  type GetBalanceReturnType,\n  getBalance,\n} from '../../actions/public/getBalance.js'\nimport {\n  type GetBlobBaseFeeReturnType,\n  getBlobBaseFee,\n} from '../../actions/public/getBlobBaseFee.js'\nimport {\n  type GetBlockParameters,\n  type GetBlockReturnType,\n  getBlock,\n} from '../../actions/public/getBlock.js'\nimport {\n  type GetBlockNumberParameters,\n  type GetBlockNumberReturnType,\n  getBlockNumber,\n} from '../../actions/public/getBlockNumber.js'\nimport {\n  type GetBlockTransactionCountParameters,\n  type GetBlockTransactionCountReturnType,\n  getBlockTransactionCount,\n} from '../../actions/public/getBlockTransactionCount.js'\nimport {\n  type GetChainIdReturnType,\n  getChainId,\n} from '../../actions/public/getChainId.js'\nimport {\n  type GetCodeParameters,\n  type GetCodeReturnType,\n  getCode,\n} from '../../actions/public/getCode.js'\nimport {\n  type GetContractEventsParameters,\n  type GetContractEventsReturnType,\n  getContractEvents,\n} from '../../actions/public/getContractEvents.js'\nimport {\n  type GetEip712DomainParameters,\n  type GetEip712DomainReturnType,\n  getEip712Domain,\n} from '../../actions/public/getEip712Domain.js'\nimport {\n  type GetFeeHistoryParameters,\n  type GetFeeHistoryReturnType,\n  getFeeHistory,\n} from '../../actions/public/getFeeHistory.js'\nimport {\n  type GetFilterChangesParameters,\n  type GetFilterChangesReturnType,\n  getFilterChanges,\n} from '../../actions/public/getFilterChanges.js'\nimport {\n  type GetFilterLogsParameters,\n  type GetFilterLogsReturnType,\n  getFilterLogs,\n} from '../../actions/public/getFilterLogs.js'\nimport {\n  type GetGasPriceReturnType,\n  getGasPrice,\n} from '../../actions/public/getGasPrice.js'\nimport {\n  type GetLogsParameters,\n  type GetLogsReturnType,\n  getLogs,\n} from '../../actions/public/getLogs.js'\nimport {\n  type GetProofParameters,\n  type GetProofReturnType,\n  getProof,\n} from '../../actions/public/getProof.js'\nimport {\n  type GetStorageAtParameters,\n  type GetStorageAtReturnType,\n  getStorageAt,\n} from '../../actions/public/getStorageAt.js'\nimport {\n  type GetTransactionParameters,\n  type GetTransactionReturnType,\n  getTransaction,\n} from '../../actions/public/getTransaction.js'\nimport {\n  type GetTransactionConfirmationsParameters,\n  type GetTransactionConfirmationsReturnType,\n  getTransactionConfirmations,\n} from '../../actions/public/getTransactionConfirmations.js'\nimport {\n  type GetTransactionCountParameters,\n  type GetTransactionCountReturnType,\n  getTransactionCount,\n} from '../../actions/public/getTransactionCount.js'\nimport {\n  type GetTransactionReceiptParameters,\n  type GetTransactionReceiptReturnType,\n  getTransactionReceipt,\n} from '../../actions/public/getTransactionReceipt.js'\nimport {\n  type MulticallParameters,\n  type MulticallReturnType,\n  multicall,\n} from '../../actions/public/multicall.js'\nimport {\n  type ReadContractParameters,\n  type ReadContractReturnType,\n  readContract,\n} from '../../actions/public/readContract.js'\nimport {\n  type SimulateBlocksParameters,\n  type SimulateBlocksReturnType,\n  simulateBlocks,\n} from '../../actions/public/simulateBlocks.js'\nimport {\n  type SimulateCallsParameters,\n  type SimulateCallsReturnType,\n  simulateCalls,\n} from '../../actions/public/simulateCalls.js'\nimport {\n  type SimulateContractParameters,\n  type SimulateContractReturnType,\n  simulateContract,\n} from '../../actions/public/simulateContract.js'\nimport {\n  type UninstallFilterParameters,\n  type UninstallFilterReturnType,\n  uninstallFilter,\n} from '../../actions/public/uninstallFilter.js'\nimport {\n  type VerifyMessageParameters,\n  type VerifyMessageReturnType,\n  verifyMessage,\n} from '../../actions/public/verifyMessage.js'\nimport {\n  type VerifyTypedDataParameters,\n  type VerifyTypedDataReturnType,\n  verifyTypedData,\n} from '../../actions/public/verifyTypedData.js'\nimport {\n  type WaitForTransactionReceiptParameters,\n  type WaitForTransactionReceiptReturnType,\n  waitForTransactionReceipt,\n} from '../../actions/public/waitForTransactionReceipt.js'\nimport {\n  type WatchBlockNumberParameters,\n  type WatchBlockNumberReturnType,\n  watchBlockNumber,\n} from '../../actions/public/watchBlockNumber.js'\nimport {\n  type WatchBlocksParameters,\n  type WatchBlocksReturnType,\n  watchBlocks,\n} from '../../actions/public/watchBlocks.js'\nimport {\n  type WatchContractEventParameters,\n  type WatchContractEventReturnType,\n  watchContractEvent,\n} from '../../actions/public/watchContractEvent.js'\nimport {\n  type WatchEventParameters,\n  type WatchEventReturnType,\n  watchEvent,\n} from '../../actions/public/watchEvent.js'\nimport {\n  type WatchPendingTransactionsParameters,\n  type WatchPendingTransactionsReturnType,\n  watchPendingTransactions,\n} from '../../actions/public/watchPendingTransactions.js'\nimport {\n  type VerifySiweMessageParameters,\n  type VerifySiweMessageReturnType,\n  verifySiweMessage,\n} from '../../actions/siwe/verifySiweMessage.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  type PrepareTransactionRequestRequest,\n  type PrepareTransactionRequestReturnType,\n  prepareTransactionRequest,\n} from '../../actions/wallet/prepareTransactionRequest.js'\nimport {\n  type SendRawTransactionParameters,\n  type SendRawTransactionReturnType,\n  sendRawTransaction,\n} from '../../actions/wallet/sendRawTransaction.js'\nimport type { Account } from '../../types/account.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractEventName,\n  ContractFunctionArgs,\n  ContractFunctionName,\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { FeeValuesType } from '../../types/fee.js'\nimport type { FilterType } from '../../types/filter.js'\nimport type { Client } from '../createClient.js'\nimport type { Transport } from '../transports/createTransport.js'\n\nexport type PublicActions<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n> = {\n  /**\n   * Executes a new message call immediately without submitting a transaction to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/call\n   * - JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)\n   *\n   * @param args - {@link CallParameters}\n   * @returns The call data. {@link CallReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const data = await client.call({\n   *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   * })\n   */\n  call: (parameters: CallParameters<chain>) => Promise<CallReturnType>\n  /**\n   * Creates an EIP-2930 access list that you can include in a transaction.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createAccessList\n   * - JSON-RPC Methods: `eth_createAccessList`\n   *\n   * @param args - {@link CreateAccessListParameters}\n   * @returns The call data. {@link CreateAccessListReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const data = await client.createAccessList({\n   *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   * })\n   */\n  createAccessList: (\n    parameters: CreateAccessListParameters<chain>,\n  ) => Promise<CreateAccessListReturnType>\n  /**\n   * Creates a Filter to listen for new block hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createBlockFilter\n   * - JSON-RPC Methods: [`eth_newBlockFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newBlockFilter)\n   *\n   * @returns Filter. {@link CreateBlockFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, createBlockFilter, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await createBlockFilter(client)\n   * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'block' }\n   */\n  createBlockFilter: () => Promise<CreateBlockFilterReturnType>\n  /**\n   * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs).\n   *\n   * - Docs: https://viem.sh/docs/contract/createContractEventFilter\n   *\n   * @param args - {@link CreateContractEventFilterParameters}\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateContractEventFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createContractEventFilter({\n   *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n   * })\n   */\n  createContractEventFilter: <\n    const abi extends Abi | readonly unknown[],\n    eventName extends ContractEventName<abi> | undefined,\n    args extends MaybeExtractEventArgsFromAbi<abi, eventName> | undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: CreateContractEventFilterParameters<\n      abi,\n      eventName,\n      args,\n      strict,\n      fromBlock,\n      toBlock\n    >,\n  ) => Promise<\n    CreateContractEventFilterReturnType<\n      abi,\n      eventName,\n      args,\n      strict,\n      fromBlock,\n      toBlock\n    >\n  >\n  /**\n   * Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createEventFilter\n   * - JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\n   *\n   * @param args - {@link CreateEventFilterParameters}\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateEventFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n   * })\n   */\n  createEventFilter: <\n    const abiEvent extends AbiEvent | undefined = undefined,\n    const abiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n    _EventName extends string | undefined = MaybeAbiEventName<abiEvent>,\n    _Args extends\n      | MaybeExtractEventArgsFromAbi<abiEvents, _EventName>\n      | undefined = undefined,\n  >(\n    args?:\n      | CreateEventFilterParameters<\n          abiEvent,\n          abiEvents,\n          strict,\n          fromBlock,\n          toBlock,\n          _EventName,\n          _Args\n        >\n      | undefined,\n  ) => Promise<\n    CreateEventFilterReturnType<\n      abiEvent,\n      abiEvents,\n      strict,\n      fromBlock,\n      toBlock,\n      _EventName,\n      _Args\n    >\n  >\n  /**\n   * Creates a Filter to listen for new pending transaction hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createPendingTransactionFilter\n   * - JSON-RPC Methods: [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter)\n   *\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateBlockFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createPendingTransactionFilter()\n   * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'transaction' }\n   */\n  createPendingTransactionFilter: () => Promise<CreatePendingTransactionFilterReturnType>\n  /**\n   * Estimates the gas required to successfully execute a contract write function call.\n   *\n   * - Docs: https://viem.sh/docs/contract/estimateContractGas\n   *\n   * @remarks\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`estimateGas` action](https://viem.sh/docs/actions/public/estimateGas) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n   *\n   * @param args - {@link EstimateContractGasParameters}\n   * @returns The gas estimate (in wei). {@link EstimateContractGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gas = await client.estimateContractGas({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint() public']),\n   *   functionName: 'mint',\n   *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   * })\n   */\n  estimateContractGas: <\n    chain extends Chain | undefined,\n    const abi extends Abi | readonly unknown[],\n    functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n    args extends ContractFunctionArgs<\n      abi,\n      'nonpayable' | 'payable',\n      functionName\n    >,\n  >(\n    args: EstimateContractGasParameters<abi, functionName, args, chain>,\n  ) => Promise<EstimateContractGasReturnType>\n  /**\n   * Estimates the gas necessary to complete a transaction without submitting it to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateGas\n   * - JSON-RPC Methods: [`eth_estimateGas`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_estimategas)\n   *\n   * @param args - {@link EstimateGasParameters}\n   * @returns The gas estimate (in wei). {@link EstimateGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gasEstimate = await client.estimateGas({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: parseEther('1'),\n   * })\n   */\n  estimateGas: (\n    args: EstimateGasParameters<chain>,\n  ) => Promise<EstimateGasReturnType>\n  /**\n   * Returns the balance of an address in wei.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBalance\n   * - JSON-RPC Methods: [`eth_getBalance`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getbalance)\n   *\n   * @remarks\n   * You can convert the balance to ether units with [`formatEther`](https://viem.sh/docs/utilities/formatEther).\n   *\n   * ```ts\n   * const balance = await getBalance(client, {\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   blockTag: 'safe'\n   * })\n   * const balanceAsEther = formatEther(balance)\n   * // \"6.942\"\n   * ```\n   *\n   * @param args - {@link GetBalanceParameters}\n   * @returns The balance of the address in wei. {@link GetBalanceReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const balance = await client.getBalance({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   * // 10000000000000000000000n (wei)\n   */\n  getBalance: (args: GetBalanceParameters) => Promise<GetBalanceReturnType>\n  /**\n   * Returns the base fee per blob gas in wei.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlobBaseFee\n   * - JSON-RPC Methods: [`eth_blobBaseFee`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blobBaseFee)\n   *\n   * @param client - Client to use\n   * @returns The blob base fee (in wei). {@link GetBlobBaseFeeReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { getBlobBaseFee } from 'viem/public'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const blobBaseFee = await client.getBlobBaseFee()\n   */\n  getBlobBaseFee: () => Promise<GetBlobBaseFeeReturnType>\n  /**\n   * Returns information about a block at a block number, hash, or tag.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlock\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\n   *   - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\n   *\n   * @param args - {@link GetBlockParameters}\n   * @returns Information about the block. {@link GetBlockReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const block = await client.getBlock()\n   */\n  getBlock: <\n    includeTransactions extends boolean = false,\n    blockTag extends BlockTag = 'latest',\n  >(\n    args?: GetBlockParameters<includeTransactions, blockTag> | undefined,\n  ) => Promise<GetBlockReturnType<chain, includeTransactions, blockTag>>\n  /**\n   * Returns the number of the most recent block seen.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlockNumber\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\n   * - JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\n   *\n   * @param args - {@link GetBlockNumberParameters}\n   * @returns The number of the block. {@link GetBlockNumberReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const blockNumber = await client.getBlockNumber()\n   * // 69420n\n   */\n  getBlockNumber: (\n    args?: GetBlockNumberParameters | undefined,\n  ) => Promise<GetBlockNumberReturnType>\n  /**\n   * Returns the number of Transactions at a block number, hash, or tag.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlockTransactionCount\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getBlockTransactionCountByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbynumber) for `blockNumber` & `blockTag`.\n   *   - Calls [`eth_getBlockTransactionCountByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbyhash) for `blockHash`.\n   *\n   * @param args - {@link GetBlockTransactionCountParameters}\n   * @returns The block transaction count. {@link GetBlockTransactionCountReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const count = await client.getBlockTransactionCount()\n   */\n  getBlockTransactionCount: (\n    args?: GetBlockTransactionCountParameters | undefined,\n  ) => Promise<GetBlockTransactionCountReturnType>\n  /** @deprecated Use `getCode` instead. */\n  getBytecode: (args: GetCodeParameters) => Promise<GetCodeReturnType>\n  /**\n   * Returns the chain ID associated with the current network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getChainId\n   * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n   *\n   * @returns The current chain ID. {@link GetChainIdReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const chainId = await client.getChainId()\n   * // 1\n   */\n  getChainId: () => Promise<GetChainIdReturnType>\n  /**\n   * Retrieves the bytecode at an address.\n   *\n   * - Docs: https://viem.sh/docs/contract/getCode\n   * - JSON-RPC Methods: [`eth_getCode`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getcode)\n   *\n   * @param args - {@link GetBytecodeParameters}\n   * @returns The contract's bytecode. {@link GetBytecodeReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const code = await client.getCode({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   * })\n   */\n  getCode: (args: GetCodeParameters) => Promise<GetCodeReturnType>\n  /**\n   * Returns a list of event logs emitted by a contract.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getContractEvents\n   * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetContractEventsParameters}\n   * @returns A list of event logs. {@link GetContractEventsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { wagmiAbi } from './abi'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const logs = await client.getContractEvents(client, {\n   *  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *  abi: wagmiAbi,\n   *  eventName: 'Transfer'\n   * })\n   */\n  getContractEvents: <\n    const abi extends Abi | readonly unknown[],\n    eventName extends ContractEventName<abi> | undefined = undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetContractEventsParameters<\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >,\n  ) => Promise<\n    GetContractEventsReturnType<abi, eventName, strict, fromBlock, toBlock>\n  >\n  /**\n   * Reads the EIP-712 domain from a contract, based on the ERC-5267 specification.\n   *\n   * @param client - A {@link Client} instance.\n   * @param parameters - The parameters of the action. {@link GetEip712DomainParameters}\n   * @returns The EIP-712 domain, fields, and extensions. {@link GetEip712DomainReturnType}\n   *\n   * @example\n   * ```ts\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const domain = await client.getEip712Domain({\n   *   address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n   * })\n   * // {\n   * //   domain: {\n   * //     name: 'ExampleContract',\n   * //     version: '1',\n   * //     chainId: 1,\n   * //     verifyingContract: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n   * //   },\n   * //   fields: '0x0f',\n   * //   extensions: [],\n   * // }\n   * ```\n   */\n  getEip712Domain: (\n    args: GetEip712DomainParameters,\n  ) => Promise<GetEip712DomainReturnType>\n  /**\n   * Gets address for ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsAddress\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n   *\n   * @param args - {@link GetEnsAddressParameters}\n   * @returns Address for ENS name or `null` if not found. {@link GetEnsAddressReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensAddress = await client.getEnsAddress({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // '0xd2135CfB216b74109775236E36d4b433F1DF507B'\n   */\n  getEnsAddress: (\n    args: GetEnsAddressParameters,\n  ) => Promise<GetEnsAddressReturnType>\n  /**\n   * Gets the avatar of an ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsAvatar\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls [`getEnsText`](https://viem.sh/docs/ens/actions/getEnsText) with `key` set to `'avatar'`.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n   *\n   * @param args - {@link GetEnsAvatarParameters}\n   * @returns Avatar URI or `null` if not found. {@link GetEnsAvatarReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensAvatar = await client.getEnsAvatar({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // 'https://ipfs.io/ipfs/Qma8mnp6xV3J2cRNf3mTth5C8nV11CAnceVinc3y8jSbio'\n   */\n  getEnsAvatar: (\n    args: GetEnsAvatarParameters,\n  ) => Promise<GetEnsAvatarReturnType>\n  /**\n   * Gets primary name for specified address.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsName\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `reverse(bytes)` on ENS Universal Resolver Contract to \"reverse resolve\" the address to the primary ENS name.\n   *\n   * @param args - {@link GetEnsNameParameters}\n   * @returns Name or `null` if not found. {@link GetEnsNameReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensName = await client.getEnsName({\n   *   address: '0xd2135CfB216b74109775236E36d4b433F1DF507B',\n   * })\n   * // 'wevm.eth'\n   */\n  getEnsName: (args: GetEnsNameParameters) => Promise<GetEnsNameReturnType>\n  /**\n   * Gets resolver for ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `findResolver(bytes)` on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n   *\n   * @param args - {@link GetEnsResolverParameters}\n   * @returns Address for ENS resolver. {@link GetEnsResolverReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const resolverAddress = await client.getEnsResolver({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41'\n   */\n  getEnsResolver: (\n    args: GetEnsResolverParameters,\n  ) => Promise<GetEnsResolverReturnType>\n  /**\n   * Gets a text record for specified ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n   *\n   * @param args - {@link GetEnsTextParameters}\n   * @returns Address for ENS resolver. {@link GetEnsTextReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const twitterRecord = await client.getEnsText({\n   *   name: normalize('wevm.eth'),\n   *   key: 'com.twitter',\n   * })\n   * // 'wevm_dev'\n   */\n  getEnsText: (args: GetEnsTextParameters) => Promise<GetEnsTextReturnType>\n  /**\n   * Returns a collection of historical gas information.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFeeHistory\n   * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)\n   *\n   * @param args - {@link GetFeeHistoryParameters}\n   * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const feeHistory = await client.getFeeHistory({\n   *   blockCount: 4,\n   *   rewardPercentiles: [25, 75],\n   * })\n   */\n  getFeeHistory: (\n    args: GetFeeHistoryParameters,\n  ) => Promise<GetFeeHistoryReturnType>\n  /**\n   * Returns an estimate for the fees per gas for a transaction to be included\n   * in the next block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas\n   *\n   * @param client - Client to use\n   * @param parameters - {@link EstimateFeesPerGasParameters}\n   * @returns An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const maxPriorityFeePerGas = await client.estimateFeesPerGas()\n   * // { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\n   */\n  estimateFeesPerGas: <\n    chainOverride extends Chain | undefined = undefined,\n    type extends FeeValuesType = 'eip1559',\n  >(\n    args?: EstimateFeesPerGasParameters<chain, chainOverride, type> | undefined,\n  ) => Promise<EstimateFeesPerGasReturnType<type>>\n  /**\n   * Returns a list of logs or hashes based on a [Filter](/docs/glossary/terms#filter) since the last time it was called.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFilterChanges\n   * - JSON-RPC Methods: [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges)\n   *\n   * @remarks\n   * A Filter can be created from the following actions:\n   *\n   * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n   * - [`createContractEventFilter`](https://viem.sh/docs/contract/createContractEventFilter)\n   * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n   * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n   *\n   * Depending on the type of filter, the return value will be different:\n   *\n   * - If the filter was created with `createContractEventFilter` or `createEventFilter`, it returns a list of logs.\n   * - If the filter was created with `createPendingTransactionFilter`, it returns a list of transaction hashes.\n   * - If the filter was created with `createBlockFilter`, it returns a list of block hashes.\n   *\n   * @param args - {@link GetFilterChangesParameters}\n   * @returns Logs or hashes. {@link GetFilterChangesReturnType}\n   *\n   * @example\n   * // Blocks\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createBlockFilter()\n   * const hashes = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Contract Events\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createContractEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n   *   eventName: 'Transfer',\n   * })\n   * const logs = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Raw Events\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n   * })\n   * const logs = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Transactions\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createPendingTransactionFilter()\n   * const hashes = await client.getFilterChanges({ filter })\n   */\n  getFilterChanges: <\n    filterType extends FilterType,\n    const abi extends Abi | readonly unknown[] | undefined,\n    eventName extends string | undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetFilterChangesParameters<\n      filterType,\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >,\n  ) => Promise<\n    GetFilterChangesReturnType<\n      filterType,\n      abi,\n      eventName,\n      strict,\n      fromBlock,\n      toBlock\n    >\n  >\n  /**\n   * Returns a list of event logs since the filter was created.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFilterLogs\n   * - JSON-RPC Methods: [`eth_getFilterLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterlogs)\n   *\n   * @remarks\n   * `getFilterLogs` is only compatible with **event filters**.\n   *\n   * @param args - {@link GetFilterLogsParameters}\n   * @returns A list of event logs. {@link GetFilterLogsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n   * })\n   * const logs = await client.getFilterLogs({ filter })\n   */\n  getFilterLogs: <\n    const abi extends Abi | readonly unknown[] | undefined,\n    eventName extends string | undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetFilterLogsParameters<abi, eventName, strict, fromBlock, toBlock>,\n  ) => Promise<\n    GetFilterLogsReturnType<abi, eventName, strict, fromBlock, toBlock>\n  >\n  /**\n   * Returns the current price of gas (in wei).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getGasPrice\n   * - JSON-RPC Methods: [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice)\n   *\n   * @returns The gas price (in wei). {@link GetGasPriceReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gasPrice = await client.getGasPrice()\n   */\n  getGasPrice: () => Promise<GetGasPriceReturnType>\n  /**\n   * Returns a list of event logs matching the provided parameters.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getLogs\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/logs_event-logs\n   * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n   *\n   * @param args - {@link GetLogsParameters}\n   * @returns A list of event logs. {@link GetLogsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const logs = await client.getLogs()\n   */\n  getLogs: <\n    const abiEvent extends AbiEvent | undefined = undefined,\n    const abiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n    strict extends boolean | undefined = undefined,\n    fromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    toBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args?:\n      | GetLogsParameters<abiEvent, abiEvents, strict, fromBlock, toBlock>\n      | undefined,\n  ) => Promise<\n    GetLogsReturnType<abiEvent, abiEvents, strict, fromBlock, toBlock>\n  >\n  /**\n   * Returns the account and storage values of the specified account including the Merkle-proof.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getProof\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getProof`](https://eips.ethereum.org/EIPS/eip-1186)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetProofParameters}\n   * @returns Proof data. {@link GetProofReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const block = await client.getProof({\n   *  address: '0x...',\n   *  storageKeys: ['0x...'],\n   * })\n   */\n  getProof: (args: GetProofParameters) => Promise<GetProofReturnType>\n  /**\n   * Returns an estimate for the max priority fee per gas (in wei) for a transaction\n   * to be included in the next block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateMaxPriorityFeePerGas\n   *\n   * @param client - Client to use\n   * @returns An estimate (in wei) for the max priority fee per gas. {@link EstimateMaxPriorityFeePerGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const maxPriorityFeePerGas = await client.estimateMaxPriorityFeePerGas()\n   * // 10000000n\n   */\n  estimateMaxPriorityFeePerGas: <\n    chainOverride extends Chain | undefined = undefined,\n  >(\n    args?:\n      | EstimateMaxPriorityFeePerGasParameters<chain, chainOverride>\n      | undefined,\n  ) => Promise<EstimateMaxPriorityFeePerGasReturnType>\n  /**\n   * Returns the value from a storage slot at a given address.\n   *\n   * - Docs: https://viem.sh/docs/contract/getStorageAt\n   * - JSON-RPC Methods: [`eth_getStorageAt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getstorageat)\n   *\n   * @param args - {@link GetStorageAtParameters}\n   * @returns The value of the storage slot. {@link GetStorageAtReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { getStorageAt } from 'viem/contract'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const code = await client.getStorageAt({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   slot: toHex(0),\n   * })\n   */\n  getStorageAt: (\n    args: GetStorageAtParameters,\n  ) => Promise<GetStorageAtReturnType>\n  /**\n   * Returns information about a [Transaction](https://viem.sh/docs/glossary/terms#transaction) given a hash or block identifier.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransaction\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionByHash)\n   *\n   * @param args - {@link GetTransactionParameters}\n   * @returns The transaction information. {@link GetTransactionReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transaction = await client.getTransaction({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransaction: <blockTag extends BlockTag = 'latest'>(\n    args: GetTransactionParameters<blockTag>,\n  ) => Promise<GetTransactionReturnType<chain, blockTag>>\n  /**\n   * Returns the number of blocks passed (confirmations) since the transaction was processed on a block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionConfirmations\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionConfirmations`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionConfirmations)\n   *\n   * @param args - {@link GetTransactionConfirmationsParameters}\n   * @returns The number of blocks passed since the transaction was processed. If confirmations is 0, then the Transaction has not been confirmed & processed yet. {@link GetTransactionConfirmationsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const confirmations = await client.getTransactionConfirmations({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransactionConfirmations: (\n    args: GetTransactionConfirmationsParameters<chain>,\n  ) => Promise<GetTransactionConfirmationsReturnType>\n  /**\n   * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms#transaction) an Account has broadcast / sent.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionCount\n   * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\n   *\n   * @param args - {@link GetTransactionCountParameters}\n   * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionCount = await client.getTransactionCount({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  getTransactionCount: (\n    args: GetTransactionCountParameters,\n  ) => Promise<GetTransactionCountReturnType>\n  /**\n   * Returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt) given a [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionReceipt\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt)\n   *\n   * @param args - {@link GetTransactionReceiptParameters}\n   * @returns The transaction receipt. {@link GetTransactionReceiptReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionReceipt = await client.getTransactionReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransactionReceipt: (\n    args: GetTransactionReceiptParameters,\n  ) => Promise<GetTransactionReceiptReturnType<chain>>\n  /**\n   * Similar to [`readContract`](https://viem.sh/docs/contract/readContract), but batches up multiple functions on a contract in a single RPC call via the [`multicall3` contract](https://github.com/mds1/multicall).\n   *\n   * - Docs: https://viem.sh/docs/contract/multicall\n   *\n   * @param args - {@link MulticallParameters}\n   * @returns An array of results with accompanying status. {@link MulticallReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const abi = parseAbi([\n   *   'function balanceOf(address) view returns (uint256)',\n   *   'function totalSupply() view returns (uint256)',\n   * ])\n   * const result = await client.multicall({\n   *   contracts: [\n   *     {\n   *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *       abi,\n   *       functionName: 'balanceOf',\n   *       args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n   *     },\n   *     {\n   *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *       abi,\n   *       functionName: 'totalSupply',\n   *     },\n   *   ],\n   * })\n   * // [{ result: 424122n, status: 'success' }, { result: 1000000n, status: 'success' }]\n   */\n  multicall: <\n    const contracts extends readonly unknown[],\n    allowFailure extends boolean = true,\n  >(\n    args: MulticallParameters<contracts, allowFailure>,\n  ) => Promise<MulticallReturnType<contracts, allowFailure>>\n  /**\n   * Prepares a transaction request for signing.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest\n   *\n   * @param args - {@link PrepareTransactionRequestParameters}\n   * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   */\n  prepareTransactionRequest: <\n    const request extends PrepareTransactionRequestRequest<\n      chain,\n      chainOverride\n    >,\n    chainOverride extends Chain | undefined = undefined,\n    accountOverride extends Account | Address | undefined = undefined,\n  >(\n    args: PrepareTransactionRequestParameters<\n      chain,\n      account,\n      chainOverride,\n      accountOverride,\n      request\n    >,\n  ) => Promise<\n    PrepareTransactionRequestReturnType<\n      chain,\n      account,\n      chainOverride,\n      accountOverride,\n      request\n    >\n  >\n  /**\n   * Calls a read-only function on a contract, and returns the response.\n   *\n   * - Docs: https://viem.sh/docs/contract/readContract\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_reading-contracts\n   *\n   * @remarks\n   * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n   *\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n   *\n   * @param args - {@link ReadContractParameters}\n   * @returns The response from the contract. Type is inferred. {@link ReadContractReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { readContract } from 'viem/contract'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const result = await client.readContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function balanceOf(address) view returns (uint256)']),\n   *   functionName: 'balanceOf',\n   *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n   * })\n   * // 424122n\n   */\n  readContract: <\n    const abi extends Abi | readonly unknown[],\n    functionName extends ContractFunctionName<abi, 'pure' | 'view'>,\n    const args extends ContractFunctionArgs<abi, 'pure' | 'view', functionName>,\n  >(\n    args: ReadContractParameters<abi, functionName, args>,\n  ) => Promise<ReadContractReturnType<abi, functionName, args>>\n  /**\n   * Sends a **signed** transaction to the network\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction\n   * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link SendRawTransactionParameters}\n   * @returns The transaction hash. {@link SendRawTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { sendRawTransaction } from 'viem/wallet'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const hash = await client.sendRawTransaction({\n   *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n   * })\n   */\n  sendRawTransaction: (\n    args: SendRawTransactionParameters,\n  ) => Promise<SendRawTransactionReturnType>\n  /**\n   * @deprecated Use `simulateBlocks` instead.\n   */\n  simulate: <const calls extends readonly unknown[]>(\n    args: SimulateBlocksParameters<calls>,\n  ) => Promise<SimulateBlocksReturnType<calls>>\n  /**\n   * Simulates a set of calls on block(s) with optional block and state overrides.\n   *\n   * @example\n   * ```ts\n   * import { createPublicClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const result = await client.simulateBlocks({\n   *   blocks: [{\n   *     blockOverrides: {\n   *       number: 69420n,\n   *     },\n   *     calls: [{\n   *       {\n   *         account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n   *         data: '0xdeadbeef',\n   *         to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *       },\n   *       {\n   *         account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n   *         to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *         value: parseEther('1'),\n   *       },\n   *     }],\n   *     stateOverrides: [{\n   *       address: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n   *       balance: parseEther('10'),\n   *     }],\n   *   }]\n   * })\n   * ```\n   *\n   * @param client - Client to use.\n   * @param parameters - {@link SimulateParameters}\n   * @returns Simulated blocks. {@link SimulateReturnType}\n   */\n  simulateBlocks: <const calls extends readonly unknown[]>(\n    args: SimulateBlocksParameters<calls>,\n  ) => Promise<SimulateBlocksReturnType<calls>>\n  /**\n   * Simulates a set of calls.\n   *\n   * @example\n   * ```ts\n   * import { createPublicClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const result = await client.simulateCalls({\n   *   account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n   *   calls: [{\n   *     {\n   *       data: '0xdeadbeef',\n   *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *     },\n   *     {\n   *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *       value: parseEther('1'),\n   *     },\n   *   ]\n   * })\n   * ```\n   *\n   * @param client - Client to use.\n   * @param parameters - {@link SimulateCallsParameters}\n   * @returns Results. {@link SimulateCallsReturnType}\n   */\n  simulateCalls: <const calls extends readonly unknown[]>(\n    args: SimulateCallsParameters<calls>,\n  ) => Promise<SimulateCallsReturnType<calls>>\n  /**\n   * Simulates/validates a contract interaction. This is useful for retrieving **return data** and **revert reasons** of contract write functions.\n   *\n   * - Docs: https://viem.sh/docs/contract/simulateContract\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_writing-to-contracts\n   *\n   * @remarks\n   * This function does not require gas to execute and _**does not**_ change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract), but also supports contract write functions.\n   *\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n   *\n   * @param args - {@link SimulateContractParameters}\n   * @returns The simulation result and write request. {@link SimulateContractReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const result = await client.simulateContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32) view returns (uint32)']),\n   *   functionName: 'mint',\n   *   args: ['69420'],\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  simulateContract: <\n    const abi extends Abi | readonly unknown[],\n    functionName extends ContractFunctionName<abi, 'nonpayable' | 'payable'>,\n    const args extends ContractFunctionArgs<\n      abi,\n      'nonpayable' | 'payable',\n      functionName\n    >,\n    chainOverride extends Chain | undefined,\n    accountOverride extends Account | Address | undefined = undefined,\n  >(\n    args: SimulateContractParameters<\n      abi,\n      functionName,\n      args,\n      chain,\n      chainOverride,\n      accountOverride\n    >,\n  ) => Promise<\n    SimulateContractReturnType<\n      abi,\n      functionName,\n      args,\n      chain,\n      account,\n      chainOverride,\n      accountOverride\n    >\n  >\n  /**\n   * Verify that a message was signed by the provided address.\n   *\n   * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n   *\n   * - Docs {@link https://viem.sh/docs/actions/public/verifyMessage}\n   *\n   * @param parameters - {@link VerifyMessageParameters}\n   * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}\n   */\n  verifyMessage: (\n    args: VerifyMessageParameters,\n  ) => Promise<VerifyMessageReturnType>\n  /**\n   * Verifies [EIP-4361](https://eips.ethereum.org/EIPS/eip-4361) formatted message was signed.\n   *\n   * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n   *\n   * - Docs {@link https://viem.sh/docs/siwe/actions/verifySiweMessage}\n   *\n   * @param parameters - {@link VerifySiweMessageParameters}\n   * @returns Whether or not the signature is valid. {@link VerifySiweMessageReturnType}\n   */\n  verifySiweMessage: (\n    args: VerifySiweMessageParameters,\n  ) => Promise<VerifySiweMessageReturnType>\n  /**\n   * Verify that typed data was signed by the provided address.\n   *\n   * - Docs {@link https://viem.sh/docs/actions/public/verifyTypedData}\n   *\n   * @param parameters - {@link VerifyTypedDataParameters}\n   * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}\n   */\n  verifyTypedData: (\n    args: VerifyTypedDataParameters,\n  ) => Promise<VerifyTypedDataReturnType>\n  /**\n   * Destroys a Filter that was created from one of the following Actions:\n   *\n   * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n   * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n   * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n   *\n   * - Docs: https://viem.sh/docs/actions/public/uninstallFilter\n   * - JSON-RPC Methods: [`eth_uninstallFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_uninstallFilter)\n   *\n   * @param args - {@link UninstallFilterParameters}\n   * @returns A boolean indicating if the Filter was successfully uninstalled. {@link UninstallFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { createPendingTransactionFilter, uninstallFilter } from 'viem/public'\n   *\n   * const filter = await client.createPendingTransactionFilter()\n   * const uninstalled = await client.uninstallFilter({ filter })\n   * // true\n   */\n  uninstallFilter: (\n    args: UninstallFilterParameters,\n  ) => Promise<UninstallFilterReturnType>\n  /**\n   * Waits for the [Transaction](https://viem.sh/docs/glossary/terms#transaction) to be included on a [Block](https://viem.sh/docs/glossary/terms#block) (one confirmation), and then returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt). If the Transaction reverts, then the action will throw an error.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/waitForTransactionReceipt\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\n   * - JSON-RPC Methods:\n   *   - Polls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt) on each block until it has been processed.\n   *   - If a Transaction has been replaced:\n   *     - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) and extracts the transactions\n   *     - Checks if one of the Transactions is a replacement\n   *     - If so, calls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt).\n   *\n   * @remarks\n   * The `waitForTransactionReceipt` action additionally supports Replacement detection (e.g. sped up Transactions).\n   *\n   * Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.\n   *\n   * There are 3 types of Transaction Replacement reasons:\n   *\n   * - `repriced`: The gas price has been modified (e.g. different `maxFeePerGas`)\n   * - `cancelled`: The Transaction has been cancelled (e.g. `value === 0n`)\n   * - `replaced`: The Transaction has been replaced (e.g. different `value` or `data`)\n   *\n   * @param args - {@link WaitForTransactionReceiptParameters}\n   * @returns The transaction receipt. {@link WaitForTransactionReceiptReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionReceipt = await client.waitForTransactionReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  waitForTransactionReceipt: (\n    args: WaitForTransactionReceiptParameters<chain>,\n  ) => Promise<WaitForTransactionReceiptReturnType<chain>>\n  /**\n   * Watches and returns incoming block numbers.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchBlockNumber\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks\n   * - JSON-RPC Methods:\n   *   - When `poll: true`, calls [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n   *\n   * @param args - {@link WatchBlockNumberParameters}\n   * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlockNumberReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchBlockNumber({\n   *   onBlockNumber: (blockNumber) => console.log(blockNumber),\n   * })\n   */\n  watchBlockNumber: (\n    args: WatchBlockNumberParameters,\n  ) => WatchBlockNumberReturnType\n  /**\n   * Watches and returns information for incoming blocks.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchBlocks\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks\n   * - JSON-RPC Methods:\n   *   - When `poll: true`, calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getBlockByNumber) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n   *\n   * @param args - {@link WatchBlocksParameters}\n   * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlocksReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchBlocks({\n   *   onBlock: (block) => console.log(block),\n   * })\n   */\n  watchBlocks: <\n    includeTransactions extends boolean = false,\n    blockTag extends BlockTag = 'latest',\n  >(\n    args: WatchBlocksParameters<\n      transport,\n      chain,\n      includeTransactions,\n      blockTag\n    >,\n  ) => WatchBlocksReturnType\n  /**\n   * Watches and returns emitted contract event logs.\n   *\n   * - Docs: https://viem.sh/docs/contract/watchContractEvent\n   *\n   * @remarks\n   * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent#onLogs).\n   *\n   * `watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n   *\n   * @param args - {@link WatchContractEventParameters}\n   * @returns A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = client.watchContractEvent({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),\n   *   eventName: 'Transfer',\n   *   args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n   *   onLogs: (logs) => console.log(logs),\n   * })\n   */\n  watchContractEvent: <\n    const abi extends Abi | readonly unknown[],\n    eventName extends ContractEventName<abi>,\n    strict extends boolean | undefined = undefined,\n  >(\n    args: WatchContractEventParameters<abi, eventName, strict, transport>,\n  ) => WatchContractEventReturnType\n  /**\n   * Watches and returns emitted [Event Logs](https://viem.sh/docs/glossary/terms#event-log).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchEvent\n   * - JSON-RPC Methods:\n   *   - **RPC Provider supports `eth_newFilter`:**\n   *     - Calls [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter) to create a filter (called on initialize).\n   *     - On a polling interval, it will call [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).\n   *   - **RPC Provider does not support `eth_newFilter`:**\n   *     - Calls [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs) for each block between the polling interval.\n   *\n   * @remarks\n   * This Action will batch up all the Event Logs found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/actions/public/watchEvent#onLogs).\n   *\n   * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/actions/public/createEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n   *\n   * @param args - {@link WatchEventParameters}\n   * @returns A function that can be invoked to stop watching for new Event Logs. {@link WatchEventReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = client.watchEvent({\n   *   onLogs: (logs) => console.log(logs),\n   * })\n   */\n  watchEvent: <\n    const abiEvent extends AbiEvent | undefined = undefined,\n    const abiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = abiEvent extends AbiEvent ? [abiEvent] : undefined,\n    strict extends boolean | undefined = undefined,\n  >(\n    args: WatchEventParameters<abiEvent, abiEvents, strict, transport>,\n  ) => WatchEventReturnType\n  /**\n   * Watches and returns pending transaction hashes.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchPendingTransactions\n   * - JSON-RPC Methods:\n   *   - When `poll: true`\n   *     - Calls [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter) to initialize the filter.\n   *     - Calls [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newPendingTransactions\"` event.\n   *\n   * @remarks\n   * This Action will batch up all the pending transactions found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchPendingTransactions#pollinginterval-optional), and invoke them via [`onTransactions`](https://viem.sh/docs/actions/public/watchPendingTransactions#ontransactions).\n   *\n   * @param args - {@link WatchPendingTransactionsParameters}\n   * @returns A function that can be invoked to stop watching for new pending transaction hashes. {@link WatchPendingTransactionsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchPendingTransactions({\n   *   onTransactions: (hashes) => console.log(hashes),\n   * })\n   */\n  watchPendingTransactions: (\n    args: WatchPendingTransactionsParameters<transport>,\n  ) => WatchPendingTransactionsReturnType\n}\n\nexport function publicActions<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n>(\n  client: Client<transport, chain, account>,\n): PublicActions<transport, chain, account> {\n  return {\n    call: (args) => call(client, args),\n    createAccessList: (args) => createAccessList(client, args),\n    createBlockFilter: () => createBlockFilter(client),\n    createContractEventFilter: (args) =>\n      createContractEventFilter(client, args),\n    createEventFilter: (args) => createEventFilter(client, args),\n    createPendingTransactionFilter: () =>\n      createPendingTransactionFilter(client),\n    estimateContractGas: (args) => estimateContractGas(client, args as any),\n    estimateGas: (args) => estimateGas(client, args),\n    getBalance: (args) => getBalance(client, args),\n    getBlobBaseFee: () => getBlobBaseFee(client),\n    getBlock: (args) => getBlock(client, args),\n    getBlockNumber: (args) => getBlockNumber(client, args),\n    getBlockTransactionCount: (args) => getBlockTransactionCount(client, args),\n    getBytecode: (args) => getCode(client, args),\n    getChainId: () => getChainId(client),\n    getCode: (args) => getCode(client, args),\n    getContractEvents: (args) => getContractEvents(client, args),\n    getEip712Domain: (args) => getEip712Domain(client, args),\n    getEnsAddress: (args) => getEnsAddress(client, args),\n    getEnsAvatar: (args) => getEnsAvatar(client, args),\n    getEnsName: (args) => getEnsName(client, args),\n    getEnsResolver: (args) => getEnsResolver(client, args),\n    getEnsText: (args) => getEnsText(client, args),\n    getFeeHistory: (args) => getFeeHistory(client, args),\n    estimateFeesPerGas: (args) => estimateFeesPerGas(client, args),\n    getFilterChanges: (args) => getFilterChanges(client, args),\n    getFilterLogs: (args) => getFilterLogs(client, args),\n    getGasPrice: () => getGasPrice(client),\n    getLogs: (args) => getLogs(client, args as any),\n    getProof: (args) => getProof(client, args),\n    estimateMaxPriorityFeePerGas: (args) =>\n      estimateMaxPriorityFeePerGas(client, args),\n    getStorageAt: (args) => getStorageAt(client, args),\n    getTransaction: (args) => getTransaction(client, args),\n    getTransactionConfirmations: (args) =>\n      getTransactionConfirmations(client, args),\n    getTransactionCount: (args) => getTransactionCount(client, args),\n    getTransactionReceipt: (args) => getTransactionReceipt(client, args),\n    multicall: (args) => multicall(client, args),\n    prepareTransactionRequest: (args) =>\n      prepareTransactionRequest(client as any, args as any) as any,\n    readContract: (args) => readContract(client, args),\n    sendRawTransaction: (args) => sendRawTransaction(client, args),\n    simulate: (args) => simulateBlocks(client, args),\n    simulateBlocks: (args) => simulateBlocks(client, args),\n    simulateCalls: (args) => simulateCalls(client, args),\n    simulateContract: (args) => simulateContract(client, args),\n    verifyMessage: (args) => verifyMessage(client, args),\n    verifySiweMessage: (args) => verifySiweMessage(client, args),\n    verifyTypedData: (args) => verifyTypedData(client, args),\n    uninstallFilter: (args) => uninstallFilter(client, args),\n    waitForTransactionReceipt: (args) =>\n      waitForTransactionReceipt(client, args),\n    watchBlocks: (args) => watchBlocks(client, args),\n    watchBlockNumber: (args) => watchBlockNumber(client, args),\n    watchContractEvent: (args) => watchContractEvent(client, args),\n    watchEvent: (args) => watchEvent(client, args),\n    watchPendingTransactions: (args) => watchPendingTransactions(client, args),\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4613, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4619, "column": 0}, "map": {"version":3,"file":"createPublicClient.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/clients/createPublicClient.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { Account, ParseAccount } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type { PublicRpcSchema, RpcSchema } from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  createClient,\n} from './createClient.js'\nimport { type PublicActions, publicActions } from './decorators/public.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type PublicClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n    | 'batch'\n    | 'cacheTime'\n    | 'ccipRead'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'rpcSchema'\n    | 'transport'\n  >\n>\n\nexport type PublicClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Client<\n    transport,\n    chain,\n    accountOrAddress,\n    rpcSchema extends RpcSchema\n      ? [...PublicRpcSchema, ...rpcSchema]\n      : PublicRpcSchema,\n    PublicActions<transport, chain>\n  >\n>\n\nexport type CreatePublicClientErrorType = CreateClientErrorType | ErrorType\n\n/**\n * Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\n *\n * - Docs: https://viem.sh/docs/clients/public\n *\n * A Public Client is an interface to \"public\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\n *\n * @param config - {@link PublicClientConfig}\n * @returns A Public Client. {@link PublicClient}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n */\nexport function createPublicClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n>(\n  parameters: PublicClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n): PublicClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema> {\n  const { key = 'public', name = 'Public Client' } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    type: 'publicClient',\n  })\n  return client.extend(publicActions) as any\n}\n"],"names":[],"mappings":";;;AAMA,OAAO,EAIL,YAAY,GACb,MAAM,mBAAmB,CAAA;AAC1B,OAAO,EAAsB,aAAa,EAAE,MAAM,wBAAwB,CAAA;;;AA6DpE,SAAU,kBAAkB,CAMhC,UAA6E;IAE7E,MAAM,EAAE,GAAG,GAAG,QAAQ,EAAE,IAAI,GAAG,eAAe,EAAE,GAAG,UAAU,CAAA;IAC7D,MAAM,MAAM,+JAAG,eAAA,AAAY,EAAC;QAC1B,GAAG,UAAU;QACb,GAAG;QACH,IAAI;QACJ,IAAI,EAAE,cAAc;KACrB,CAAC,CAAA;IACF,OAAO,MAAM,CAAC,MAAM,iKAAC,gBAAa,CAAQ,CAAA;AAC5C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4636, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4642, "column": 0}, "map": {"version":3,"file":"test.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/clients/decorators/test.ts"],"sourcesContent":["import {\n  type DropTransactionParameters,\n  dropTransaction,\n} from '../../actions/test/dropTransaction.js'\nimport {\n  type DumpStateReturnType,\n  dumpState,\n} from '../../actions/test/dumpState.js'\nimport {\n  type GetAutomineReturnType,\n  getAutomine,\n} from '../../actions/test/getAutomine.js'\nimport {\n  type GetTxpoolContentReturnType,\n  getTxpoolContent,\n} from '../../actions/test/getTxpoolContent.js'\nimport {\n  type GetTxpoolStatusReturnType,\n  getTxpoolStatus,\n} from '../../actions/test/getTxpoolStatus.js'\nimport {\n  type ImpersonateAccountParameters,\n  impersonateAccount,\n} from '../../actions/test/impersonateAccount.js'\nimport {\n  type IncreaseTimeParameters,\n  increaseTime,\n} from '../../actions/test/increaseTime.js'\nimport {\n  type InspectTxpoolReturnType,\n  inspectTxpool,\n} from '../../actions/test/inspectTxpool.js'\nimport {\n  type LoadStateParameters,\n  type LoadStateReturnType,\n  loadState,\n} from '../../actions/test/loadState.js'\nimport { type MineParameters, mine } from '../../actions/test/mine.js'\nimport { removeBlockTimestampInterval } from '../../actions/test/removeBlockTimestampInterval.js'\nimport { type ResetParameters, reset } from '../../actions/test/reset.js'\nimport { type RevertParameters, revert } from '../../actions/test/revert.js'\nimport {\n  type SendUnsignedTransactionParameters,\n  type SendUnsignedTransactionReturnType,\n  sendUnsignedTransaction,\n} from '../../actions/test/sendUnsignedTransaction.js'\nimport { setAutomine } from '../../actions/test/setAutomine.js'\nimport {\n  type SetBalanceParameters,\n  setBalance,\n} from '../../actions/test/setBalance.js'\nimport {\n  type SetBlockGasLimitParameters,\n  setBlockGasLimit,\n} from '../../actions/test/setBlockGasLimit.js'\nimport {\n  type SetBlockTimestampIntervalParameters,\n  setBlockTimestampInterval,\n} from '../../actions/test/setBlockTimestampInterval.js'\nimport { type SetCodeParameters, setCode } from '../../actions/test/setCode.js'\nimport {\n  type SetCoinbaseParameters,\n  setCoinbase,\n} from '../../actions/test/setCoinbase.js'\nimport {\n  type SetIntervalMiningParameters,\n  setIntervalMining,\n} from '../../actions/test/setIntervalMining.js'\nimport { setLoggingEnabled } from '../../actions/test/setLoggingEnabled.js'\nimport {\n  type SetMinGasPriceParameters,\n  setMinGasPrice,\n} from '../../actions/test/setMinGasPrice.js'\nimport {\n  type SetNextBlockBaseFeePerGasParameters,\n  setNextBlockBaseFeePerGas,\n} from '../../actions/test/setNextBlockBaseFeePerGas.js'\nimport {\n  type SetNextBlockTimestampParameters,\n  setNextBlockTimestamp,\n} from '../../actions/test/setNextBlockTimestamp.js'\nimport {\n  type SetNonceParameters,\n  setNonce,\n} from '../../actions/test/setNonce.js'\nimport { setRpcUrl } from '../../actions/test/setRpcUrl.js'\nimport {\n  type SetStorageAtParameters,\n  setStorageAt,\n} from '../../actions/test/setStorageAt.js'\nimport { snapshot } from '../../actions/test/snapshot.js'\nimport {\n  type StopImpersonatingAccountParameters,\n  stopImpersonatingAccount,\n} from '../../actions/test/stopImpersonatingAccount.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Quantity } from '../../types/rpc.js'\nimport type { Client } from '../createClient.js'\nimport type { TestClientMode } from '../createTestClient.js'\nimport type { Transport } from '../transports/createTransport.js'\n\nexport type TestActions = {\n  /**\n   * Removes a transaction from the mempool.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/dropTransaction\n   *\n   * @param args - {@link DropTransactionParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.dropTransaction({\n   *   hash: '0xe58dceb6b20b03965bb678e27d141e151d7d4efc2334c2d6a49b9fac523f7364'\n   * })\n   */\n  dropTransaction: (args: DropTransactionParameters) => Promise<void>\n  /**\n   * Serializes the current state (including contracts code, contract's storage,\n   * accounts properties, etc.) into a savable data blob.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/dumpState\n   *\n   * @param client - Client to use\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.dumpState()\n   */\n  dumpState: () => Promise<DumpStateReturnType>\n  /**\n   * Returns the automatic mining status of the node.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/getAutomine\n   *\n   * @returns Whether or not the node is auto mining. {@link GetAutomineReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const isAutomining = await client.getAutomine()\n   */\n  getAutomine: () => Promise<GetAutomineReturnType>\n  /**\n   * Returns the details of all transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/getTxpoolContent\n   *\n   * @returns Transaction pool content. {@link GetTxpoolContentReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const content = await client.getTxpoolContent()\n   */\n  getTxpoolContent: () => Promise<GetTxpoolContentReturnType>\n  /**\n   * Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/getTxpoolStatus\n   *\n   * @returns Transaction pool status. {@link GetTxpoolStatusReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const status = await client.getTxpoolStatus()\n   */\n  getTxpoolStatus: () => Promise<GetTxpoolStatusReturnType>\n  /**\n   * Impersonate an account or contract address. This lets you send transactions from that account even if you don't have access to its private key.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/impersonateAccount\n   *\n   * @param args - {@link ImpersonateAccountParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.impersonateAccount({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  impersonateAccount: (args: ImpersonateAccountParameters) => Promise<void>\n  /**\n   * Jump forward in time by the given amount of time, in seconds.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/increaseTime\n   *\n   * @param args – {@link IncreaseTimeParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.increaseTime({\n   *   seconds: 420,\n   * })\n   */\n  increaseTime: (args: IncreaseTimeParameters) => Promise<Quantity>\n  /**\n   * Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/inspectTxpool\n   *\n   * @returns Transaction pool inspection data. {@link InspectTxpoolReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const data = await client.inspectTxpool()\n   */\n  inspectTxpool: () => Promise<InspectTxpoolReturnType>\n  /**\n   * Adds state previously dumped with `dumpState` to the current chain.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/loadState\n   *\n   * @param client - Client to use\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.loadState({ state: '0x...' })\n   */\n  loadState: (args: LoadStateParameters) => Promise<LoadStateReturnType>\n  /**\n   * Mine a specified number of blocks.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/mine\n   *\n   * @param client - Client to use\n   * @param args – {@link MineParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.mine({ blocks: 1 })\n   */\n  mine: (args: MineParameters) => Promise<void>\n  /**\n   * Removes [`setBlockTimestampInterval`](https://viem.sh/docs/actions/test/setBlockTimestampInterval) if it exists.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/removeBlockTimestampInterval\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   * import { removeBlockTimestampInterval } from 'viem/test'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.removeBlockTimestampInterval()\n   */\n  removeBlockTimestampInterval: () => Promise<void>\n  /**\n   * Resets fork back to its original state.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/reset\n   *\n   * @param args – {@link ResetParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.reset({ blockNumber: 69420n })\n   */\n  reset: (args?: ResetParameters | undefined) => Promise<void>\n  /**\n   * Revert the state of the blockchain at the current block.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/revert\n   *\n   * @param args – {@link RevertParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.revert({ id: '0x…' })\n   */\n  revert: (args: RevertParameters) => Promise<void>\n  /**\n   * Returns the details of all transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/getTxpoolContent\n   *\n   * @param args – {@link SendUnsignedTransactionParameters}\n   * @returns The transaction hash. {@link SendUnsignedTransactionReturnType}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * const hash = await client.sendUnsignedTransaction({\n   *   from: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: 1000000000000000000n,\n   * })\n   */\n  sendUnsignedTransaction: <chain extends Chain | undefined>(\n    args: SendUnsignedTransactionParameters<chain>,\n  ) => Promise<SendUnsignedTransactionReturnType>\n  /**\n   * Enables or disables the automatic mining of new blocks with each new transaction submitted to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setAutomine\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setAutomine()\n   */\n  setAutomine: (args: boolean) => Promise<void>\n  /**\n   * Modifies the balance of an account.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setBalance\n   *\n   * @param args – {@link SetBalanceParameters}\n   *\n   * @example\n   * import { createTestClient, http, parseEther } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setBalance({\n   *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n   *   value: parseEther('1'),\n   * })\n   */\n  setBalance: (args: SetBalanceParameters) => Promise<void>\n  /**\n   * Sets the block's gas limit.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setBlockGasLimit\n   *\n   * @param args – {@link SetBlockGasLimitParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setBlockGasLimit({ gasLimit: 420_000n })\n   */\n  setBlockGasLimit: (args: SetBlockGasLimitParameters) => Promise<void>\n  /**\n   * Similar to [`increaseTime`](https://viem.sh/docs/actions/test/increaseTime), but sets a block timestamp `interval`. The timestamp of future blocks will be computed as `lastBlock_timestamp` + `interval`.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setBlockTimestampInterval\n   *\n   * @param args – {@link SetBlockTimestampIntervalParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setBlockTimestampInterval({ interval: 5 })\n   */\n  setBlockTimestampInterval: (\n    args: SetBlockTimestampIntervalParameters,\n  ) => Promise<void>\n  /**\n   * Modifies the bytecode stored at an account's address.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setCode\n   *\n   * @param args – {@link SetCodeParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setCode({\n   *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n   *   bytecode: '0x60806040526000600355600019600955600c80546001600160a01b031916737a250d5630b4cf539739df…',\n   * })\n   */\n  setCode: (args: SetCodeParameters) => Promise<void>\n  /**\n   * Sets the coinbase address to be used in new blocks.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setCoinbase\n   *\n   * @param args – {@link SetCoinbaseParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setCoinbase({\n   *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n   * })\n   */\n  setCoinbase: (args: SetCoinbaseParameters) => Promise<void>\n  /**\n   * Sets the automatic mining interval (in seconds) of blocks. Setting the interval to 0 will disable automatic mining.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setIntervalMining\n   *\n   * @param args – {@link SetIntervalMiningParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setIntervalMining({ interval: 5 })\n   */\n  setIntervalMining: (args: SetIntervalMiningParameters) => Promise<void>\n  /**\n   * Enable or disable logging on the test node network.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setLoggingEnabled\n   *\n   * @param client - Client to use\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setLoggingEnabled()\n   */\n  setLoggingEnabled: (args: boolean) => Promise<void>\n  /**\n   * Change the minimum gas price accepted by the network (in wei).\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setMinGasPrice\n   *\n   * Note: `setMinGasPrice` can only be used on clients that do not have EIP-1559 enabled.\n   *\n   * @param args – {@link SetBlockGasLimitParameters}\n   *\n   * @example\n   * import { createTestClient, http, parseGwei } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setMinGasPrice({\n   *   gasPrice: parseGwei('20'),\n   * })\n   */\n  setMinGasPrice: (args: SetMinGasPriceParameters) => Promise<void>\n  /**\n   * Sets the next block's base fee per gas.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setNextBlockBaseFeePerGas\n   *\n   * @param args – {@link SetNextBlockBaseFeePerGasParameters}\n   *\n   * @example\n   * import { createTestClient, http, parseGwei } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setNextBlockBaseFeePerGas({\n   *   baseFeePerGas: parseGwei('20'),\n   * })\n   */\n  setNextBlockBaseFeePerGas: (\n    args: SetNextBlockBaseFeePerGasParameters,\n  ) => Promise<void>\n  /**\n   * Sets the next block's timestamp.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setNextBlockTimestamp\n   *\n   * @param args – {@link SetNextBlockTimestampParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setNextBlockTimestamp({ timestamp: 1671744314n })\n   */\n  setNextBlockTimestamp: (\n    args: SetNextBlockTimestampParameters,\n  ) => Promise<void>\n  /**\n   * Modifies (overrides) the nonce of an account.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setNonce\n   *\n   * @param args – {@link SetNonceParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setNonce({\n   *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n   *   nonce: 420,\n   * })\n   */\n  setNonce: (args: SetNonceParameters) => Promise<void>\n  /**\n   * Sets the backend RPC URL.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setRpcUrl\n   *\n   * @param jsonRpcUrl – RPC URL\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setRpcUrl('https://eth-mainnet.g.alchemy.com/v2')\n   */\n  setRpcUrl: (args: string) => Promise<void>\n  /**\n   * Writes to a slot of an account's storage.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/setStorageAt\n   *\n   * @param args – {@link SetStorageAtParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.setStorageAt({\n   *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n   *   index: 2,\n   *   value: '0x0000000000000000000000000000000000000000000000000000000000000069',\n   * })\n   */\n  setStorageAt: (args: SetStorageAtParameters) => Promise<void>\n  /**\n   * Snapshot the state of the blockchain at the current block.\n   *\n   * - Docs: https://viem.sh/docs/actions/test/snapshot\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   * import { snapshot } from 'viem/test'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.snapshot()\n   */\n  snapshot: () => Promise<Quantity>\n  /**\n   * Stop impersonating an account after having previously used [`impersonateAccount`](https://viem.sh/docs/actions/test/impersonateAccount).\n   *\n   * - Docs: https://viem.sh/docs/actions/test/stopImpersonatingAccount\n   *\n   * @param args – {@link StopImpersonatingAccountParameters}\n   *\n   * @example\n   * import { createTestClient, http } from 'viem'\n   * import { foundry } from 'viem/chains'\n   * import { stopImpersonatingAccount } from 'viem/test'\n   *\n   * const client = createTestClient({\n   *   mode: 'anvil',\n   *   chain: 'foundry',\n   *   transport: http(),\n   * })\n   * await client.stopImpersonatingAccount({\n   *   address: '0xa5cc3c03994DB5b0d9A5eEdD10CabaB0813678AC',\n   * })\n   */\n  stopImpersonatingAccount: (\n    args: StopImpersonatingAccountParameters,\n  ) => Promise<void>\n}\n\nexport function testActions<mode extends TestClientMode>({\n  mode,\n}: { mode: mode }): <\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n>(\n  client: Client<transport, chain, account>,\n) => TestActions {\n  return <\n    transport extends Transport = Transport,\n    chain extends Chain | undefined = Chain | undefined,\n    account extends Account | undefined = Account | undefined,\n  >(\n    client_: Client<transport, chain, account>,\n  ): TestActions => {\n    const client = client_.extend(() => ({\n      mode,\n    }))\n    return {\n      dropTransaction: (args) => dropTransaction(client, args),\n      dumpState: () => dumpState(client),\n      getAutomine: () => getAutomine(client),\n      getTxpoolContent: () => getTxpoolContent(client),\n      getTxpoolStatus: () => getTxpoolStatus(client),\n      impersonateAccount: (args) => impersonateAccount(client, args),\n      increaseTime: (args) => increaseTime(client, args),\n      inspectTxpool: () => inspectTxpool(client),\n      loadState: (args) => loadState(client, args),\n      mine: (args) => mine(client, args),\n      removeBlockTimestampInterval: () => removeBlockTimestampInterval(client),\n      reset: (args) => reset(client, args),\n      revert: (args) => revert(client, args),\n      sendUnsignedTransaction: (args) =>\n        sendUnsignedTransaction(client, args as any),\n      setAutomine: (args) => setAutomine(client, args),\n      setBalance: (args) => setBalance(client, args),\n      setBlockGasLimit: (args) => setBlockGasLimit(client, args),\n      setBlockTimestampInterval: (args) =>\n        setBlockTimestampInterval(client, args),\n      setCode: (args) => setCode(client, args),\n      setCoinbase: (args) => setCoinbase(client, args),\n      setIntervalMining: (args) => setIntervalMining(client, args),\n      setLoggingEnabled: (args) => setLoggingEnabled(client, args),\n      setMinGasPrice: (args) => setMinGasPrice(client, args),\n      setNextBlockBaseFeePerGas: (args) =>\n        setNextBlockBaseFeePerGas(client, args),\n      setNextBlockTimestamp: (args) => setNextBlockTimestamp(client, args),\n      setNonce: (args) => setNonce(client, args),\n      setRpcUrl: (args) => setRpcUrl(client, args),\n      setStorageAt: (args) => setStorageAt(client, args),\n      snapshot: () => snapshot(client),\n      stopImpersonatingAccount: (args) =>\n        stopImpersonatingAccount(client, args),\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4744, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4750, "column": 0}, "map": {"version":3,"file":"createTestClient.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/clients/createTestClient.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Account } from '../accounts/types.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ParseAccount } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type { RpcSchema, TestRpcSchema } from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  createClient,\n} from './createClient.js'\nimport { type TestActions, testActions } from './decorators/test.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type TestClientMode = 'anvil' | 'hardhat' | 'ganache'\n\nexport type TestClientConfig<\n  mode extends TestClientMode = TestClientMode,\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n    | 'account'\n    | 'cacheTime'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'rpcSchema'\n    | 'transport'\n  > & {\n    /** Mode of the test client. */\n    mode: mode | ('anvil' | 'hardhat' | 'ganache') // TODO: Type utility that expands `TestClientMode`\n  }\n>\n\nexport type TestClient<\n  mode extends TestClientMode = TestClientMode,\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  includeActions extends boolean = true,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  { mode: mode } & Client<\n    transport,\n    chain,\n    account,\n    rpcSchema extends RpcSchema\n      ? [...TestRpcSchema<mode>, ...rpcSchema]\n      : TestRpcSchema<mode>,\n    { mode: mode } & (includeActions extends true\n      ? TestActions\n      : Record<string, unknown>)\n  >\n>\n\nexport type CreateTestClientErrorType = CreateClientErrorType | ErrorType\n\n/**\n * @description Creates a test client with a given transport.\n */\n/**\n * Creates a Test Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\n *\n * - Docs: https://viem.sh/docs/clients/test\n *\n * A Test Client is an interface to \"test\" JSON-RPC API methods accessible through a local Ethereum test node such as [Anvil](https://book.getfoundry.sh/anvil/) or [Hardhat](https://hardhat.org/) such as mining blocks, impersonating accounts, setting fees, etc through [Test Actions](https://viem.sh/docs/actions/test/introduction).\n *\n * @param config - {@link TestClientConfig}\n * @returns A Test Client. {@link TestClient}\n *\n * @example\n * import { createTestClient, custom } from 'viem'\n * import { foundry } from 'viem/chains'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: foundry,\n *   transport: http(),\n * })\n */\nexport function createTestClient<\n  mode extends 'anvil' | 'hardhat' | 'ganache', // TODO: Type utility that expands `TestClientMode`\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n>(\n  parameters: TestClientConfig<\n    mode,\n    transport,\n    chain,\n    accountOrAddress,\n    rpcSchema\n  >,\n): TestClient<\n  mode,\n  transport,\n  chain,\n  ParseAccount<accountOrAddress>,\n  true,\n  rpcSchema\n>\n\nexport function createTestClient(parameters: TestClientConfig): TestClient {\n  const { key = 'test', name = 'Test Client', mode } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    type: 'testClient',\n  })\n  return client.extend((config) => ({\n    mode,\n    ...testActions({ mode })(config),\n  }))\n}\n"],"names":[],"mappings":";;;AAQA,OAAO,EAIL,YAAY,GACb,MAAM,mBAAmB,CAAA;AAC1B,OAAO,EAAoB,WAAW,EAAE,MAAM,sBAAsB,CAAA;;;AAoG9D,SAAU,gBAAgB,CAAC,UAA4B;IAC3D,MAAM,EAAE,GAAG,GAAG,MAAM,EAAE,IAAI,GAAG,aAAa,EAAE,IAAI,EAAE,GAAG,UAAU,CAAA;IAC/D,MAAM,MAAM,+JAAG,eAAA,AAAY,EAAC;QAC1B,GAAG,UAAU;QACb,GAAG;QACH,IAAI;QACJ,IAAI,EAAE,YAAY;KACnB,CAAC,CAAA;IACF,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAG,CAAC,AAAF;YAC9B,IAAI;YACJ,qKAAG,cAAA,AAAW,EAAC;gBAAE,IAAI;YAAA,CAAE,CAAC,CAAC,MAAM,CAAC;SACjC,CAAC,CAAC,CAAA;AACL,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4772, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4778, "column": 0}, "map": {"version":3,"file":"createTransport.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/clients/transports/createTransport.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { EIP1193RequestFn } from '../../types/eip1193.js'\nimport type { OneOf } from '../../types/utils.js'\nimport { buildRequest } from '../../utils/buildRequest.js'\nimport { uid as uid_ } from '../../utils/uid.js'\nimport type { ClientConfig } from '../createClient.js'\n\nexport type TransportConfig<\n  type extends string = string,\n  eip1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = {\n  /** The name of the transport. */\n  name: string\n  /** The key of the transport. */\n  key: string\n  /** Methods to include or exclude from executing RPC requests. */\n  methods?:\n    | OneOf<\n        | {\n            include?: string[] | undefined\n          }\n        | {\n            exclude?: string[] | undefined\n          }\n      >\n    | undefined\n  /** The JSON-RPC request function that matches the EIP-1193 request spec. */\n  request: eip1193RequestFn\n  /** The base delay (in ms) between retries. */\n  retryDelay?: number | undefined\n  /** The max number of times to retry. */\n  retryCount?: number | undefined\n  /** The timeout (in ms) for requests. */\n  timeout?: number | undefined\n  /** The type of the transport. */\n  type: type\n}\n\nexport type Transport<\n  type extends string = string,\n  rpcAttributes = Record<string, any>,\n  eip1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = <chain extends Chain | undefined = Chain>({\n  chain,\n}: {\n  chain?: chain | undefined\n  pollingInterval?: ClientConfig['pollingInterval'] | undefined\n  retryCount?: TransportConfig['retryCount'] | undefined\n  timeout?: TransportConfig['timeout'] | undefined\n}) => {\n  config: TransportConfig<type>\n  request: eip1193RequestFn\n  value?: rpcAttributes | undefined\n}\n\nexport type CreateTransportErrorType = ErrorType\n\n/**\n * @description Creates an transport intended to be used with a client.\n */\nexport function createTransport<\n  type extends string,\n  rpcAttributes extends Record<string, any>,\n>(\n  {\n    key,\n    methods,\n    name,\n    request,\n    retryCount = 3,\n    retryDelay = 150,\n    timeout,\n    type,\n  }: TransportConfig<type>,\n  value?: rpcAttributes | undefined,\n): ReturnType<Transport<type, rpcAttributes>> {\n  const uid = uid_()\n  return {\n    config: {\n      key,\n      methods,\n      name,\n      request,\n      retryCount,\n      retryDelay,\n      timeout,\n      type,\n    },\n    request: buildRequest(request, { methods, retryCount, retryDelay, uid }),\n    value,\n  }\n}\n"],"names":[],"mappings":";;;AAKA,OAAO,EAAE,GAAG,IAAI,IAAI,EAAE,MAAM,oBAAoB,CAAA;AADhD,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAA;;;AAyDpD,SAAU,eAAe,CAI7B,EACE,GAAG,EACH,OAAO,EACP,IAAI,EACJ,OAAO,EACP,UAAU,GAAG,CAAC,EACd,UAAU,GAAG,GAAG,EAChB,OAAO,EACP,IAAI,EACkB,EACxB,KAAiC;IAEjC,MAAM,GAAG,oJAAG,MAAA,AAAI,EAAE,CAAA;IAClB,OAAO;QACL,MAAM,EAAE;YACN,GAAG;YACH,OAAO;YACP,IAAI;YACJ,OAAO;YACP,UAAU;YACV,UAAU;YACV,OAAO;YACP,IAAI;SACL;QACD,OAAO,4JAAE,eAAA,AAAY,EAAC,OAAO,EAAE;YAAE,OAAO;YAAE,UAAU;YAAE,UAAU;YAAE,GAAG;QAAA,CAAE,CAAC;QACxE,KAAK;KACN,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4807, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4813, "column": 0}, "map": {"version":3,"file":"wallet.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/clients/decorators/wallet.ts"],"sourcesContent":["import type { Abi, Address, TypedData } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type GetChainIdReturnType,\n  getChainId,\n} from '../../actions/public/getChainId.js'\nimport {\n  type AddChainParameters,\n  addChain,\n} from '../../actions/wallet/addChain.js'\nimport {\n  type DeployContractParameters,\n  type DeployContractReturnType,\n  deployContract,\n} from '../../actions/wallet/deployContract.js'\nimport {\n  type GetAddressesReturnType,\n  getAddresses,\n} from '../../actions/wallet/getAddresses.js'\nimport {\n  type GetPermissionsReturnType,\n  getPermissions,\n} from '../../actions/wallet/getPermissions.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  type PrepareTransactionRequestRequest,\n  type PrepareTransactionRequestReturnType,\n  prepareTransactionRequest,\n} from '../../actions/wallet/prepareTransactionRequest.js'\nimport {\n  type RequestAddressesReturnType,\n  requestAddresses,\n} from '../../actions/wallet/requestAddresses.js'\nimport {\n  type RequestPermissionsParameters,\n  type RequestPermissionsReturnType,\n  requestPermissions,\n} from '../../actions/wallet/requestPermissions.js'\nimport {\n  type SendRawTransactionParameters,\n  type SendRawTransactionReturnType,\n  sendRawTransaction,\n} from '../../actions/wallet/sendRawTransaction.js'\nimport {\n  type SendTransactionParameters,\n  type SendTransactionRequest,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from '../../actions/wallet/sendTransaction.js'\nimport {\n  type SignMessageParameters,\n  type SignMessageReturnType,\n  signMessage,\n} from '../../actions/wallet/signMessage.js'\nimport {\n  type SignTransactionParameters,\n  type SignTransactionRequest,\n  type SignTransactionReturnType,\n  signTransaction,\n} from '../../actions/wallet/signTransaction.js'\nimport {\n  type SignTypedDataParameters,\n  type SignTypedDataReturnType,\n  signTypedData,\n} from '../../actions/wallet/signTypedData.js'\nimport {\n  type SwitchChainParameters,\n  switchChain,\n} from '../../actions/wallet/switchChain.js'\nimport {\n  type WatchAssetParameters,\n  type WatchAssetReturnType,\n  watchAsset,\n} from '../../actions/wallet/watchAsset.js'\nimport {\n  type WriteContractParameters,\n  type WriteContractReturnType,\n  writeContract,\n} from '../../actions/wallet/writeContract.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n} from '../../types/contract.js'\nimport type { Client } from '../createClient.js'\nimport type { Transport } from '../transports/createTransport.js'\n\nexport type WalletActions<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n> = {\n  /**\n   * Adds an EVM chain to the wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/addChain\n   * - JSON-RPC Methods: [`eth_addEthereumChain`](https://eips.ethereum.org/EIPS/eip-3085)\n   *\n   * @param args - {@link AddChainParameters}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { optimism } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   transport: custom(window.ethereum),\n   * })\n   * await client.addChain({ chain: optimism })\n   */\n  addChain: (args: AddChainParameters) => Promise<void>\n  /**\n   * Deploys a contract to the network, given bytecode and constructor arguments.\n   *\n   * - Docs: https://viem.sh/docs/contract/deployContract\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_deploying-contracts\n   *\n   * @param args - {@link DeployContractParameters}\n   * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link DeployContractReturnType}\n   *\n   * @example\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const hash = await client.deployContract({\n   *   abi: [],\n   *   account: '0x…,\n   *   bytecode: '0x608060405260405161083e38038061083e833981016040819052610...',\n   * })\n   */\n  deployContract: <\n    const abi extends Abi | readonly unknown[],\n    chainOverride extends Chain | undefined,\n  >(\n    args: DeployContractParameters<abi, chain, account, chainOverride>,\n  ) => Promise<DeployContractReturnType>\n  /**\n   * Returns a list of account addresses owned by the wallet or client.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/getAddresses\n   * - JSON-RPC Methods: [`eth_accounts`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_accounts)\n   *\n   * @returns List of account addresses owned by the wallet or client. {@link GetAddressesReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const accounts = await client.getAddresses()\n   */\n  getAddresses: () => Promise<GetAddressesReturnType>\n  /**\n   * Returns the chain ID associated with the current network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getChainId\n   * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n   *\n   * @returns The current chain ID. {@link GetChainIdReturnType}\n   *\n   * @example\n   * import { createWalletClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const chainId = await client.getChainId()\n   * // 1\n   */\n  getChainId: () => Promise<GetChainIdReturnType>\n  /**\n   * Gets the wallets current permissions.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/getPermissions\n   * - JSON-RPC Methods: [`wallet_getPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n   *\n   * @returns The wallet permissions. {@link GetPermissionsReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const permissions = await client.getPermissions()\n   */\n  getPermissions: () => Promise<GetPermissionsReturnType>\n  /**\n   * Prepares a transaction request for signing.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest\n   *\n   * @param args - {@link PrepareTransactionRequestParameters}\n   * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   */\n  prepareTransactionRequest: <\n    const request extends PrepareTransactionRequestRequest<\n      chain,\n      chainOverride\n    >,\n    chainOverride extends Chain | undefined = undefined,\n    accountOverride extends Account | Address | undefined = undefined,\n  >(\n    args: PrepareTransactionRequestParameters<\n      chain,\n      account,\n      chainOverride,\n      accountOverride,\n      request\n    >,\n  ) => Promise<\n    PrepareTransactionRequestReturnType<\n      chain,\n      account,\n      chainOverride,\n      accountOverride,\n      request\n    >\n  >\n  /**\n   * Requests a list of accounts managed by a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/requestAddresses\n   * - JSON-RPC Methods: [`eth_requestAccounts`](https://eips.ethereum.org/EIPS/eip-1102)\n   *\n   * Sends a request to the wallet, asking for permission to access the user's accounts. After the user accepts the request, it will return a list of accounts (addresses).\n   *\n   * This API can be useful for dapps that need to access the user's accounts in order to execute transactions or interact with smart contracts.\n   *\n   * @returns List of accounts managed by a wallet {@link RequestAddressesReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const accounts = await client.requestAddresses()\n   */\n  requestAddresses: () => Promise<RequestAddressesReturnType>\n  /**\n   * Requests permissions for a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/requestPermissions\n   * - JSON-RPC Methods: [`wallet_requestPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n   *\n   * @param args - {@link RequestPermissionsParameters}\n   * @returns The wallet permissions. {@link RequestPermissionsReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const permissions = await client.requestPermissions({\n   *   eth_accounts: {}\n   * })\n   */\n  requestPermissions: (\n    args: RequestPermissionsParameters,\n  ) => Promise<RequestPermissionsReturnType>\n  /**\n   * Sends a **signed** transaction to the network\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction\n   * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link SendRawTransactionParameters}\n   * @returns The transaction hash. {@link SendRawTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { sendRawTransaction } from 'viem/wallet'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const hash = await client.sendRawTransaction({\n   *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n   * })\n   */\n  sendRawTransaction: (\n    args: SendRawTransactionParameters,\n  ) => Promise<SendRawTransactionReturnType>\n  /**\n   * Creates, signs, and sends a new transaction to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendTransaction\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\n   *   - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\n   *\n   * @param args - {@link SendTransactionParameters}\n   * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const hash = await client.sendTransaction({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: 1000000000000000000n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const hash = await client.sendTransaction({\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: 1000000000000000000n,\n   * })\n   */\n  sendTransaction: <\n    const request extends SendTransactionRequest<chain, chainOverride>,\n    chainOverride extends Chain | undefined = undefined,\n  >(\n    args: SendTransactionParameters<chain, account, chainOverride, request>,\n  ) => Promise<SendTransactionReturnType>\n  /**\n   * Calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signMessage\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`personal_sign`](https://docs.metamask.io/guide/signing-data#personal-sign)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * With the calculated signature, you can:\n   * - use [`verifyMessage`](https://viem.sh/docs/utilities/verifyMessage) to verify the signature,\n   * - use [`recoverMessageAddress`](https://viem.sh/docs/utilities/recoverMessageAddress) to recover the signing address from a signature.\n   *\n   * @param args - {@link SignMessageParameters}\n   * @returns The signed message. {@link SignMessageReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const signature = await client.signMessage({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   message: 'hello world',\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const signature = await client.signMessage({\n   *   message: 'hello world',\n   * })\n   */\n  signMessage: (\n    args: SignMessageParameters<account>,\n  ) => Promise<SignMessageReturnType>\n  /**\n   * Signs a transaction.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signTransaction\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * @param args - {@link SignTransactionParameters}\n   * @returns The signed message. {@link SignTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   * const signature = await client.signTransaction(request)\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   * const signature = await client.signTransaction(request)\n   */\n  signTransaction: <\n    chainOverride extends Chain | undefined,\n    const request extends SignTransactionRequest<\n      chain,\n      chainOverride\n    > = SignTransactionRequest<chain, chainOverride>,\n  >(\n    args: SignTransactionParameters<chain, account, chainOverride, request>,\n  ) => Promise<SignTransactionReturnType<request>>\n  /**\n   * Signs typed data and calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signTypedData\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_signTypedData_v4`](https://docs.metamask.io/guide/signing-data#signtypeddata-v4)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * @param client - Client to use\n   * @param args - {@link SignTypedDataParameters}\n   * @returns The signed data. {@link SignTypedDataReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const signature = await client.signTypedData({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   domain: {\n   *     name: 'Ether Mail',\n   *     version: '1',\n   *     chainId: 1,\n   *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n   *   },\n   *   types: {\n   *     Person: [\n   *       { name: 'name', type: 'string' },\n   *       { name: 'wallet', type: 'address' },\n   *     ],\n   *     Mail: [\n   *       { name: 'from', type: 'Person' },\n   *       { name: 'to', type: 'Person' },\n   *       { name: 'contents', type: 'string' },\n   *     ],\n   *   },\n   *   primaryType: 'Mail',\n   *   message: {\n   *     from: {\n   *       name: 'Cow',\n   *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n   *     },\n   *     to: {\n   *       name: 'Bob',\n   *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n   *     },\n   *     contents: 'Hello, Bob!',\n   *   },\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const signature = await client.signTypedData({\n   *   domain: {\n   *     name: 'Ether Mail',\n   *     version: '1',\n   *     chainId: 1,\n   *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n   *   },\n   *   types: {\n   *     Person: [\n   *       { name: 'name', type: 'string' },\n   *       { name: 'wallet', type: 'address' },\n   *     ],\n   *     Mail: [\n   *       { name: 'from', type: 'Person' },\n   *       { name: 'to', type: 'Person' },\n   *       { name: 'contents', type: 'string' },\n   *     ],\n   *   },\n   *   primaryType: 'Mail',\n   *   message: {\n   *     from: {\n   *       name: 'Cow',\n   *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n   *     },\n   *     to: {\n   *       name: 'Bob',\n   *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n   *     },\n   *     contents: 'Hello, Bob!',\n   *   },\n   * })\n   */\n  signTypedData: <\n    const typedData extends TypedData | { [key: string]: unknown },\n    primaryType extends string,\n  >(\n    args: SignTypedDataParameters<typedData, primaryType, account>,\n  ) => Promise<SignTypedDataReturnType>\n  /**\n   * Switch the target chain in a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/switchChain\n   * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-3326)\n   *\n   * @param args - {@link SwitchChainParameters}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet, optimism } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * await client.switchChain({ id: optimism.id })\n   */\n  switchChain: (args: SwitchChainParameters) => Promise<void>\n  /**\n   * Adds an EVM chain to the wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/watchAsset\n   * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-747)\n   *\n   * @param args - {@link WatchAssetParameters}\n   * @returns Boolean indicating if the token was successfully added. {@link WatchAssetReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const success = await client.watchAsset({\n   *   type: 'ERC20',\n   *   options: {\n   *     address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n   *     decimals: 18,\n   *     symbol: 'WETH',\n   *   },\n   * })\n   */\n  watchAsset: (args: WatchAssetParameters) => Promise<WatchAssetReturnType>\n  /**\n   * Executes a write function on a contract.\n   *\n   * - Docs: https://viem.sh/docs/contract/writeContract\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_writing-to-contracts\n   *\n   * A \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms) is needed to be broadcast in order to change the state.\n   *\n   * Internally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n   *\n   * __Warning: The `write` internally sends a transaction – it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract#usage) before you execute it.__\n   *\n   * @param args - {@link WriteContractParameters}\n   * @returns A [Transaction Hash](https://viem.sh/docs/glossary/terms#hash). {@link WriteContractReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const hash = await client.writeContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n   *   functionName: 'mint',\n   *   args: [69420],\n   * })\n   *\n   * @example\n   * // With Validation\n   * import { createWalletClient, custom, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const { request } = await client.simulateContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n   *   functionName: 'mint',\n   *   args: [69420],\n   * }\n   * const hash = await client.writeContract(request)\n   */\n  writeContract: <\n    const abi extends Abi | readonly unknown[],\n    functionName extends ContractFunctionName<abi, 'payable' | 'nonpayable'>,\n    args extends ContractFunctionArgs<\n      abi,\n      'payable' | 'nonpayable',\n      functionName\n    >,\n    chainOverride extends Chain | undefined = undefined,\n  >(\n    args: WriteContractParameters<\n      abi,\n      functionName,\n      args,\n      chain,\n      account,\n      chainOverride\n    >,\n  ) => Promise<WriteContractReturnType>\n}\n\nexport function walletActions<\n  transport extends Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n>(client: Client<transport, chain, account>): WalletActions<chain, account> {\n  return {\n    addChain: (args) => addChain(client, args),\n    deployContract: (args) => deployContract(client, args),\n    getAddresses: () => getAddresses(client),\n    getChainId: () => getChainId(client),\n    getPermissions: () => getPermissions(client),\n    prepareTransactionRequest: (args) =>\n      prepareTransactionRequest(client as any, args as any) as any,\n    requestAddresses: () => requestAddresses(client),\n    requestPermissions: (args) => requestPermissions(client, args),\n    sendRawTransaction: (args) => sendRawTransaction(client, args),\n    sendTransaction: (args) => sendTransaction(client, args),\n    signMessage: (args) => signMessage(client, args),\n    signTransaction: (args) => signTransaction(client, args),\n    signTypedData: (args) => signTypedData(client, args),\n    switchChain: (args) => switchChain(client, args),\n    watchAsset: (args) => watchAsset(client, args),\n    writeContract: (args) => writeContract(client, args as any),\n  }\n}\n"],"names":[],"mappings":";;;AAOA,OAAO,EAEL,QAAQ,GACT,MAAM,kCAAkC,CAAA;AACzC,OAAO,EAGL,cAAc,GACf,MAAM,wCAAwC,CAAA;AAC/C,OAAO,EAEL,YAAY,GACb,MAAM,sCAAsC,CAAA;AAhB7C,OAAO,EAEL,UAAU,GACX,MAAM,oCAAoC,CAAA;AAc3C,OAAO,EAEL,cAAc,GACf,MAAM,wCAAwC,CAAA;AAC/C,OAAO,EAIL,yBAAyB,GAC1B,MAAM,mDAAmD,CAAA;AAC1D,OAAO,EAEL,gBAAgB,GACjB,MAAM,0CAA0C,CAAA;AACjD,OAAO,EAGL,kBAAkB,GACnB,MAAM,4CAA4C,CAAA;AACnD,OAAO,EAGL,kBAAkB,GACnB,MAAM,4CAA4C,CAAA;AACnD,OAAO,EAIL,eAAe,GAChB,MAAM,yCAAyC,CAAA;AAChD,OAAO,EAGL,WAAW,GACZ,MAAM,qCAAqC,CAAA;AAC5C,OAAO,EAIL,eAAe,GAChB,MAAM,yCAAyC,CAAA;AAChD,OAAO,EAGL,aAAa,GACd,MAAM,uCAAuC,CAAA;AAC9C,OAAO,EAEL,WAAW,GACZ,MAAM,qCAAqC,CAAA;AAC5C,OAAO,EAGL,UAAU,GACX,MAAM,oCAAoC,CAAA;AAC3C,OAAO,EAGL,aAAa,GACd,MAAM,uCAAuC,CAAA;;;;;;;;;;;;;;;;;AA0mBxC,SAAU,aAAa,CAI3B,MAAyC;IACzC,OAAO;QACL,QAAQ,EAAE,CAAC,IAAI,EAAE,EAAE,iKAAC,WAAA,AAAQ,EAAC,MAAM,EAAE,IAAI,CAAC;QAC1C,cAAc,EAAE,CAAC,IAAI,EAAE,EAAE,uKAAC,iBAAc,AAAd,EAAe,MAAM,EAAE,IAAI,CAAC;QACtD,YAAY,EAAE,GAAG,EAAE,qKAAC,eAAA,AAAY,EAAC,MAAM,CAAC;QACxC,UAAU,EAAE,GAAG,EAAE,AAAC,gLAAA,AAAU,EAAC,MAAM,CAAC;QACpC,cAAc,EAAE,GAAG,EAAE,uKAAC,iBAAA,AAAc,EAAC,MAAM,CAAC;QAC5C,yBAAyB,EAAE,CAAC,IAAI,EAAE,EAAE,kLAClC,4BAAA,AAAyB,EAAC,MAAa,EAAE,IAAW,CAAQ;QAC9D,gBAAgB,EAAE,GAAG,EAAE,yKAAC,mBAAA,AAAgB,EAAC,MAAM,CAAC;QAChD,kBAAkB,EAAE,CAAC,IAAI,EAAE,EAAE,2KAAC,qBAAA,AAAkB,EAAC,MAAM,EAAE,IAAI,CAAC;QAC9D,kBAAkB,EAAE,CAAC,IAAI,EAAE,EAAE,AAAC,gMAAA,AAAkB,EAAC,MAAM,EAAE,IAAI,CAAC;QAC9D,eAAe,EAAE,CAAC,IAAI,EAAE,EAAE,wKAAC,kBAAA,AAAe,EAAC,MAAM,EAAE,IAAI,CAAC;QACxD,WAAW,EAAE,CAAC,IAAI,EAAE,EAAE,AAAC,kLAAA,AAAW,EAAC,MAAM,EAAE,IAAI,CAAC;QAChD,eAAe,EAAE,CAAC,IAAI,EAAE,EAAE,wKAAC,kBAAA,AAAe,EAAC,MAAM,EAAE,IAAI,CAAC;QACxD,aAAa,EAAE,CAAC,IAAI,EAAE,EAAE,sKAAC,gBAAA,AAAa,EAAC,MAAM,EAAE,IAAI,CAAC;QACpD,WAAW,EAAE,CAAC,IAAI,EAAE,EAAE,oKAAC,cAAA,AAAW,EAAC,MAAM,EAAE,IAAI,CAAC;QAChD,UAAU,EAAE,CAAC,IAAI,EAAE,EAAE,mKAAC,aAAA,AAAU,EAAC,MAAM,EAAE,IAAI,CAAC;QAC9C,aAAa,EAAE,CAAC,IAAI,EAAE,EAAE,sKAAC,gBAAA,AAAa,EAAC,MAAM,EAAE,IAAW,CAAC;KAC5D,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4868, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4874, "column": 0}, "map": {"version":3,"file":"createWalletClient.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/clients/createWalletClient.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Account } from '../accounts/types.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ParseAccount } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type { RpcSchema, WalletRpcSchema } from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  createClient,\n} from './createClient.js'\nimport { type WalletActions, walletActions } from './decorators/wallet.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type WalletClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n    | 'account'\n    | 'cacheTime'\n    | 'ccipRead'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'rpcSchema'\n    | 'transport'\n  >\n>\n\nexport type WalletClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Client<\n    transport,\n    chain,\n    account,\n    rpcSchema extends RpcSchema\n      ? [...WalletRpcSchema, ...rpcSchema]\n      : WalletRpcSchema,\n    WalletActions<chain, account>\n  >\n>\n\nexport type CreateWalletClientErrorType = CreateClientErrorType | ErrorType\n\n/**\n * Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\n *\n * - Docs: https://viem.sh/docs/clients/wallet\n *\n * A Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction).\n *\n * The Wallet Client supports signing over:\n * - [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\n * - [Local Accounts](https://viem.sh/docs/clients/wallet#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\n *\n * @param config - {@link WalletClientConfig}\n * @returns A Wallet Client. {@link WalletClient}\n *\n * @example\n * // JSON-RPC Account\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * @example\n * // Local Account\n * import { createWalletClient, custom } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…')\n *   chain: mainnet,\n *   transport: http(),\n * })\n */\nexport function createWalletClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n>(\n  parameters: WalletClientConfig<transport, chain, accountOrAddress, rpcSchema>,\n): WalletClient<transport, chain, ParseAccount<accountOrAddress>, rpcSchema>\n\nexport function createWalletClient(\n  parameters: WalletClientConfig,\n): WalletClient {\n  const { key = 'wallet', name = 'Wallet Client', transport } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    transport,\n    type: 'walletClient',\n  })\n  return client.extend(walletActions)\n}\n"],"names":[],"mappings":";;;AAQA,OAAO,EAIL,YAAY,GACb,MAAM,mBAAmB,CAAA;AAC1B,OAAO,EAAsB,aAAa,EAAE,MAAM,wBAAwB,CAAA;;;AA0FpE,SAAU,kBAAkB,CAChC,UAA8B;IAE9B,MAAM,EAAE,GAAG,GAAG,QAAQ,EAAE,IAAI,GAAG,eAAe,EAAE,SAAS,EAAE,GAAG,UAAU,CAAA;IACxE,MAAM,MAAM,GAAG,2KAAA,AAAY,EAAC;QAC1B,GAAG,UAAU;QACb,GAAG;QACH,IAAI;QACJ,SAAS;QACT,IAAI,EAAE,cAAc;KACrB,CAAC,CAAA;IACF,OAAO,MAAM,CAAC,MAAM,iKAAC,gBAAa,CAAC,CAAA;AACrC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4892, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4898, "column": 0}, "map": {"version":3,"file":"custom.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/clients/transports/custom.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\ntype EthereumProvider = { request(...args: any): Promise<any> }\n\nexport type CustomTransportConfig = {\n  /** The key of the transport. */\n  key?: TransportConfig['key'] | undefined\n  /** Methods to include or exclude from executing RPC requests. */\n  methods?: TransportConfig['methods'] | undefined\n  /** The name of the transport. */\n  name?: TransportConfig['name'] | undefined\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount'] | undefined\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay'] | undefined\n}\n\nexport type CustomTransport = Transport<\n  'custom',\n  {},\n  EthereumProvider['request']\n>\n\nexport type CustomTransportErrorType = CreateTransportErrorType | ErrorType\n\n/**\n * @description Creates a custom transport given an EIP-1193 compliant `request` attribute.\n */\nexport function custom<provider extends EthereumProvider>(\n  provider: provider,\n  config: CustomTransportConfig = {},\n): CustomTransport {\n  const {\n    key = 'custom',\n    methods,\n    name = 'Custom Provider',\n    retryDelay,\n  } = config\n  return ({ retryCount: defaultRetryCount }) =>\n    createTransport({\n      key,\n      methods,\n      name,\n      request: provider.request.bind(provider),\n      retryCount: config.retryCount ?? defaultRetryCount,\n      retryDelay,\n      type: 'custom',\n    })\n}\n"],"names":[],"mappings":";;;AACA,OAAO,EAIL,eAAe,GAChB,MAAM,sBAAsB,CAAA;;AA4BvB,SAAU,MAAM,CACpB,QAAkB,EAClB,SAAgC,CAAA,CAAE;IAElC,MAAM,EACJ,GAAG,GAAG,QAAQ,EACd,OAAO,EACP,IAAI,GAAG,iBAAiB,EACxB,UAAU,EACX,GAAG,MAAM,CAAA;IACV,OAAO,CAAC,EAAE,UAAU,EAAE,iBAAiB,EAAE,EAAE,EAAE,4KAC3C,kBAAA,AAAe,EAAC;YACd,GAAG;YACH,OAAO;YACP,IAAI;YACJ,OAAO,EAAE,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;YACxC,UAAU,EAAE,MAAM,CAAC,UAAU,IAAI,iBAAiB;YAClD,UAAU;YACV,IAAI,EAAE,QAAQ;SACf,CAAC,CAAA;AACN,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4915, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4921, "column": 0}, "map": {"version":3,"file":"fallback.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/clients/transports/fallback.ts"],"sourcesContent":["import { ExecutionRevertedError } from '../../errors/node.js'\nimport {\n  TransactionRejectedRpcError,\n  UserRejectedRequestError,\n} from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport { wait } from '../../utils/wait.js'\n\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n// TODO: Narrow `method` & `params` types.\nexport type OnResponseFn = (\n  args: {\n    method: string\n    params: unknown[]\n    transport: ReturnType<Transport>\n  } & (\n    | {\n        error?: undefined\n        response: unknown\n        status: 'success'\n      }\n    | {\n        error: Error\n        response?: undefined\n        status: 'error'\n      }\n  ),\n) => void\n\ntype RankOptions = {\n  /**\n   * The polling interval (in ms) at which the ranker should ping the RPC URL.\n   * @default client.pollingInterval\n   */\n  interval?: number | undefined\n  /**\n   * Ping method to determine latency.\n   */\n  ping?: (parameters: { transport: ReturnType<Transport> }) =>\n    | Promise<unknown>\n    | undefined\n  /**\n   * The number of previous samples to perform ranking on.\n   * @default 10\n   */\n  sampleCount?: number | undefined\n  /**\n   * Timeout when sampling transports.\n   * @default 1_000\n   */\n  timeout?: number | undefined\n  /**\n   * Weights to apply to the scores. Weight values are proportional.\n   */\n  weights?:\n    | {\n        /**\n         * The weight to apply to the latency score.\n         * @default 0.3\n         */\n        latency?: number | undefined\n        /**\n         * The weight to apply to the stability score.\n         * @default 0.7\n         */\n        stability?: number | undefined\n      }\n    | undefined\n}\n\nexport type FallbackTransportConfig = {\n  /** The key of the Fallback transport. */\n  key?: TransportConfig['key'] | undefined\n  /** The name of the Fallback transport. */\n  name?: TransportConfig['name'] | undefined\n  /** Toggle to enable ranking, or rank options. */\n  rank?: boolean | RankOptions | undefined\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount'] | undefined\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay'] | undefined\n}\n\nexport type FallbackTransport<\n  transports extends readonly Transport[] = readonly Transport[],\n> = Transport<\n  'fallback',\n  {\n    onResponse: (fn: OnResponseFn) => void\n    transports: {\n      [key in keyof transports]: ReturnType<transports[key]>\n    }\n  }\n>\n\nexport type FallbackTransportErrorType = CreateTransportErrorType | ErrorType\n\nexport function fallback<const transports extends readonly Transport[]>(\n  transports_: transports,\n  config: FallbackTransportConfig = {},\n): FallbackTransport<transports> {\n  const {\n    key = 'fallback',\n    name = 'Fallback',\n    rank = false,\n    retryCount,\n    retryDelay,\n  } = config\n  return (({ chain, pollingInterval = 4_000, timeout, ...rest }) => {\n    let transports = transports_\n\n    let onResponse: OnResponseFn = () => {}\n\n    const transport = createTransport(\n      {\n        key,\n        name,\n        async request({ method, params }) {\n          let includes: boolean | undefined\n\n          const fetch = async (i = 0): Promise<any> => {\n            const transport = transports[i]({\n              ...rest,\n              chain,\n              retryCount: 0,\n              timeout,\n            })\n            try {\n              const response = await transport.request({\n                method,\n                params,\n              } as any)\n\n              onResponse({\n                method,\n                params: params as unknown[],\n                response,\n                transport,\n                status: 'success',\n              })\n\n              return response\n            } catch (err) {\n              onResponse({\n                error: err as Error,\n                method,\n                params: params as unknown[],\n                transport,\n                status: 'error',\n              })\n\n              if (shouldThrow(err as Error)) throw err\n\n              // If we've reached the end of the fallbacks, throw the error.\n              if (i === transports.length - 1) throw err\n\n              // Check if at least one other transport includes the method\n              includes ??= transports.slice(i + 1).some((transport) => {\n                const { include, exclude } =\n                  transport({ chain }).config.methods || {}\n                if (include) return include.includes(method)\n                if (exclude) return !exclude.includes(method)\n                return true\n              })\n              if (!includes) throw err\n\n              // Otherwise, try the next fallback.\n              return fetch(i + 1)\n            }\n          }\n          return fetch()\n        },\n        retryCount,\n        retryDelay,\n        type: 'fallback',\n      },\n      {\n        onResponse: (fn: OnResponseFn) => (onResponse = fn),\n        transports: transports.map((fn) => fn({ chain, retryCount: 0 })),\n      },\n    )\n\n    if (rank) {\n      const rankOptions = (typeof rank === 'object' ? rank : {}) as RankOptions\n      rankTransports({\n        chain,\n        interval: rankOptions.interval ?? pollingInterval,\n        onTransports: (transports_) => (transports = transports_ as transports),\n        ping: rankOptions.ping,\n        sampleCount: rankOptions.sampleCount,\n        timeout: rankOptions.timeout,\n        transports,\n        weights: rankOptions.weights,\n      })\n    }\n    return transport\n  }) as FallbackTransport<transports>\n}\n\nfunction shouldThrow(error: Error) {\n  if ('code' in error && typeof error.code === 'number') {\n    if (\n      error.code === TransactionRejectedRpcError.code ||\n      error.code === UserRejectedRequestError.code ||\n      ExecutionRevertedError.nodeMessage.test(error.message) ||\n      error.code === 5000 // CAIP UserRejectedRequestError\n    )\n      return true\n  }\n  return false\n}\n\n/** @internal */\nexport function rankTransports({\n  chain,\n  interval = 4_000,\n  onTransports,\n  ping,\n  sampleCount = 10,\n  timeout = 1_000,\n  transports,\n  weights = {},\n}: {\n  chain?: Chain | undefined\n  interval: RankOptions['interval']\n  onTransports: (transports: readonly Transport[]) => void\n  ping?: RankOptions['ping'] | undefined\n  sampleCount?: RankOptions['sampleCount'] | undefined\n  timeout?: RankOptions['timeout'] | undefined\n  transports: readonly Transport[]\n  weights?: RankOptions['weights'] | undefined\n}) {\n  const { stability: stabilityWeight = 0.7, latency: latencyWeight = 0.3 } =\n    weights\n\n  type SampleData = { latency: number; success: number }\n  type Sample = SampleData[]\n  const samples: Sample[] = []\n\n  const rankTransports_ = async () => {\n    // 1. Take a sample from each Transport.\n    const sample: Sample = await Promise.all(\n      transports.map(async (transport) => {\n        const transport_ = transport({ chain, retryCount: 0, timeout })\n\n        const start = Date.now()\n        let end: number\n        let success: number\n        try {\n          await (ping\n            ? ping({ transport: transport_ })\n            : transport_.request({ method: 'net_listening' }))\n          success = 1\n        } catch {\n          success = 0\n        } finally {\n          end = Date.now()\n        }\n        const latency = end - start\n        return { latency, success }\n      }),\n    )\n\n    // 2. Store the sample. If we have more than `sampleCount` samples, remove\n    // the oldest sample.\n    samples.push(sample)\n    if (samples.length > sampleCount) samples.shift()\n\n    // 3. Calculate the max latency from samples.\n    const maxLatency = Math.max(\n      ...samples.map((sample) =>\n        Math.max(...sample.map(({ latency }) => latency)),\n      ),\n    )\n\n    // 4. Calculate the score for each Transport.\n    const scores = transports\n      .map((_, i) => {\n        const latencies = samples.map((sample) => sample[i].latency)\n        const meanLatency =\n          latencies.reduce((acc, latency) => acc + latency, 0) /\n          latencies.length\n        const latencyScore = 1 - meanLatency / maxLatency\n\n        const successes = samples.map((sample) => sample[i].success)\n        const stabilityScore =\n          successes.reduce((acc, success) => acc + success, 0) /\n          successes.length\n\n        if (stabilityScore === 0) return [0, i]\n        return [\n          latencyWeight * latencyScore + stabilityWeight * stabilityScore,\n          i,\n        ]\n      })\n      .sort((a, b) => b[0] - a[0])\n\n    // 5. Sort the Transports by score.\n    onTransports(scores.map(([, i]) => transports[i]))\n\n    // 6. Wait, and then rank again.\n    await wait(interval)\n    rankTransports_()\n  }\n  rankTransports_()\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5085, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5091, "column": 0}, "map": {"version":3,"file":"http.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/clients/transports/http.ts"],"sourcesContent":["import { RpcRequestError } from '../../errors/request.js'\nimport {\n  UrlRequiredError,\n  type UrlRequiredErrorType,\n} from '../../errors/transport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { RpcRequest } from '../../types/rpc.js'\nimport { createBatchScheduler } from '../../utils/promise/createBatchScheduler.js'\nimport {\n  type HttpRpcClientOptions,\n  getHttpRpcClient,\n} from '../../utils/rpc/http.js'\n\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\nexport type HttpTransportConfig = {\n  /**\n   * Whether to enable Batch JSON-RPC.\n   * @link https://www.jsonrpc.org/specification#batch\n   */\n  batch?:\n    | boolean\n    | {\n        /** The maximum number of JSON-RPC requests to send in a batch. @default 1_000 */\n        batchSize?: number | undefined\n        /** The maximum number of milliseconds to wait before sending a batch. @default 0 */\n        wait?: number | undefined\n      }\n    | undefined\n  /**\n   * Request configuration to pass to `fetch`.\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/fetch\n   */\n  fetchOptions?: HttpRpcClientOptions['fetchOptions'] | undefined\n  /** A callback to handle the response from `fetch`. */\n  onFetchRequest?: HttpRpcClientOptions['onRequest'] | undefined\n  /** A callback to handle the response from `fetch`. */\n  onFetchResponse?: HttpRpcClientOptions['onResponse'] | undefined\n  /** The key of the HTTP transport. */\n  key?: TransportConfig['key'] | undefined\n  /** Methods to include or exclude from executing RPC requests. */\n  methods?: TransportConfig['methods'] | undefined\n  /** The name of the HTTP transport. */\n  name?: TransportConfig['name'] | undefined\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount'] | undefined\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay'] | undefined\n  /** The timeout (in ms) for the HTTP request. Default: 10_000 */\n  timeout?: TransportConfig['timeout'] | undefined\n}\n\nexport type HttpTransport = Transport<\n  'http',\n  {\n    fetchOptions?: HttpTransportConfig['fetchOptions'] | undefined\n    url?: string | undefined\n  }\n>\n\nexport type HttpTransportErrorType =\n  | CreateTransportErrorType\n  | UrlRequiredErrorType\n  | ErrorType\n\n/**\n * @description Creates a HTTP transport that connects to a JSON-RPC API.\n */\nexport function http(\n  /** URL of the JSON-RPC API. Defaults to the chain's public RPC URL. */\n  url?: string | undefined,\n  config: HttpTransportConfig = {},\n): HttpTransport {\n  const {\n    batch,\n    fetchOptions,\n    key = 'http',\n    methods,\n    name = 'HTTP JSON-RPC',\n    onFetchRequest,\n    onFetchResponse,\n    retryDelay,\n  } = config\n  return ({ chain, retryCount: retryCount_, timeout: timeout_ }) => {\n    const { batchSize = 1000, wait = 0 } =\n      typeof batch === 'object' ? batch : {}\n    const retryCount = config.retryCount ?? retryCount_\n    const timeout = timeout_ ?? config.timeout ?? 10_000\n    const url_ = url || chain?.rpcUrls.default.http[0]\n    if (!url_) throw new UrlRequiredError()\n\n    const rpcClient = getHttpRpcClient(url_, {\n      fetchOptions,\n      onRequest: onFetchRequest,\n      onResponse: onFetchResponse,\n      timeout,\n    })\n\n    return createTransport(\n      {\n        key,\n        methods,\n        name,\n        async request({ method, params }) {\n          const body = { method, params }\n\n          const { schedule } = createBatchScheduler({\n            id: url_,\n            wait,\n            shouldSplitBatch(requests) {\n              return requests.length > batchSize\n            },\n            fn: (body: RpcRequest[]) =>\n              rpcClient.request({\n                body,\n              }),\n            sort: (a, b) => a.id - b.id,\n          })\n\n          const fn = async (body: RpcRequest) =>\n            batch\n              ? schedule(body)\n              : [\n                  await rpcClient.request({\n                    body,\n                  }),\n                ]\n\n          const [{ error, result }] = await fn(body)\n          if (error)\n            throw new RpcRequestError({\n              body,\n              error,\n              url: url_,\n            })\n          return result\n        },\n        retryCount,\n        retryDelay,\n        timeout,\n        type: 'http',\n      },\n      {\n        fetchOptions,\n        url: url_,\n      },\n    )\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5167, "column": 0}, "map": {"version":3,"file":"webSocket.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/clients/transports/webSocket.ts"],"sourcesContent":["import { RpcRequestError } from '../../errors/request.js'\nimport {\n  UrlRequiredError,\n  type UrlRequiredErrorType,\n} from '../../errors/transport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcResponse } from '../../types/rpc.js'\nimport { getSocket } from '../../utils/rpc/compat.js'\nimport type { SocketRpcClient } from '../../utils/rpc/socket.js'\nimport {\n  type GetWebSocketRpcClientOptions,\n  getWebSocketRpcClient,\n} from '../../utils/rpc/webSocket.js'\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\ntype WebSocketTransportSubscribeParameters = {\n  onData: (data: RpcResponse) => void\n  onError?: ((error: any) => void) | undefined\n}\n\ntype WebSocketTransportSubscribeReturnType = {\n  subscriptionId: Hash\n  unsubscribe: () => Promise<RpcResponse<boolean>>\n}\n\ntype WebSocketTransportSubscribe = {\n  subscribe(\n    args: WebSocketTransportSubscribeParameters & {\n      /**\n       * @description Add information about compiled contracts\n       * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_addcompilationresult\n       */\n      params: ['newHeads']\n    },\n  ): Promise<WebSocketTransportSubscribeReturnType>\n}\n\nexport type WebSocketTransportConfig = {\n  /**\n   * Whether or not to send keep-alive ping messages.\n   * @default true\n   */\n  keepAlive?: GetWebSocketRpcClientOptions['keepAlive'] | undefined\n  /** The key of the WebSocket transport. */\n  key?: TransportConfig['key'] | undefined\n  /** Methods to include or exclude from executing RPC requests. */\n  methods?: TransportConfig['methods'] | undefined\n  /** The name of the WebSocket transport. */\n  name?: TransportConfig['name'] | undefined\n  /**\n   * Whether or not to attempt to reconnect on socket failure.\n   * @default true\n   */\n  reconnect?: GetWebSocketRpcClientOptions['reconnect'] | undefined\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount'] | undefined\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay'] | undefined\n  /** The timeout (in ms) for async WebSocket requests. Default: 10_000 */\n  timeout?: TransportConfig['timeout'] | undefined\n}\n\nexport type WebSocketTransport = Transport<\n  'webSocket',\n  {\n    /**\n     * @deprecated use `getRpcClient` instead.\n     */\n    getSocket(): Promise<WebSocket>\n    getRpcClient(): Promise<SocketRpcClient<WebSocket>>\n    subscribe: WebSocketTransportSubscribe['subscribe']\n  }\n>\n\nexport type WebSocketTransportErrorType =\n  | CreateTransportErrorType\n  | UrlRequiredErrorType\n  | ErrorType\n\n/**\n * @description Creates a WebSocket transport that connects to a JSON-RPC API.\n */\nexport function webSocket(\n  /** URL of the JSON-RPC API. Defaults to the chain's public RPC URL. */\n  url?: string,\n  config: WebSocketTransportConfig = {},\n): WebSocketTransport {\n  const {\n    keepAlive,\n    key = 'webSocket',\n    methods,\n    name = 'WebSocket JSON-RPC',\n    reconnect,\n    retryDelay,\n  } = config\n  return ({ chain, retryCount: retryCount_, timeout: timeout_ }) => {\n    const retryCount = config.retryCount ?? retryCount_\n    const timeout = timeout_ ?? config.timeout ?? 10_000\n    const url_ = url || chain?.rpcUrls.default.webSocket?.[0]\n    if (!url_) throw new UrlRequiredError()\n    return createTransport(\n      {\n        key,\n        methods,\n        name,\n        async request({ method, params }) {\n          const body = { method, params }\n          const rpcClient = await getWebSocketRpcClient(url_, {\n            keepAlive,\n            reconnect,\n          })\n          const { error, result } = await rpcClient.requestAsync({\n            body,\n            timeout,\n          })\n          if (error)\n            throw new RpcRequestError({\n              body,\n              error,\n              url: url_,\n            })\n          return result\n        },\n        retryCount,\n        retryDelay,\n        timeout,\n        type: 'webSocket',\n      },\n      {\n        getSocket() {\n          return getSocket(url_)\n        },\n        getRpcClient() {\n          return getWebSocketRpcClient(url_)\n        },\n        async subscribe({ params, onData, onError }: any) {\n          const rpcClient = await getWebSocketRpcClient(url_)\n          const { result: subscriptionId } = await new Promise<any>(\n            (resolve, reject) =>\n              rpcClient.request({\n                body: {\n                  method: 'eth_subscribe',\n                  params,\n                },\n                onError(error) {\n                  reject(error)\n                  onError?.(error)\n                  return\n                },\n                onResponse(response) {\n                  if (response.error) {\n                    reject(response.error)\n                    onError?.(response.error)\n                    return\n                  }\n\n                  if (typeof response.id === 'number') {\n                    resolve(response)\n                    return\n                  }\n                  if (response.method !== 'eth_subscription') return\n                  onData(response.params)\n                },\n              }),\n          )\n          return {\n            subscriptionId,\n            async unsubscribe() {\n              return new Promise<any>((resolve) =>\n                rpcClient.request({\n                  body: {\n                    method: 'eth_unsubscribe',\n                    params: [subscriptionId],\n                  },\n                  onResponse: resolve,\n                }),\n              )\n            },\n          }\n        },\n      },\n    )\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5272, "column": 0}, "map": {"version":3,"file":"hashAuthorization.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/experimental/eip7702/utils/hashAuthorization.ts"],"sourcesContent":["import type { ErrorType } from '../../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../../types/misc.js'\nimport {\n  type ConcatHexErrorType,\n  concatHex,\n} from '../../../utils/data/concat.js'\nimport {\n  type HexToBytesErrorType,\n  hexToBytes,\n} from '../../../utils/encoding/toBytes.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../../utils/encoding/toHex.js'\nimport { type ToRlpErrorType, toRlp } from '../../../utils/encoding/toRlp.js'\nimport {\n  type Keccak256ErrorType,\n  keccak256,\n} from '../../../utils/hash/keccak256.js'\nimport type { Authorization } from '../types/authorization.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type HashAuthorizationParameters<to extends To> = Authorization & {\n  /** Output format. @default \"hex\" */\n  to?: to | To | undefined\n}\n\nexport type HashAuthorizationReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type HashAuthorizationErrorType =\n  | Keccak256ErrorType\n  | ConcatHexErrorType\n  | ToRlpErrorType\n  | NumberToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Computes an Authorization hash in [EIP-7702 format](https://eips.ethereum.org/EIPS/eip-7702): `keccak256('0x05' || rlp([chain_id, address, nonce]))`.\n */\nexport function hashAuthorization<to extends To = 'hex'>(\n  parameters: HashAuthorizationParameters<to>,\n): HashAuthorizationReturnType<to> {\n  const { chainId, contractAddress, nonce, to } = parameters\n  const hash = keccak256(\n    concatHex([\n      '0x05',\n      toRlp([\n        chainId ? numberToHex(chainId) : '0x',\n        contractAddress,\n        nonce ? numberToHex(nonce) : '0x',\n      ]),\n    ]),\n  )\n  if (to === 'bytes') return hexToBytes(hash) as HashAuthorizationReturnType<to>\n  return hash as HashAuthorizationReturnType<to>\n}\n"],"names":[],"mappings":";;;AAeA,OAAO,EAEL,SAAS,GACV,MAAM,kCAAkC,CAAA;AAhBzC,OAAO,EAEL,SAAS,GACV,MAAM,+BAA+B,CAAA;AAStC,OAAO,EAAuB,KAAK,EAAE,MAAM,kCAAkC,CAAA;AAJ7E,OAAO,EAEL,WAAW,GACZ,MAAM,kCAAkC,CAAA;AAPzC,OAAO,EAEL,UAAU,GACX,MAAM,oCAAoC,CAAA;;;;;;AAkCrC,SAAU,iBAAiB,CAC/B,UAA2C;IAE3C,MAAM,EAAE,OAAO,EAAE,eAAe,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,UAAU,CAAA;IAC1D,MAAM,IAAI,kKAAG,YAAA,AAAS,8JACpB,YAAA,AAAS,EAAC;QACR,MAAM;uKACN,QAAA,AAAK,EAAC;YACJ,OAAO,CAAC,CAAC,gKAAC,cAAA,AAAW,EAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI;YACrC,eAAe;YACf,KAAK,CAAC,CAAC,gKAAC,cAAA,AAAW,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;SAClC,CAAC;KACH,CAAC,CACH,CAAA;IACD,IAAI,EAAE,KAAK,OAAO,EAAE,wKAAO,aAAA,AAAU,EAAC,IAAI,CAAoC,CAAA;IAC9E,OAAO,IAAuC,CAAA;AAChD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5298, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5304, "column": 0}, "map": {"version":3,"file":"recoverAuthorizationAddress.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/experimental/eip7702/utils/recoverAuthorizationAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { ByteArray, Hex, Signature } from '../../../types/misc.js'\nimport type { OneOf } from '../../../types/utils.js'\nimport {\n  type RecoverAddressErrorType,\n  recoverAddress,\n} from '../../../utils/signature/recoverAddress.js'\nimport type {\n  Authorization,\n  SignedAuthorization,\n} from '../types/authorization.js'\nimport {\n  type HashAuthorizationErrorType,\n  hashAuthorization,\n} from './hashAuthorization.js'\n\nexport type RecoverAuthorizationAddressParameters<\n  authorization extends OneOf<Authorization | SignedAuthorization> = OneOf<\n    Authorization | SignedAuthorization\n  >,\n  //\n  _signature = Hex | ByteArray | OneOf<Signature | SignedAuthorization>,\n> = {\n  /**\n   * The Authorization object.\n   *\n   * - If an unsigned `authorization` is provided, the `signature` property is required.\n   * - If a signed `authorization` is provided, the `signature` property does not need to be provided.\n   */\n  authorization: authorization | OneOf<Authorization | SignedAuthorization>\n} & (authorization extends SignedAuthorization\n  ? {\n      /** Signature of the Authorization. Not required if the `authorization` is signed. */\n      signature?: _signature | undefined\n    }\n  : {\n      /** Signature of the Authorization. Not required if the `authorization` is signed. */\n      signature: _signature\n    })\n\nexport type RecoverAuthorizationAddressReturnType = Address\n\nexport type RecoverAuthorizationAddressErrorType =\n  | HashAuthorizationErrorType\n  | RecoverAddressErrorType\n  | ErrorType\n\nexport async function recoverAuthorizationAddress<\n  const authorization extends OneOf<Authorization | SignedAuthorization>,\n>(\n  parameters: RecoverAuthorizationAddressParameters<authorization>,\n): Promise<RecoverAuthorizationAddressReturnType> {\n  const { authorization, signature } = parameters\n\n  return recoverAddress({\n    hash: hashAuthorization(authorization as Authorization),\n    signature: (signature ?? authorization) as Signature,\n  })\n}\n"],"names":[],"mappings":";;;AAKA,OAAO,EAEL,cAAc,GACf,MAAM,4CAA4C,CAAA;AAKnD,OAAO,EAEL,iBAAiB,GAClB,MAAM,wBAAwB,CAAA;;;AAiCxB,KAAK,UAAU,2BAA2B,CAG/C,UAAgE;IAEhE,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,UAAU,CAAA;IAE/C,gLAAO,iBAAA,AAAc,EAAC;QACpB,IAAI,4LAAE,oBAAA,AAAiB,EAAC,aAA8B,CAAC;QACvD,SAAS,EAAE,AAAC,SAAS,IAAI,aAAa,CAAc;KACrD,CAAC,CAAA;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5324, "column": 0}, "map": {"version":3,"file":"serializeAuthorizationList.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/experimental/eip7702/utils/serializeAuthorizationList.ts"],"sourcesContent":["import type { ErrorType } from '../../../errors/utils.js'\nimport { toHex } from '../../../utils/encoding/toHex.js'\nimport { toYParitySignatureArray } from '../../../utils/transaction/serializeTransaction.js'\nimport type {\n  AuthorizationList,\n  SerializedAuthorizationList,\n} from '../types/authorization.js'\n\nexport type SerializeAuthorizationListReturnType = SerializedAuthorizationList\n\nexport type SerializeAuthorizationListErrorType = ErrorType\n\n/*\n * Serializes an EIP-7702 authorization list.\n */\nexport function serializeAuthorizationList(\n  authorizationList?: AuthorizationList<number, true> | undefined,\n): SerializeAuthorizationListReturnType {\n  if (!authorizationList || authorizationList.length === 0) return []\n\n  const serializedAuthorizationList = []\n  for (const authorization of authorizationList) {\n    const { contractAddress, chainId, nonce, ...signature } = authorization\n    serializedAuthorizationList.push([\n      chainId ? toHex(chainId) : '0x',\n      contractAddress,\n      nonce ? toHex(nonce) : '0x',\n      ...toYParitySignatureArray({}, signature),\n    ])\n  }\n\n  return serializedAuthorizationList as {} as SerializeAuthorizationListReturnType\n}\n"],"names":[],"mappings":";;;AACA,OAAO,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAA;AACxD,OAAO,EAAE,uBAAuB,EAAE,MAAM,oDAAoD,CAAA;;;AAatF,SAAU,0BAA0B,CACxC,iBAA+D;IAE/D,IAAI,CAAC,iBAAiB,IAAI,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE,CAAA;IAEnE,MAAM,2BAA2B,GAAG,EAAE,CAAA;IACtC,KAAK,MAAM,aAAa,IAAI,iBAAiB,CAAE,CAAC;QAC9C,MAAM,EAAE,eAAe,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,SAAS,EAAE,GAAG,aAAa,CAAA;QACvE,2BAA2B,CAAC,IAAI,CAAC;YAC/B,OAAO,CAAC,CAAC,gKAAC,QAAA,AAAK,EAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI;YAC/B,eAAe;YACf,KAAK,CAAC,CAAC,CAAC,uKAAA,AAAK,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;gMACxB,0BAAA,AAAuB,EAAC,CAAA,CAAE,EAAE,SAAS,CAAC;SAC1C,CAAC,CAAA;IACJ,CAAC;IAED,OAAO,2BAAyE,CAAA;AAClF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5345, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5351, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/index.ts"],"sourcesContent":["// biome-ignore lint/performance/noBarrelFile: entrypoint module\nexport {\n  type Abi,\n  type AbiFunction,\n  type AbiParameter,\n  type AbiEvent,\n  type AbiStateMutability,\n  type AbiParameterKind,\n  type AbiParameterToPrimitiveType,\n  type Address,\n  type Narrow,\n  type ParseAbi,\n  type ParseAbiItem,\n  type ParseAbiParameter,\n  type ParseAbiParameters,\n  type ResolvedRegister,\n  type TypedData,\n  type TypedDataDomain,\n  type TypedDataParameter,\n  CircularReferenceError,\n  InvalidAbiParameterError,\n  InvalidAbiParametersError,\n  InvalidAbiItemError,\n  InvalidAbiTypeParameterError,\n  InvalidFunctionModifierError,\n  InvalidModifierError,\n  InvalidParameterError,\n  InvalidParenthesisError,\n  InvalidSignatureError,\n  InvalidStructSignatureError,\n  SolidityProtectedKeywordError,\n  UnknownTypeError,\n  UnknownSignatureError,\n  parseAbi,\n  parseAbiItem,\n  parseAbiParameter,\n  parseAbiParameters,\n} from 'abitype'\nexport type {\n  BlockOverrides,\n  Rpc as RpcBlockOverrides,\n} from 'ox/BlockOverrides'\n\nexport {\n  getContract,\n  type GetContractErrorType,\n  type GetContractParameters,\n  type GetContractReturnType,\n} from './actions/getContract.js'\nexport {\n  type GetContractEventsErrorType,\n  type GetContractEventsParameters,\n  type GetContractEventsReturnType,\n} from './actions/public/getContractEvents.js'\nexport {\n  type GetEip712DomainErrorType,\n  type GetEip712DomainParameters,\n  type GetEip712DomainReturnType,\n} from './actions/public/getEip712Domain.js'\nexport {\n  type AddChainErrorType,\n  type AddChainParameters,\n} from './actions/wallet/addChain.js'\nexport {\n  type CallErrorType,\n  type CallParameters,\n  type CallReturnType,\n} from './actions/public/call.js'\nexport type {\n  CreateBlockFilterErrorType,\n  CreateBlockFilterReturnType,\n} from './actions/public/createBlockFilter.js'\nexport type {\n  CreateContractEventFilterErrorType,\n  CreateContractEventFilterParameters,\n  CreateContractEventFilterReturnType,\n} from './actions/public/createContractEventFilter.js'\nexport type {\n  CreateEventFilterErrorType,\n  CreateEventFilterParameters,\n  CreateEventFilterReturnType,\n} from './actions/public/createEventFilter.js'\nexport type {\n  CreatePendingTransactionFilterErrorType,\n  CreatePendingTransactionFilterReturnType,\n} from './actions/public/createPendingTransactionFilter.js'\nexport type {\n  DeployContractErrorType,\n  DeployContractParameters,\n  DeployContractReturnType,\n} from './actions/wallet/deployContract.js'\nexport type {\n  DropTransactionErrorType,\n  DropTransactionParameters,\n} from './actions/test/dropTransaction.js'\nexport type {\n  DumpStateErrorType,\n  DumpStateReturnType,\n} from './actions/test/dumpState.js'\nexport type {\n  GetAutomineErrorType,\n  GetAutomineReturnType,\n} from './actions/test/getAutomine.js'\nexport type {\n  EstimateContractGasErrorType,\n  EstimateContractGasParameters,\n  EstimateContractGasReturnType,\n} from './actions/public/estimateContractGas.js'\nexport type {\n  EstimateGasErrorType,\n  EstimateGasParameters,\n  EstimateGasReturnType,\n} from './actions/public/estimateGas.js'\nexport type {\n  EstimateFeesPerGasErrorType,\n  EstimateFeesPerGasParameters,\n  EstimateFeesPerGasReturnType,\n} from './actions/public/estimateFeesPerGas.js'\nexport type {\n  EstimateMaxPriorityFeePerGasErrorType,\n  EstimateMaxPriorityFeePerGasParameters,\n  EstimateMaxPriorityFeePerGasReturnType,\n} from './actions/public/estimateMaxPriorityFeePerGas.js'\nexport type {\n  GetAddressesErrorType,\n  GetAddressesReturnType,\n} from './actions/wallet/getAddresses.js'\nexport type {\n  GetBalanceErrorType,\n  GetBalanceParameters,\n  GetBalanceReturnType,\n} from './actions/public/getBalance.js'\nexport type {\n  GetBlobBaseFeeErrorType,\n  GetBlobBaseFeeReturnType,\n} from './actions/public/getBlobBaseFee.js'\nexport type {\n  GetBlockNumberErrorType,\n  GetBlockNumberParameters,\n  GetBlockNumberReturnType,\n} from './actions/public/getBlockNumber.js'\nexport type {\n  GetBlockErrorType,\n  GetBlockParameters,\n  GetBlockReturnType,\n} from './actions/public/getBlock.js'\nexport type {\n  GetBlockTransactionCountErrorType,\n  GetBlockTransactionCountParameters,\n  GetBlockTransactionCountReturnType,\n} from './actions/public/getBlockTransactionCount.js'\nexport type {\n  /** @deprecated Use `GetCodeErrorType` instead */\n  GetCodeErrorType as GetBytecodeErrorType,\n  /** @deprecated Use `GetCodeParameters` instead */\n  GetCodeParameters as GetBytecodeParameters,\n  /** @deprecated Use `GetCodeReturnType` instead  */\n  GetCodeReturnType as GetBytecodeReturnType,\n  GetCodeErrorType,\n  GetCodeParameters,\n  GetCodeReturnType,\n} from './actions/public/getCode.js'\nexport type {\n  GetChainIdErrorType,\n  GetChainIdReturnType,\n} from './actions/public/getChainId.js'\nexport type {\n  GetEnsAddressErrorType,\n  GetEnsAddressParameters,\n  GetEnsAddressReturnType,\n} from './actions/ens/getEnsAddress.js'\nexport type {\n  GetEnsAvatarErrorType,\n  GetEnsAvatarParameters,\n  GetEnsAvatarReturnType,\n} from './actions/ens/getEnsAvatar.js'\nexport type {\n  GetEnsNameErrorType,\n  GetEnsNameParameters,\n  GetEnsNameReturnType,\n} from './actions/ens/getEnsName.js'\nexport type {\n  GetEnsResolverErrorType,\n  GetEnsResolverParameters,\n  GetEnsResolverReturnType,\n} from './actions/ens/getEnsResolver.js'\nexport type {\n  GetEnsTextErrorType,\n  GetEnsTextParameters,\n  GetEnsTextReturnType,\n} from './actions/ens/getEnsText.js'\nexport type {\n  GetFeeHistoryErrorType,\n  GetFeeHistoryParameters,\n  GetFeeHistoryReturnType,\n} from './actions/public/getFeeHistory.js'\nexport type {\n  GetFilterChangesErrorType,\n  GetFilterChangesParameters,\n  GetFilterChangesReturnType,\n} from './actions/public/getFilterChanges.js'\nexport type {\n  GetFilterLogsErrorType,\n  GetFilterLogsParameters,\n  GetFilterLogsReturnType,\n} from './actions/public/getFilterLogs.js'\nexport type {\n  GetGasPriceErrorType,\n  GetGasPriceReturnType,\n} from './actions/public/getGasPrice.js'\nexport type {\n  GetLogsErrorType,\n  GetLogsParameters,\n  GetLogsReturnType,\n} from './actions/public/getLogs.js'\nexport type {\n  GetPermissionsErrorType,\n  GetPermissionsReturnType,\n} from './actions/wallet/getPermissions.js'\nexport type {\n  GetProofErrorType,\n  GetProofParameters,\n  GetProofReturnType,\n} from './actions/public/getProof.js'\nexport type {\n  GetStorageAtErrorType,\n  GetStorageAtParameters,\n  GetStorageAtReturnType,\n} from './actions/public/getStorageAt.js'\nexport type {\n  GetTransactionConfirmationsErrorType,\n  GetTransactionConfirmationsParameters,\n  GetTransactionConfirmationsReturnType,\n} from './actions/public/getTransactionConfirmations.js'\nexport type {\n  GetTransactionCountErrorType,\n  GetTransactionCountParameters,\n  GetTransactionCountReturnType,\n} from './actions/public/getTransactionCount.js'\nexport type {\n  GetTransactionErrorType,\n  GetTransactionParameters,\n  GetTransactionReturnType,\n} from './actions/public/getTransaction.js'\nexport type {\n  GetTransactionReceiptErrorType,\n  GetTransactionReceiptParameters,\n  GetTransactionReceiptReturnType,\n} from './actions/public/getTransactionReceipt.js'\nexport type {\n  ImpersonateAccountErrorType,\n  ImpersonateAccountParameters,\n} from './actions/test/impersonateAccount.js'\nexport type {\n  IncreaseTimeErrorType,\n  IncreaseTimeParameters,\n} from './actions/test/increaseTime.js'\nexport type {\n  LoadStateErrorType,\n  LoadStateParameters,\n  LoadStateReturnType,\n} from './actions/test/loadState.js'\nexport type { MineErrorType, MineParameters } from './actions/test/mine.js'\nexport type {\n  MulticallErrorType,\n  MulticallParameters,\n  MulticallReturnType,\n} from './actions/public/multicall.js'\nexport type { SnapshotErrorType } from './actions/test/snapshot.js'\nexport type {\n  OnBlock,\n  OnBlockParameter,\n  WatchBlocksErrorType,\n  WatchBlocksParameters,\n  WatchBlocksReturnType,\n} from './actions/public/watchBlocks.js'\nexport type {\n  OnBlockNumberFn,\n  OnBlockNumberParameter,\n  WatchBlockNumberErrorType,\n  WatchBlockNumberParameters,\n  WatchBlockNumberReturnType,\n} from './actions/public/watchBlockNumber.js'\nexport type {\n  WatchEventOnLogsFn,\n  WatchEventOnLogsParameter,\n  WatchEventErrorType,\n  WatchEventParameters,\n  WatchEventReturnType,\n} from './actions/public/watchEvent.js'\nexport type {\n  OnTransactionsFn,\n  OnTransactionsParameter,\n  WatchPendingTransactionsErrorType,\n  WatchPendingTransactionsParameters,\n  WatchPendingTransactionsReturnType,\n} from './actions/public/watchPendingTransactions.js'\nexport type {\n  ReadContractErrorType,\n  ReadContractParameters,\n  ReadContractReturnType,\n} from './actions/public/readContract.js'\nexport type {\n  ReplacementReason,\n  ReplacementReturnType,\n  WaitForTransactionReceiptErrorType,\n  WaitForTransactionReceiptParameters,\n  WaitForTransactionReceiptReturnType,\n} from './actions/public/waitForTransactionReceipt.js'\nexport type {\n  RequestAddressesErrorType,\n  RequestAddressesReturnType,\n} from './actions/wallet/requestAddresses.js'\nexport type {\n  RequestPermissionsErrorType,\n  RequestPermissionsReturnType,\n  RequestPermissionsParameters,\n} from './actions/wallet/requestPermissions.js'\nexport type {\n  GetTxpoolContentErrorType,\n  GetTxpoolContentReturnType,\n} from './actions/test/getTxpoolContent.js'\nexport type {\n  GetTxpoolStatusErrorType,\n  GetTxpoolStatusReturnType,\n} from './actions/test/getTxpoolStatus.js'\nexport type {\n  InspectTxpoolErrorType,\n  InspectTxpoolReturnType,\n} from './actions/test/inspectTxpool.js'\nexport type { RemoveBlockTimestampIntervalErrorType } from './actions/test/removeBlockTimestampInterval.js'\nexport type { ResetErrorType, ResetParameters } from './actions/test/reset.js'\nexport type {\n  RevertErrorType,\n  RevertParameters,\n} from './actions/test/revert.js'\nexport type {\n  SendRawTransactionErrorType,\n  SendRawTransactionParameters,\n  SendRawTransactionReturnType,\n} from './actions/wallet/sendRawTransaction.js'\nexport type {\n  SendTransactionErrorType,\n  SendTransactionParameters,\n  SendTransactionRequest,\n  SendTransactionReturnType,\n} from './actions/wallet/sendTransaction.js'\nexport type {\n  SignTransactionErrorType,\n  SignTransactionParameters,\n  SignTransactionReturnType,\n} from './actions/wallet/signTransaction.js'\nexport type {\n  PrepareTransactionRequestErrorType,\n  PrepareTransactionRequestParameters,\n  PrepareTransactionRequestParameterType,\n  PrepareTransactionRequestRequest,\n  PrepareTransactionRequestReturnType,\n} from './actions/wallet/prepareTransactionRequest.js'\nexport type {\n  SendUnsignedTransactionErrorType,\n  SendUnsignedTransactionParameters,\n  SendUnsignedTransactionReturnType,\n} from './actions/test/sendUnsignedTransaction.js'\nexport type { SetAutomineErrorType } from './actions/test/setAutomine.js'\nexport type {\n  SetBalanceErrorType,\n  SetBalanceParameters,\n} from './actions/test/setBalance.js'\nexport type {\n  SetBlockGasLimitErrorType,\n  SetBlockGasLimitParameters,\n} from './actions/test/setBlockGasLimit.js'\nexport type {\n  SetBlockTimestampIntervalErrorType,\n  SetBlockTimestampIntervalParameters,\n} from './actions/test/setBlockTimestampInterval.js'\nexport type {\n  SetCodeErrorType,\n  SetCodeParameters,\n} from './actions/test/setCode.js'\nexport type {\n  SetCoinbaseErrorType,\n  SetCoinbaseParameters,\n} from './actions/test/setCoinbase.js'\nexport type {\n  SetIntervalMiningErrorType,\n  SetIntervalMiningParameters,\n} from './actions/test/setIntervalMining.js'\nexport type { SetLoggingEnabledErrorType } from './actions/test/setLoggingEnabled.js'\nexport type {\n  SetMinGasPriceErrorType,\n  SetMinGasPriceParameters,\n} from './actions/test/setMinGasPrice.js'\nexport type {\n  SetNextBlockBaseFeePerGasErrorType,\n  SetNextBlockBaseFeePerGasParameters,\n} from './actions/test/setNextBlockBaseFeePerGas.js'\nexport type {\n  SetNextBlockTimestampErrorType,\n  SetNextBlockTimestampParameters,\n} from './actions/test/setNextBlockTimestamp.js'\nexport type {\n  SetNonceErrorType,\n  SetNonceParameters,\n} from './actions/test/setNonce.js'\nexport type { SetRpcUrlErrorType } from './actions/test/setRpcUrl.js'\nexport type {\n  SetStorageAtErrorType,\n  SetStorageAtParameters,\n} from './actions/test/setStorageAt.js'\nexport type {\n  SignMessageErrorType,\n  SignMessageParameters,\n  SignMessageReturnType,\n} from './actions/wallet/signMessage.js'\nexport type {\n  SignTypedDataErrorType,\n  SignTypedDataParameters,\n  SignTypedDataReturnType,\n} from './actions/wallet/signTypedData.js'\nexport type {\n  SimulateContractErrorType,\n  SimulateContractParameters,\n  SimulateContractReturnType,\n} from './actions/public/simulateContract.js'\nexport type {\n  StopImpersonatingAccountErrorType,\n  StopImpersonatingAccountParameters,\n} from './actions/test/stopImpersonatingAccount.js'\nexport type {\n  SwitchChainErrorType,\n  SwitchChainParameters,\n} from './actions/wallet/switchChain.js'\nexport type {\n  UninstallFilterErrorType,\n  UninstallFilterParameters,\n  UninstallFilterReturnType,\n} from './actions/public/uninstallFilter.js'\nexport type {\n  WatchAssetErrorType,\n  WatchAssetParameters,\n  WatchAssetReturnType,\n} from './actions/wallet/watchAsset.js'\nexport type {\n  VerifyHashErrorType as VerifyHashActionErrorType,\n  VerifyHashParameters as VerifyHashActionParameters,\n  VerifyHashReturnType as VerifyHashActionReturnType,\n} from './actions/public/verifyHash.js'\nexport type {\n  VerifyTypedDataErrorType as VerifyTypedDataActionErrorType,\n  VerifyTypedDataParameters as VerifyTypedDataActionParameters,\n  VerifyTypedDataReturnType as VerifyTypedDataActionReturnType,\n} from './actions/public/verifyTypedData.js'\nexport type {\n  VerifyMessageErrorType as VerifyMessageActionErrorType,\n  VerifyMessageParameters as VerifyMessageActionParameters,\n  VerifyMessageReturnType as VerifyMessageActionReturnType,\n} from './actions/public/verifyMessage.js'\nexport type {\n  WatchContractEventOnLogsFn,\n  WatchContractEventOnLogsParameter,\n  WatchContractEventErrorType,\n  WatchContractEventParameters,\n  WatchContractEventReturnType,\n} from './actions/public/watchContractEvent.js'\nexport type {\n  WriteContractErrorType,\n  WriteContractParameters,\n  WriteContractReturnType,\n} from './actions/wallet/writeContract.js'\nexport type {\n  Chain,\n  ChainConfig,\n  ChainContract,\n  ChainEstimateFeesPerGasFn,\n  ChainFees,\n  ChainFeesFnParameters,\n  ChainFormatter,\n  ChainEstimateFeesPerGasFnParameters,\n  ChainMaxPriorityFeePerGasFn,\n  DeriveChain,\n  GetChainParameter,\n  ChainFormatters,\n  ChainSerializers,\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterParameters,\n  ExtractChainFormatterReturnType,\n} from './types/chain.js'\nexport type { GetTransactionRequestKzgParameter, Kzg } from './types/kzg.js'\nexport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  type MulticallBatchOptions,\n  createClient,\n  rpcSchema,\n} from './clients/createClient.js'\nexport {\n  type CustomTransport,\n  type CustomTransportConfig,\n  type CustomTransportErrorType,\n  custom,\n} from './clients/transports/custom.js'\nexport {\n  type FallbackTransport,\n  type FallbackTransportConfig,\n  type FallbackTransportErrorType,\n  fallback,\n} from './clients/transports/fallback.js'\nexport {\n  type HttpTransport,\n  type HttpTransportConfig,\n  type HttpTransportErrorType,\n  http,\n} from './clients/transports/http.js'\nexport {\n  type PublicClient,\n  type PublicClientConfig,\n  type CreatePublicClientErrorType,\n  createPublicClient,\n} from './clients/createPublicClient.js'\nexport {\n  type TestClient,\n  type TestClientConfig,\n  type CreateTestClientErrorType,\n  createTestClient,\n} from './clients/createTestClient.js'\nexport {\n  type PublicActions,\n  publicActions,\n} from './clients/decorators/public.js'\nexport {\n  type TestActions,\n  testActions,\n} from './clients/decorators/test.js'\nexport {\n  type WalletActions,\n  walletActions,\n} from './clients/decorators/wallet.js'\nexport {\n  type Transport,\n  type TransportConfig,\n  type CreateTransportErrorType,\n  createTransport,\n} from './clients/transports/createTransport.js'\nexport {\n  type WalletClient,\n  type WalletClientConfig,\n  type CreateWalletClientErrorType,\n  createWalletClient,\n} from './clients/createWalletClient.js'\nexport {\n  type WebSocketTransport,\n  type WebSocketTransportConfig,\n  type WebSocketTransportErrorType,\n  webSocket,\n} from './clients/transports/webSocket.js'\nexport {\n  multicall3Abi,\n  erc20Abi,\n  erc20Abi_bytes32,\n  erc721Abi,\n  erc4626Abi,\n  universalSignatureValidatorAbi,\n} from './constants/abis.js'\nexport { ethAddress, zeroAddress } from './constants/address.js'\nexport {\n  deploylessCallViaBytecodeBytecode,\n  deploylessCallViaFactoryBytecode,\n  universalSignatureValidatorByteCode,\n} from './constants/contracts.js'\nexport { etherUnits, gweiUnits, weiUnits } from './constants/unit.js'\nexport {\n  maxInt8,\n  maxInt16,\n  maxInt24,\n  maxInt32,\n  maxInt40,\n  maxInt48,\n  maxInt56,\n  maxInt64,\n  maxInt72,\n  maxInt80,\n  maxInt88,\n  maxInt96,\n  maxInt104,\n  maxInt112,\n  maxInt120,\n  maxInt128,\n  maxInt136,\n  maxInt144,\n  maxInt152,\n  maxInt160,\n  maxInt168,\n  maxInt176,\n  maxInt184,\n  maxInt192,\n  maxInt200,\n  maxInt208,\n  maxInt216,\n  maxInt224,\n  maxInt232,\n  maxInt240,\n  maxInt248,\n  maxInt256,\n  maxUint8,\n  maxUint16,\n  maxUint24,\n  maxUint32,\n  maxUint40,\n  maxUint48,\n  maxUint56,\n  maxUint64,\n  maxUint72,\n  maxUint80,\n  maxUint88,\n  maxUint96,\n  maxUint104,\n  maxUint112,\n  maxUint120,\n  maxUint128,\n  maxUint136,\n  maxUint144,\n  maxUint152,\n  maxUint160,\n  maxUint168,\n  maxUint176,\n  maxUint184,\n  maxUint192,\n  maxUint200,\n  maxUint208,\n  maxUint216,\n  maxUint224,\n  maxUint232,\n  maxUint240,\n  maxUint248,\n  maxUint256,\n  minInt8,\n  minInt16,\n  minInt24,\n  minInt32,\n  minInt40,\n  minInt48,\n  minInt56,\n  minInt64,\n  minInt72,\n  minInt80,\n  minInt88,\n  minInt96,\n  minInt104,\n  minInt112,\n  minInt120,\n  minInt128,\n  minInt136,\n  minInt144,\n  minInt152,\n  minInt160,\n  minInt168,\n  minInt176,\n  minInt184,\n  minInt192,\n  minInt200,\n  minInt208,\n  minInt216,\n  minInt224,\n  minInt232,\n  minInt240,\n  minInt248,\n  minInt256,\n} from './constants/number.js'\nexport { zeroHash } from './constants/bytes.js'\nexport { presignMessagePrefix } from './constants/strings.js'\nexport {\n  AbiConstructorNotFoundError,\n  type AbiConstructorNotFoundErrorType,\n  AbiConstructorParamsNotFoundError,\n  type AbiConstructorParamsNotFoundErrorType,\n  AbiDecodingDataSizeInvalidError,\n  type AbiDecodingDataSizeInvalidErrorType,\n  AbiDecodingDataSizeTooSmallError,\n  type AbiDecodingDataSizeTooSmallErrorType,\n  AbiDecodingZeroDataError,\n  type AbiDecodingZeroDataErrorType,\n  AbiEncodingArrayLengthMismatchError,\n  type AbiEncodingArrayLengthMismatchErrorType,\n  AbiEncodingLengthMismatchError,\n  type AbiEncodingLengthMismatchErrorType,\n  AbiEncodingBytesSizeMismatchError,\n  type AbiEncodingBytesSizeMismatchErrorType,\n  AbiErrorInputsNotFoundError,\n  type AbiErrorInputsNotFoundErrorType,\n  AbiErrorNotFoundError,\n  type AbiErrorNotFoundErrorType,\n  AbiErrorSignatureNotFoundError,\n  type AbiErrorSignatureNotFoundErrorType,\n  AbiEventNotFoundError,\n  type AbiEventNotFoundErrorType,\n  AbiEventSignatureEmptyTopicsError,\n  type AbiEventSignatureEmptyTopicsErrorType,\n  AbiEventSignatureNotFoundError,\n  type AbiEventSignatureNotFoundErrorType,\n  AbiFunctionNotFoundError,\n  type AbiFunctionNotFoundErrorType,\n  AbiFunctionOutputsNotFoundError,\n  type AbiFunctionOutputsNotFoundErrorType,\n  AbiFunctionSignatureNotFoundError,\n  type AbiFunctionSignatureNotFoundErrorType,\n  BytesSizeMismatchError,\n  type BytesSizeMismatchErrorType,\n  DecodeLogDataMismatch,\n  type DecodeLogDataMismatchErrorType,\n  DecodeLogTopicsMismatch,\n  type DecodeLogTopicsMismatchErrorType,\n  InvalidAbiDecodingTypeError,\n  type InvalidAbiDecodingTypeErrorType,\n  InvalidAbiEncodingTypeError,\n  type InvalidAbiEncodingTypeErrorType,\n  InvalidArrayError,\n  type InvalidArrayErrorType,\n  InvalidDefinitionTypeError,\n  type InvalidDefinitionTypeErrorType,\n  UnsupportedPackedAbiType,\n  type UnsupportedPackedAbiTypeErrorType,\n} from './errors/abi.js'\nexport { BaseError, type BaseErrorType, setErrorConfig } from './errors/base.js'\nexport {\n  BlockNotFoundError,\n  type BlockNotFoundErrorType,\n} from './errors/block.js'\nexport {\n  CallExecutionError,\n  type CallExecutionErrorType,\n  ContractFunctionExecutionError,\n  type ContractFunctionExecutionErrorType,\n  ContractFunctionRevertedError,\n  type ContractFunctionRevertedErrorType,\n  ContractFunctionZeroDataError,\n  type ContractFunctionZeroDataErrorType,\n  RawContractError,\n  type RawContractErrorType,\n  CounterfactualDeploymentFailedError,\n  type CounterfactualDeploymentFailedErrorType,\n} from './errors/contract.js'\nexport {\n  BaseFeeScalarError,\n  type BaseFeeScalarErrorType,\n  Eip1559FeesNotSupportedError,\n  type Eip1559FeesNotSupportedErrorType,\n  MaxFeePerGasTooLowError,\n  type MaxFeePerGasTooLowErrorType,\n} from './errors/fee.js'\nexport {\n  ChainDisconnectedError,\n  type ChainDisconnectedErrorType,\n  InternalRpcError,\n  type InternalRpcErrorType,\n  InvalidInputRpcError,\n  type InvalidInputRpcErrorType,\n  InvalidParamsRpcError,\n  type InvalidParamsRpcErrorType,\n  InvalidRequestRpcError,\n  type InvalidRequestRpcErrorType,\n  JsonRpcVersionUnsupportedError,\n  type JsonRpcVersionUnsupportedErrorType,\n  LimitExceededRpcError,\n  type LimitExceededRpcErrorType,\n  MethodNotFoundRpcError,\n  type MethodNotFoundRpcErrorType,\n  MethodNotSupportedRpcError,\n  type MethodNotSupportedRpcErrorType,\n  ParseRpcError,\n  type ParseRpcErrorType,\n  ProviderDisconnectedError,\n  type ProviderDisconnectedErrorType,\n  ProviderRpcError,\n  type ProviderRpcErrorCode,\n  type ProviderRpcErrorType,\n  ResourceNotFoundRpcError,\n  type ResourceNotFoundRpcErrorType,\n  ResourceUnavailableRpcError,\n  type ResourceUnavailableRpcErrorType,\n  RpcError,\n  type RpcErrorType,\n  type RpcErrorCode,\n  SwitchChainError,\n  TransactionRejectedRpcError,\n  type TransactionRejectedRpcErrorType,\n  UnauthorizedProviderError,\n  type UnauthorizedProviderErrorType,\n  UnknownRpcError,\n  type UnknownRpcErrorType,\n  UnsupportedProviderMethodError,\n  type UnsupportedProviderMethodErrorType,\n  UserRejectedRequestError,\n  type UserRejectedRequestErrorType,\n} from './errors/rpc.js'\nexport {\n  ChainDoesNotSupportContract,\n  type ChainDoesNotSupportContractErrorType,\n  ChainMismatchError,\n  type ChainMismatchErrorType,\n  ChainNotFoundError,\n  type ChainNotFoundErrorType,\n  ClientChainNotConfiguredError,\n  type ClientChainNotConfiguredErrorType,\n  InvalidChainIdError,\n  type InvalidChainIdErrorType,\n} from './errors/chain.js'\nexport {\n  InvalidBytesBooleanError,\n  type InvalidBytesBooleanErrorType,\n  IntegerOutOfRangeError,\n  type IntegerOutOfRangeErrorType,\n  InvalidHexBooleanError,\n  type InvalidHexBooleanErrorType,\n  InvalidHexValueError,\n  type InvalidHexValueErrorType,\n  SizeOverflowError,\n  type SizeOverflowErrorType,\n} from './errors/encoding.js'\nexport {\n  type EnsAvatarInvalidMetadataError,\n  EnsAvatarUriResolutionError,\n  type EnsAvatarInvalidMetadataErrorType,\n  EnsAvatarInvalidNftUriError,\n  type EnsAvatarInvalidNftUriErrorType,\n  EnsAvatarUnsupportedNamespaceError,\n  type EnsAvatarUnsupportedNamespaceErrorType,\n  type EnsAvatarUriResolutionErrorType,\n} from './errors/ens.js'\nexport {\n  type InvalidDecimalNumberErrorType,\n  InvalidDecimalNumberError,\n} from './errors/unit.js'\nexport {\n  EstimateGasExecutionError,\n  type EstimateGasExecutionErrorType,\n} from './errors/estimateGas.js'\nexport {\n  ExecutionRevertedError,\n  type ExecutionRevertedErrorType,\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  FeeCapTooLowError,\n  type FeeCapTooLowErrorType,\n  InsufficientFundsError,\n  type InsufficientFundsErrorType,\n  IntrinsicGasTooHighError,\n  type IntrinsicGasTooHighErrorType,\n  IntrinsicGasTooLowError,\n  type IntrinsicGasTooLowErrorType,\n  NonceMaxValueError,\n  type NonceMaxValueErrorType,\n  NonceTooHighError,\n  type NonceTooHighErrorType,\n  NonceTooLowError,\n  type NonceTooLowErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n  TransactionTypeNotSupportedError,\n  type TransactionTypeNotSupportedErrorType,\n  UnknownNodeError,\n  type UnknownNodeErrorType,\n} from './errors/node.js'\nexport {\n  FilterTypeNotSupportedError,\n  type FilterTypeNotSupportedErrorType,\n} from './errors/log.js'\nexport {\n  HttpRequestError,\n  type HttpRequestErrorType,\n  RpcRequestError,\n  type RpcRequestErrorType,\n  TimeoutError,\n  type TimeoutErrorType,\n  SocketClosedError,\n  type SocketClosedErrorType,\n  WebSocketRequestError,\n  type WebSocketRequestErrorType,\n} from './errors/request.js'\nexport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from './errors/address.js'\nexport {\n  FeeConflictError,\n  type FeeConflictErrorType,\n  InvalidLegacyVError,\n  type InvalidLegacyVErrorType,\n  InvalidSerializableTransactionError,\n  type InvalidSerializableTransactionErrorType,\n  InvalidSerializedTransactionError,\n  type InvalidSerializedTransactionErrorType,\n  InvalidSerializedTransactionTypeError,\n  type InvalidSerializedTransactionTypeErrorType,\n  InvalidStorageKeySizeError,\n  type InvalidStorageKeySizeErrorType,\n  TransactionExecutionError,\n  type TransactionExecutionErrorType,\n  TransactionNotFoundError,\n  type TransactionNotFoundErrorType,\n  TransactionReceiptNotFoundError,\n  type TransactionReceiptNotFoundErrorType,\n  WaitForTransactionReceiptTimeoutError,\n  type WaitForTransactionReceiptTimeoutErrorType,\n} from './errors/transaction.js'\nexport {\n  SizeExceedsPaddingSizeError,\n  type SizeExceedsPaddingSizeErrorType,\n  SliceOffsetOutOfBoundsError,\n  type SliceOffsetOutOfBoundsErrorType,\n} from './errors/data.js'\nexport {\n  UrlRequiredError,\n  type UrlRequiredErrorType,\n} from './errors/transport.js'\nexport {\n  AccountStateConflictError,\n  type AccountStateConflictErrorType,\n  StateAssignmentConflictError,\n  type StateAssignmentConflictErrorType,\n} from './errors/stateOverride.js'\nexport {\n  InvalidDomainError,\n  type InvalidDomainErrorType,\n  InvalidPrimaryTypeError,\n  type InvalidPrimaryTypeErrorType,\n  InvalidStructTypeError,\n  type InvalidStructTypeErrorType,\n} from './errors/typedData.js'\nexport type {\n  AbiEventParameterToPrimitiveType,\n  AbiEventParametersToPrimitiveTypes,\n  AbiEventTopicToPrimitiveType,\n  AbiItem,\n  AbiItemArgs,\n  AbiItemName,\n  ContractConstructorArgs,\n  ContractEventArgsFromTopics,\n  EventDefinition,\n  ExtractAbiFunctionForArgs,\n  ExtractAbiItem,\n  ExtractAbiItemForArgs,\n  ExtractAbiItemNames,\n  ContractErrorArgs,\n  ContractErrorName,\n  ContractEventArgs,\n  ContractEventName,\n  ContractFunctionParameters,\n  ContractFunctionReturnType,\n  ContractFunctionArgs,\n  ContractFunctionName,\n  GetEventArgs,\n  GetValue,\n  LogTopicType,\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n  UnionWiden,\n  Widen,\n} from './types/contract.js'\nexport type {\n  AccessList,\n  Transaction,\n  TransactionBase,\n  TransactionEIP1559,\n  TransactionEIP2930,\n  TransactionEIP4844,\n  TransactionEIP7702,\n  TransactionLegacy,\n  TransactionReceipt,\n  TransactionRequest,\n  TransactionRequestBase,\n  TransactionRequestEIP1559,\n  TransactionRequestEIP2930,\n  TransactionRequestEIP4844,\n  TransactionRequestEIP7702,\n  TransactionRequestGeneric,\n  TransactionRequestLegacy,\n  TransactionSerializable,\n  TransactionSerializableBase,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableEIP4844,\n  TransactionSerializableEIP7702,\n  TransactionSerializableGeneric,\n  TransactionSerializableLegacy,\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n  TransactionSerializedEIP4844,\n  TransactionSerializedEIP7702,\n  TransactionSerializedGeneric,\n  TransactionSerializedLegacy,\n  TransactionType,\n} from './types/transaction.js'\nexport type {\n  Assign,\n  Branded,\n  Evaluate,\n  IsNarrowable,\n  IsUndefined,\n  IsUnion,\n  LooseOmit,\n  MaybePartial,\n  MaybePromise,\n  MaybeRequired,\n  Mutable,\n  NoInfer,\n  NoUndefined,\n  Omit,\n  Or,\n  PartialBy,\n  RequiredBy,\n  Some,\n  UnionEvaluate,\n  UnionLooseOmit,\n  ValueOf,\n  Prettify,\n  ExactPartial,\n  ExactRequired,\n  IsNever,\n  OneOf,\n  UnionOmit,\n  UnionPartialBy,\n  UnionPick,\n  UnionRequiredBy,\n  UnionToTuple,\n} from './types/utils.js'\nexport type {\n  Account,\n  AccountSource,\n  CustomSource,\n  HDAccount,\n  HDOptions,\n  JsonRpcAccount,\n  LocalAccount,\n  PrivateKeyAccount,\n} from './accounts/types.js'\nexport type { AssetGateway, AssetGatewayUrls } from './types/ens.js'\nexport type {\n  Block,\n  BlockIdentifier,\n  BlockNumber,\n  BlockTag,\n  Uncle,\n} from './types/block.js'\nexport type {\n  ByteArray,\n  Hash,\n  Hex,\n  LogTopic,\n  Signature,\n  CompactSignature,\n  SignableMessage,\n} from './types/misc.js'\nexport type {\n  AddEthereumChainParameter,\n  BundlerRpcSchema,\n  DebugBundlerRpcSchema,\n  EIP1193EventMap,\n  EIP1193Events,\n  EIP1193Parameters,\n  EIP1193Provider,\n  EIP1193RequestFn,\n  EIP1474Methods,\n  ProviderRpcErrorType as EIP1193ProviderRpcErrorType,\n  ProviderConnectInfo,\n  ProviderMessage,\n  PublicRpcSchema,\n  PaymasterRpcSchema,\n  NetworkSync,\n  RpcSchema,\n  RpcSchemaOverride,\n  TestRpcSchema,\n  WalletCapabilities,\n  WalletCapabilitiesRecord,\n  WalletCallReceipt,\n  WalletGetCallsStatusReturnType,\n  WalletGrantPermissionsParameters,\n  WalletGrantPermissionsReturnType,\n  WalletSendCallsParameters,\n  WalletPermissionCaveat,\n  WalletPermission,\n  WalletRpcSchema,\n  WatchAssetParams,\n} from './types/eip1193.js'\nexport { ProviderRpcError as EIP1193ProviderRpcError } from './types/eip1193.js'\nexport type { BlobSidecar, BlobSidecars } from './types/eip4844.js'\nexport type {\n  FeeHistory,\n  FeeValues,\n  FeeValuesEIP1559,\n  FeeValuesEIP4844,\n  FeeValuesLegacy,\n  FeeValuesType,\n} from './types/fee.js'\nexport type { Filter, FilterType } from './types/filter.js'\nexport type { TypedDataDefinition } from './types/typedData.js'\nexport type { GetTransportConfig, GetPollOptions } from './types/transport.js'\nexport type { Log } from './types/log.js'\nexport type {\n  MulticallContracts,\n  MulticallResponse,\n  MulticallResults,\n} from './types/multicall.js'\nexport type {\n  ParseAccount,\n  DeriveAccount,\n  HDKey,\n} from './types/account.js'\nexport type {\n  Index,\n  Quantity,\n  RpcBlock,\n  RpcBlockIdentifier,\n  RpcBlockNumber,\n  RpcFeeHistory,\n  RpcFeeValues,\n  RpcLog,\n  RpcTransaction,\n  RpcTransactionReceipt,\n  RpcTransactionRequest,\n  RpcUncle,\n  Status,\n  RpcProof,\n  RpcAccountStateOverride,\n  RpcStateOverride,\n  RpcStateMapping,\n} from './types/rpc.js'\nexport type { Withdrawal } from './types/withdrawal.js'\nexport type {\n  StateMapping,\n  StateOverride,\n} from './types/stateOverride.js'\nexport { labelhash, type LabelhashErrorType } from './utils/ens/labelhash.js'\nexport { namehash, type NamehashErrorType } from './utils/ens/namehash.js'\nexport {\n  type FormattedBlock,\n  defineBlock,\n  type DefineBlockErrorType,\n  formatBlock,\n  type FormatBlockErrorType,\n} from './utils/formatters/block.js'\nexport { formatLog, type FormatLogErrorType } from './utils/formatters/log.js'\nexport {\n  type DecodeAbiParametersErrorType,\n  type DecodeAbiParametersReturnType,\n  decodeAbiParameters,\n} from './utils/abi/decodeAbiParameters.js'\nexport {\n  type DecodeDeployDataErrorType,\n  type DecodeDeployDataParameters,\n  type DecodeDeployDataReturnType,\n  decodeDeployData,\n} from './utils/abi/decodeDeployData.js'\nexport {\n  type DecodeErrorResultErrorType,\n  type DecodeErrorResultParameters,\n  type DecodeErrorResultReturnType,\n  decodeErrorResult,\n} from './utils/abi/decodeErrorResult.js'\nexport {\n  type DecodeEventLogErrorType,\n  type DecodeEventLogParameters,\n  type DecodeEventLogReturnType,\n  decodeEventLog,\n} from './utils/abi/decodeEventLog.js'\nexport {\n  type DecodeFunctionDataErrorType,\n  type DecodeFunctionDataParameters,\n  type DecodeFunctionDataReturnType,\n  decodeFunctionData,\n} from './utils/abi/decodeFunctionData.js'\nexport {\n  type DecodeFunctionResultErrorType,\n  type DecodeFunctionResultParameters,\n  type DecodeFunctionResultReturnType,\n  decodeFunctionResult,\n} from './utils/abi/decodeFunctionResult.js'\nexport {\n  type EncodeAbiParametersErrorType,\n  type EncodeAbiParametersReturnType,\n  encodeAbiParameters,\n} from './utils/abi/encodeAbiParameters.js'\nexport {\n  type EncodeDeployDataErrorType,\n  type EncodeDeployDataParameters,\n  type EncodeDeployDataReturnType,\n  encodeDeployData,\n} from './utils/abi/encodeDeployData.js'\nexport {\n  type EncodeErrorResultErrorType,\n  type EncodeErrorResultParameters,\n  type EncodeErrorResultReturnType,\n  encodeErrorResult,\n} from './utils/abi/encodeErrorResult.js'\nexport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  type EncodeEventTopicsReturnType,\n  encodeEventTopics,\n} from './utils/abi/encodeEventTopics.js'\nexport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  type EncodeFunctionDataReturnType,\n  encodeFunctionData,\n} from './utils/abi/encodeFunctionData.js'\nexport {\n  type PrepareEncodeFunctionDataErrorType,\n  type PrepareEncodeFunctionDataParameters,\n  type PrepareEncodeFunctionDataReturnType,\n  prepareEncodeFunctionData,\n} from './utils/abi/prepareEncodeFunctionData.js'\nexport {\n  type EncodeFunctionResultErrorType,\n  type EncodeFunctionResultParameters,\n  type EncodeFunctionResultReturnType,\n  encodeFunctionResult,\n} from './utils/abi/encodeFunctionResult.js'\nexport {\n  type ParseEventLogsErrorType,\n  type ParseEventLogsParameters,\n  type ParseEventLogsReturnType,\n  parseEventLogs,\n} from './utils/abi/parseEventLogs.js'\nexport {\n  type FormattedTransaction,\n  defineTransaction,\n  type DefineTransactionErrorType,\n  formatTransaction,\n  type FormatTransactionErrorType,\n  transactionType,\n} from './utils/formatters/transaction.js'\nexport {\n  type FormattedTransactionReceipt,\n  defineTransactionReceipt,\n  type DefineTransactionReceiptErrorType,\n  formatTransactionReceipt,\n  type FormatTransactionReceiptErrorType,\n} from './utils/formatters/transactionReceipt.js'\nexport {\n  type FormattedTransactionRequest,\n  defineTransactionRequest,\n  type DefineTransactionRequestErrorType,\n  formatTransactionRequest,\n  type FormatTransactionRequestErrorType,\n  rpcTransactionType,\n} from './utils/formatters/transactionRequest.js'\nexport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  type GetAbiItemReturnType,\n  getAbiItem,\n} from './utils/abi/getAbiItem.js'\nexport {\n  type GetContractAddressOptions,\n  type GetCreate2AddressOptions,\n  type GetCreate2AddressErrorType,\n  type GetCreateAddressOptions,\n  type GetCreateAddressErrorType,\n  getContractAddress,\n  getCreate2Address,\n  getCreateAddress,\n} from './utils/address/getContractAddress.js'\nexport {\n  type GetSerializedTransactionType,\n  type GetSerializedTransactionTypeErrorType,\n  getSerializedTransactionType,\n} from './utils/transaction/getSerializedTransactionType.js'\nexport {\n  type GetTransactionType,\n  type GetTransactionTypeErrorType,\n  getTransactionType,\n} from './utils/transaction/getTransactionType.js'\nexport {\n  type HashDomainErrorType,\n  type HashStructErrorType,\n  type HashTypedDataErrorType,\n  type HashTypedDataParameters,\n  type HashTypedDataReturnType,\n  hashDomain,\n  hashStruct,\n  hashTypedData,\n} from './utils/signature/hashTypedData.js'\nexport {\n  type CompactSignatureToSignatureErrorType,\n  compactSignatureToSignature,\n} from './utils/signature/compactSignatureToSignature.js'\nexport {\n  /** @deprecated Use `ParseCompactSignatureErrorType`. */\n  type ParseCompactSignatureErrorType as HexToCompactSignatureErrorType,\n  /** @deprecated Use `parseCompactSignature`. */\n  parseCompactSignature as hexToCompactSignature,\n  type ParseCompactSignatureErrorType,\n  parseCompactSignature,\n} from './utils/signature/parseCompactSignature.js'\nexport {\n  /** @deprecated Use `ParseSignatureErrorType`. */\n  type ParseSignatureErrorType as HexToSignatureErrorType,\n  /** @deprecated Use `parseSignature`. */\n  parseSignature as hexToSignature,\n  type ParseSignatureErrorType,\n  parseSignature,\n} from './utils/signature/parseSignature.js'\nexport {\n  type RecoverAddressErrorType,\n  type RecoverAddressParameters,\n  type RecoverAddressReturnType,\n  recoverAddress,\n} from './utils/signature/recoverAddress.js'\nexport {\n  type RecoverMessageAddressErrorType,\n  type RecoverMessageAddressParameters,\n  type RecoverMessageAddressReturnType,\n  recoverMessageAddress,\n} from './utils/signature/recoverMessageAddress.js'\nexport {\n  type RecoverPublicKeyErrorType,\n  type RecoverPublicKeyParameters,\n  type RecoverPublicKeyReturnType,\n  recoverPublicKey,\n} from './utils/signature/recoverPublicKey.js'\nexport {\n  type RecoverTransactionAddressErrorType,\n  type RecoverTransactionAddressParameters,\n  type RecoverTransactionAddressReturnType,\n  recoverTransactionAddress,\n} from './utils/signature/recoverTransactionAddress.js'\nexport {\n  type RecoverTypedDataAddressErrorType,\n  type RecoverTypedDataAddressParameters,\n  type RecoverTypedDataAddressReturnType,\n  recoverTypedDataAddress,\n} from './utils/signature/recoverTypedDataAddress.js'\nexport {\n  type SignatureToCompactSignatureErrorType,\n  signatureToCompactSignature,\n} from './utils/signature/signatureToCompactSignature.js'\nexport {\n  /** @deprecated Use `SignatureToHexErrorType` instead. */\n  type SerializeCompactSignatureErrorType as CompactSignatureToHexErrorType,\n  /** @deprecated Use `serializeCompactSignature` instead. */\n  serializeCompactSignature as compactSignatureToHex,\n  type SerializeCompactSignatureErrorType,\n  serializeCompactSignature,\n} from './utils/signature/serializeCompactSignature.js'\nexport {\n  /** @deprecated Use `SignatureToHexErrorType` instead. */\n  type SerializeSignatureErrorType as SignatureToHexErrorType,\n  /** @deprecated Use `serializeSignature` instead. */\n  serializeSignature as signatureToHex,\n  type SerializeSignatureParameters,\n  type SerializeSignatureReturnType,\n  type SerializeSignatureErrorType,\n  serializeSignature,\n} from './utils/signature/serializeSignature.js'\nexport {\n  bytesToRlp,\n  type BytesToRlpErrorType,\n  hexToRlp,\n  type HexToRlpErrorType,\n  toRlp,\n  type ToRlpErrorType,\n  type ToRlpReturnType,\n} from './utils/encoding/toRlp.js'\nexport {\n  type VerifyHashErrorType,\n  type VerifyHashParameters,\n  type VerifyHashReturnType,\n  verifyHash,\n} from './utils/signature/verifyHash.js'\nexport {\n  type VerifyMessageErrorType,\n  type VerifyMessageParameters,\n  type VerifyMessageReturnType,\n  verifyMessage,\n} from './utils/signature/verifyMessage.js'\nexport {\n  type VerifyTypedDataErrorType,\n  type VerifyTypedDataParameters,\n  type VerifyTypedDataReturnType,\n  verifyTypedData,\n} from './utils/signature/verifyTypedData.js'\nexport {\n  type ParseErc6492SignatureErrorType,\n  type ParseErc6492SignatureParameters,\n  type ParseErc6492SignatureReturnType,\n  parseErc6492Signature,\n} from './utils/signature/parseErc6492Signature.js'\nexport {\n  type IsErc6492SignatureErrorType,\n  type IsErc6492SignatureParameters,\n  type IsErc6492SignatureReturnType,\n  isErc6492Signature,\n} from './utils/signature/isErc6492Signature.js'\nexport {\n  type SerializeErc6492SignatureErrorType,\n  type SerializeErc6492SignatureParameters,\n  type SerializeErc6492SignatureReturnType,\n  serializeErc6492Signature,\n} from './utils/signature/serializeErc6492Signature.js'\nexport {\n  type AssertRequestErrorType,\n  assertRequest,\n} from './utils/transaction/assertRequest.js'\nexport {\n  type AssertTransactionEIP1559ErrorType,\n  assertTransactionEIP1559,\n  type AssertTransactionEIP2930ErrorType,\n  assertTransactionEIP2930,\n  type AssertTransactionLegacyErrorType,\n  assertTransactionLegacy,\n} from './utils/transaction/assertTransaction.js'\nexport {\n  type BoolToBytesErrorType,\n  type BoolToBytesOpts,\n  boolToBytes,\n  type HexToBytesErrorType,\n  type HexToBytesOpts,\n  hexToBytes,\n  type NumberToBytesErrorType,\n  numberToBytes,\n  type StringToBytesErrorType,\n  type StringToBytesOpts,\n  stringToBytes,\n  type ToBytesErrorType,\n  type ToBytesParameters,\n  toBytes,\n} from './utils/encoding/toBytes.js'\nexport {\n  type BoolToHexErrorType,\n  type BoolToHexOpts,\n  boolToHex,\n  type BytesToHexErrorType,\n  type BytesToHexOpts,\n  bytesToHex,\n  type NumberToHexErrorType,\n  type NumberToHexOpts,\n  numberToHex,\n  type StringToHexErrorType,\n  type StringToHexOpts,\n  stringToHex,\n  type ToHexErrorType,\n  type ToHexParameters,\n  toHex,\n} from './utils/encoding/toHex.js'\nexport {\n  type BytesToBigIntErrorType,\n  type BytesToBigIntOpts,\n  bytesToBigInt,\n  type BytesToBoolErrorType,\n  type BytesToBoolOpts,\n  bytesToBool,\n  type BytesToNumberErrorType,\n  type BytesToNumberOpts,\n  bytesToNumber,\n  type BytesToStringErrorType,\n  type BytesToStringOpts,\n  bytesToString,\n  type FromBytesErrorType,\n  type FromBytesParameters,\n  fromBytes,\n} from './utils/encoding/fromBytes.js'\nexport {\n  type CcipRequestParameters,\n  type CcipRequestErrorType,\n  ccipRequest,\n  /** @deprecated Use `ccipRequest`. */\n  ccipRequest as ccipFetch,\n  type OffchainLookupErrorType,\n  offchainLookup,\n  offchainLookupAbiItem,\n  offchainLookupSignature,\n} from './utils/ccip.js'\nexport {\n  type BlobsToCommitmentsErrorType,\n  type BlobsToCommitmentsParameters,\n  type BlobsToCommitmentsReturnType,\n  blobsToCommitments,\n} from './utils/blob/blobsToCommitments.js'\nexport {\n  type CommitmentToVersionedHashErrorType,\n  type CommitmentToVersionedHashParameters,\n  type CommitmentToVersionedHashReturnType,\n  commitmentToVersionedHash,\n} from './utils/blob/commitmentToVersionedHash.js'\nexport {\n  type CommitmentsToVersionedHashesErrorType,\n  type CommitmentsToVersionedHashesParameters,\n  type CommitmentsToVersionedHashesReturnType,\n  commitmentsToVersionedHashes,\n} from './utils/blob/commitmentsToVersionedHashes.js'\nexport {\n  type SidecarsToVersionedHashesErrorType,\n  type SidecarsToVersionedHashesParameters,\n  type SidecarsToVersionedHashesReturnType,\n  sidecarsToVersionedHashes,\n} from './utils/blob/sidecarsToVersionedHashes.js'\nexport {\n  type blobsToProofsErrorType,\n  type blobsToProofsParameters,\n  type blobsToProofsReturnType,\n  blobsToProofs,\n} from './utils/blob/blobsToProofs.js'\nexport {\n  type FromBlobsErrorType,\n  type FromBlobsParameters,\n  type FromBlobsReturnType,\n  fromBlobs,\n} from './utils/blob/fromBlobs.js'\nexport {\n  type ToBlobSidecarsErrorType,\n  type ToBlobSidecarsParameters,\n  type ToBlobSidecarsReturnType,\n  toBlobSidecars,\n} from './utils/blob/toBlobSidecars.js'\nexport {\n  type ToBlobsErrorType,\n  type ToBlobsParameters,\n  type ToBlobsReturnType,\n  toBlobs,\n} from './utils/blob/toBlobs.js'\nexport {\n  type DefineKzgErrorType,\n  type DefineKzgParameters,\n  type DefineKzgReturnType,\n  defineKzg,\n} from './utils/kzg/defineKzg.js'\nexport {\n  type SetupKzgErrorType,\n  type SetupKzgParameters,\n  type SetupKzgReturnType,\n  setupKzg,\n} from './utils/kzg/setupKzg.js'\nexport {\n  type ConcatBytesErrorType,\n  type ConcatErrorType,\n  type ConcatHexErrorType,\n  type ConcatReturnType,\n  concat,\n  concatBytes,\n  concatHex,\n} from './utils/data/concat.js'\nexport {\n  type AssertCurrentChainErrorType,\n  type AssertCurrentChainParameters,\n  assertCurrentChain,\n} from './utils/chain/assertCurrentChain.js'\nexport { defineChain } from './utils/chain/defineChain.js'\nexport {\n  type ExtractChainErrorType,\n  type ExtractChainParameters,\n  type ExtractChainReturnType,\n  extractChain,\n} from './utils/chain/extractChain.js'\nexport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from './utils/chain/getChainContractAddress.js'\nexport {\n  type EncodePackedErrorType,\n  encodePacked,\n} from './utils/abi/encodePacked.js'\nexport {\n  type WithRetryErrorType,\n  withRetry,\n} from './utils/promise/withRetry.js'\nexport {\n  type WithTimeoutErrorType,\n  withTimeout,\n} from './utils/promise/withTimeout.js'\nexport {\n  type FormatEtherErrorType,\n  formatEther,\n} from './utils/unit/formatEther.js'\nexport {\n  type FormatGweiErrorType,\n  formatGwei,\n} from './utils/unit/formatGwei.js'\nexport {\n  type FormatUnitsErrorType,\n  formatUnits,\n} from './utils/unit/formatUnits.js'\nexport {\n  type FromHexErrorType,\n  fromHex,\n  type HexToBigIntErrorType,\n  hexToBigInt,\n  type HexToBoolErrorType,\n  hexToBool,\n  type HexToNumberErrorType,\n  hexToNumber,\n  type HexToStringErrorType,\n  hexToString,\n} from './utils/encoding/fromHex.js'\nexport {\n  type FromRlpErrorType,\n  type FromRlpReturnType,\n  fromRlp,\n} from './utils/encoding/fromRlp.js'\nexport {\n  type ChecksumAddressErrorType,\n  type GetAddressErrorType,\n  checksumAddress,\n  getAddress,\n} from './utils/address/getAddress.js'\nexport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from './utils/errors/getContractError.js'\nexport {\n  type ToEventSelectorErrorType,\n  toEventSelector,\n  /** @deprecated use `ToEventSelectorErrorType`. */\n  type ToEventSelectorErrorType as GetEventSelectorErrorType,\n  /** @deprecated use `toEventSelector`. */\n  toEventSelector as getEventSelector,\n} from './utils/hash/toEventSelector.js'\nexport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n  /** @deprecated use `ToFunctionSelectorErrorType`. */\n  type ToFunctionSelectorErrorType as GetFunctionSelectorErrorType,\n  /** @deprecated use `toFunctionSelector`. */\n  toFunctionSelector as getFunctionSelector,\n} from './utils/hash/toFunctionSelector.js'\nexport {\n  type ToEventSignatureErrorType,\n  toEventSignature,\n  /** @deprecated use `ToEventSignatureErrorType`. */\n  type ToEventSignatureErrorType as GetEventSignatureErrorType,\n  /** @deprecated use `toEventSignature`. */\n  toEventSignature as getEventSignature,\n} from './utils/hash/toEventSignature.js'\nexport {\n  type ToFunctionSignatureErrorType,\n  toFunctionSignature,\n  /** @deprecated use `ToFunctionSignatureErrorType`. */\n  type ToFunctionSignatureErrorType as GetFunctionSignatureErrorType,\n  /** @deprecated use `toFunctionSignature`. */\n  toFunctionSignature as getFunctionSignature,\n} from './utils/hash/toFunctionSignature.js'\nexport {\n  type ToEventHashErrorType,\n  toEventHash,\n} from './utils/hash/toEventHash.js'\nexport {\n  type ToFunctionHashErrorType,\n  toFunctionHash,\n} from './utils/hash/toFunctionHash.js'\nexport {\n  type HashMessageErrorType,\n  hashMessage,\n} from './utils/signature/hashMessage.js'\nexport {\n  type ToPrefixedMessageErrorType,\n  toPrefixedMessage,\n} from './utils/signature/toPrefixedMessage.js'\nexport {\n  type IsAddressOptions,\n  type IsAddressErrorType,\n  isAddress,\n} from './utils/address/isAddress.js'\nexport {\n  type IsAddressEqualReturnType,\n  type IsAddressEqualErrorType,\n  isAddressEqual,\n} from './utils/address/isAddressEqual.js'\nexport { type IsBytesErrorType, isBytes } from './utils/data/isBytes.js'\nexport { type IsHashErrorType, isHash } from './utils/hash/isHash.js'\nexport { type IsHexErrorType, isHex } from './utils/data/isHex.js'\nexport {\n  type Keccak256Hash,\n  type Keccak256ErrorType,\n  keccak256,\n} from './utils/hash/keccak256.js'\nexport {\n  type Sha256Hash,\n  type Sha256ErrorType,\n  sha256,\n} from './utils/hash/sha256.js'\nexport {\n  type Ripemd160Hash,\n  type Ripemd160ErrorType,\n  ripemd160,\n} from './utils/hash/ripemd160.js'\nexport {\n  type PadBytesErrorType,\n  type PadErrorType,\n  type PadHexErrorType,\n  type PadReturnType,\n  pad,\n  padBytes,\n  padHex,\n} from './utils/data/pad.js'\nexport {\n  type ParseEtherErrorType,\n  parseEther,\n} from './utils/unit/parseEther.js'\nexport { type ParseGweiErrorType, parseGwei } from './utils/unit/parseGwei.js'\nexport {\n  type ParseTransactionErrorType,\n  type ParseTransactionReturnType,\n  parseTransaction,\n} from './utils/transaction/parseTransaction.js'\nexport {\n  type ParseUnitsErrorType,\n  parseUnits,\n} from './utils/unit/parseUnits.js'\nexport {\n  type SerializeAccessListErrorType,\n  serializeAccessList,\n} from './utils/transaction/serializeAccessList.js'\nexport {\n  serializeTransaction,\n  type SerializeTransactionErrorType,\n  type SerializedTransactionReturnType,\n  type SerializeTransactionFn,\n} from './utils/transaction/serializeTransaction.js'\nexport { type SizeErrorType, size } from './utils/data/size.js'\nexport {\n  type SliceBytesErrorType,\n  type SliceErrorType,\n  type SliceHexErrorType,\n  slice,\n  sliceBytes,\n  sliceHex,\n} from './utils/data/slice.js'\nexport { type StringifyErrorType, stringify } from './utils/stringify.js'\nexport {\n  type TrimErrorType,\n  type TrimReturnType,\n  trim,\n} from './utils/data/trim.js'\nexport {\n  type DomainSeparatorErrorType,\n  type GetTypesForEIP712DomainErrorType,\n  type SerializeTypedDataErrorType,\n  type ValidateTypedDataErrorType,\n  serializeTypedData,\n  validateTypedData,\n  domainSeparator,\n  getTypesForEIP712Domain,\n} from './utils/typedData.js'\nexport {\n  type CreateNonceManagerParameters,\n  type NonceManager,\n  type NonceManagerSource,\n  createNonceManager,\n  nonceManager,\n} from './utils/nonceManager.js'\nexport type {\n  RpcEstimateUserOperationGasReturnType,\n  RpcGetUserOperationByHashReturnType,\n  RpcUserOperation,\n  RpcUserOperationReceipt,\n  RpcUserOperationRequest,\n} from './account-abstraction/types/rpc.js'\n"],"names":[],"mappings":"AAAA,gEAAgE","ignoreList":[0]}},
    {"offset": {"line": 5504, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6085, "column": 0}, "map": {"version":3,"file":"contracts.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/op-stack/contracts.ts"],"sourcesContent":["import type { Chain } from '../types/chain.js'\n\n/**\n * Predeploy contracts for OP Stack.\n * @see https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md\n */\nexport const contracts = {\n  gasPriceOracle: { address: '0x420000000000000000000000000000000000000F' },\n  l1Block: { address: '0x4200000000000000000000000000000000000015' },\n  l2CrossDomainMessenger: {\n    address: '0x4200000000000000000000000000000000000007',\n  },\n  l2Erc721Bridge: { address: '0x4200000000000000000000000000000000000014' },\n  l2StandardBridge: { address: '0x4200000000000000000000000000000000000010' },\n  l2ToL1MessagePasser: {\n    address: '0x4200000000000000000000000000000000000016',\n  },\n} as const satisfies Chain['contracts']\n"],"names":[],"mappings":"AAEA;;;GAGG;;;AACI,MAAM,SAAS,GAAG;IACvB,cAAc,EAAE;QAAE,OAAO,EAAE,4CAA4C;IAAA,CAAE;IACzE,OAAO,EAAE;QAAE,OAAO,EAAE,4CAA4C;IAAA,CAAE;IAClE,sBAAsB,EAAE;QACtB,OAAO,EAAE,4CAA4C;KACtD;IACD,cAAc,EAAE;QAAE,OAAO,EAAE,4CAA4C;IAAA,CAAE;IACzE,gBAAgB,EAAE;QAAE,OAAO,EAAE,4CAA4C;IAAA,CAAE;IAC3E,mBAAmB,EAAE;QACnB,OAAO,EAAE,4CAA4C;KACtD;CACoC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 6111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6117, "column": 0}, "map": {"version":3,"file":"formatters.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/op-stack/formatters.ts"],"sourcesContent":["import type { ChainFormatters } from '../types/chain.js'\nimport type { RpcTransaction } from '../types/rpc.js'\nimport { hexToBigInt } from '../utils/encoding/fromHex.js'\nimport { defineBlock } from '../utils/formatters/block.js'\nimport {\n  defineTransaction,\n  formatTransaction,\n} from '../utils/formatters/transaction.js'\nimport { defineTransactionReceipt } from '../utils/formatters/transactionReceipt.js'\nimport type { OpStackBlock, OpStackRpcBlock } from './types/block.js'\nimport type {\n  OpStackRpcTransaction,\n  OpStackRpcTransactionReceipt,\n  OpStackTransaction,\n  OpStackTransactionReceipt,\n} from './types/transaction.js'\n\nexport const formatters = {\n  block: /*#__PURE__*/ defineBlock({\n    format(args: OpStackRpcBlock): OpStackBlock {\n      const transactions = args.transactions?.map((transaction) => {\n        if (typeof transaction === 'string') return transaction\n        const formatted = formatTransaction(\n          transaction as RpcTransaction,\n        ) as OpStackTransaction\n        if (formatted.typeHex === '0x7e') {\n          formatted.isSystemTx = transaction.isSystemTx\n          formatted.mint = transaction.mint\n            ? hexToBigInt(transaction.mint)\n            : undefined\n          formatted.sourceHash = transaction.sourceHash\n          formatted.type = 'deposit'\n        }\n        return formatted\n      })\n      return {\n        transactions,\n        stateRoot: args.stateRoot,\n      } as OpStackBlock\n    },\n  }),\n  transaction: /*#__PURE__*/ defineTransaction({\n    format(args: OpStackRpcTransaction): OpStackTransaction {\n      const transaction = {} as OpStackTransaction\n      if (args.type === '0x7e') {\n        transaction.isSystemTx = args.isSystemTx\n        transaction.mint = args.mint ? hexToBigInt(args.mint) : undefined\n        transaction.sourceHash = args.sourceHash\n        transaction.type = 'deposit'\n      }\n      return transaction\n    },\n  }),\n  transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n    format(args: OpStackRpcTransactionReceipt): OpStackTransactionReceipt {\n      return {\n        l1GasPrice: args.l1GasPrice ? hexToBigInt(args.l1GasPrice) : null,\n        l1GasUsed: args.l1GasUsed ? hexToBigInt(args.l1GasUsed) : null,\n        l1Fee: args.l1Fee ? hexToBigInt(args.l1Fee) : null,\n        l1FeeScalar: args.l1FeeScalar ? Number(args.l1FeeScalar) : null,\n      } as OpStackTransactionReceipt\n    },\n  }),\n} as const satisfies ChainFormatters\n"],"names":[],"mappings":";;;AAGA,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAA;AAC1D,OAAO,EACL,iBAAiB,EACjB,iBAAiB,GAClB,MAAM,oCAAoC,CAAA;AAL3C,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAA;AAM1D,OAAO,EAAE,wBAAwB,EAAE,MAAM,2CAA2C,CAAA;;;;;AAS7E,MAAM,UAAU,GAAG;IACxB,KAAK,EAAE,WAAA,EAAa,kKAAC,cAAA,AAAW,EAAC;QAC/B,MAAM,EAAC,IAAqB;YAC1B,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE;gBAC1D,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE,OAAO,WAAW,CAAA;gBACvD,MAAM,SAAS,0KAAG,oBAAA,AAAiB,EACjC,WAA6B,CACR,CAAA;gBACvB,IAAI,SAAS,CAAC,OAAO,KAAK,MAAM,EAAE,CAAC;oBACjC,SAAS,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAA;oBAC7C,SAAS,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,oKAC7B,cAAW,AAAX,EAAY,WAAW,CAAC,IAAI,CAAC,GAC7B,SAAS,CAAA;oBACb,SAAS,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAA;oBAC7C,SAAS,CAAC,IAAI,GAAG,SAAS,CAAA;gBAC5B,CAAC;gBACD,OAAO,SAAS,CAAA;YAClB,CAAC,CAAC,CAAA;YACF,OAAO;gBACL,YAAY;gBACZ,SAAS,EAAE,IAAI,CAAC,SAAS;aACV,CAAA;QACnB,CAAC;KACF,CAAC;IACF,WAAW,EAAE,WAAA,EAAa,wKAAC,oBAAA,AAAiB,EAAC;QAC3C,MAAM,EAAC,IAA2B;YAChC,MAAM,WAAW,GAAG,CAAA,CAAwB,CAAA;YAC5C,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE,CAAC;gBACzB,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAA;gBACxC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,kKAAC,cAAA,AAAW,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;gBACjE,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAA;gBACxC,WAAW,CAAC,IAAI,GAAG,SAAS,CAAA;YAC9B,CAAC;YACD,OAAO,WAAW,CAAA;QACpB,CAAC;KACF,CAAC;IACF,kBAAkB,EAAE,WAAA,EAAa,+KAAC,2BAAA,AAAwB,EAAC;QACzD,MAAM,EAAC,IAAkC;YACvC,OAAO;gBACL,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,kKAAC,cAAA,AAAW,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI;gBACjE,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,kKAAC,cAAA,AAAW,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI;gBAC9D,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,kKAAC,cAAA,AAAW,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;gBAClD,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;aACnC,CAAA;QAChC,CAAC;KACF,CAAC;CACgC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 6171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6177, "column": 0}, "map": {"version":3,"file":"serializers.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/op-stack/serializers.ts"],"sourcesContent":["import { InvalidAddressError } from '../errors/address.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ChainSerializers } from '../types/chain.js'\nimport type { Hex, Signature } from '../types/misc.js'\nimport type { TransactionSerializable } from '../types/transaction.js'\nimport type { RequiredBy } from '../types/utils.js'\nimport { isAddress } from '../utils/address/isAddress.js'\nimport { concatHex } from '../utils/data/concat.js'\nimport { toHex } from '../utils/encoding/toHex.js'\nimport { toRlp } from '../utils/encoding/toRlp.js'\nimport {\n  type SerializeTransactionErrorType as SerializeTransactionErrorType_,\n  serializeTransaction as serializeTransaction_,\n} from '../utils/transaction/serializeTransaction.js'\nimport type {\n  OpStackTransactionSerializable,\n  TransactionSerializableDeposit,\n  TransactionSerializedDeposit,\n} from './types/transaction.js'\n\nexport type SerializeTransactionReturnType = ReturnType<\n  typeof serializeTransaction\n>\n\nexport type SerializeTransactionErrorType =\n  | SerializeTransactionErrorType_\n  | ErrorType\n\nexport function serializeTransaction(\n  transaction: OpStackTransactionSerializable,\n  signature?: Signature,\n) {\n  if (isDeposit(transaction)) return serializeTransactionDeposit(transaction)\n  return serializeTransaction_(\n    transaction as TransactionSerializable,\n    signature,\n  )\n}\n\nexport const serializers = {\n  transaction: serializeTransaction,\n} as const satisfies ChainSerializers\n\n//////////////////////////////////////////////////////////////////////////////\n// Serializers\n\nexport type SerializeTransactionDepositReturnType = TransactionSerializedDeposit\n\nfunction serializeTransactionDeposit(\n  transaction: TransactionSerializableDeposit,\n): SerializeTransactionDepositReturnType {\n  assertTransactionDeposit(transaction)\n\n  const { sourceHash, data, from, gas, isSystemTx, mint, to, value } =\n    transaction\n\n  const serializedTransaction: Hex[] = [\n    sourceHash,\n    from,\n    to ?? '0x',\n    mint ? toHex(mint) : '0x',\n    value ? toHex(value) : '0x',\n    gas ? toHex(gas) : '0x',\n    isSystemTx ? '0x1' : '0x',\n    data ?? '0x',\n  ]\n\n  return concatHex([\n    '0x7e',\n    toRlp(serializedTransaction),\n  ]) as SerializeTransactionDepositReturnType\n}\n\nfunction isDeposit(\n  transaction: OpStackTransactionSerializable,\n): transaction is RequiredBy<TransactionSerializableDeposit, 'type'> {\n  if (transaction.type === 'deposit') return true\n  if (typeof transaction.sourceHash !== 'undefined') return true\n  return false\n}\n\nexport function assertTransactionDeposit(\n  transaction: TransactionSerializableDeposit,\n) {\n  const { from, to } = transaction\n  if (from && !isAddress(from)) throw new InvalidAddressError({ address: from })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n}\n"],"names":[],"mappings":";;;;;AAUA,OAAO,EAEL,oBAAoB,IAAI,qBAAqB,GAC9C,MAAM,8CAA8C,CAAA;AALrD,OAAO,EAAE,KAAK,EAAE,MAAM,4BAA4B,CAAA;AADlD,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AAEnD,OAAO,EAAE,KAAK,EAAE,MAAM,4BAA4B,CAAA;AAHlD,OAAO,EAAE,SAAS,EAAE,MAAM,+BAA+B,CAAA;AANzD,OAAO,EAAE,mBAAmB,EAAE,MAAM,sBAAsB,CAAA;;;;;;;AA4BpD,SAAU,oBAAoB,CAClC,WAA2C,EAC3C,SAAqB;IAErB,IAAI,SAAS,CAAC,WAAW,CAAC,EAAE,OAAO,2BAA2B,CAAC,WAAW,CAAC,CAAA;IAC3E,wLAAO,uBAAqB,AAArB,EACL,WAAsC,EACtC,SAAS,CACV,CAAA;AACH,CAAC;AAEM,MAAM,WAAW,GAAG;IACzB,WAAW,EAAE,oBAAoB;CACE,CAAA;AAOrC,SAAS,2BAA2B,CAClC,WAA2C;IAE3C,wBAAwB,CAAC,WAAW,CAAC,CAAA;IAErC,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,GAChE,WAAW,CAAA;IAEb,MAAM,qBAAqB,GAAU;QACnC,UAAU;QACV,IAAI;QACJ,EAAE,IAAI,IAAI;QACV,IAAI,CAAC,CAAC,gKAAC,QAAA,AAAK,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;QACzB,KAAK,CAAC,CAAC,gKAAC,QAAA,AAAK,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;QAC3B,GAAG,CAAC,CAAC,gKAAC,QAAK,AAAL,EAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI;QACvB,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;QACzB,IAAI,IAAI,IAAI;KACb,CAAA;IAED,mKAAO,YAAA,AAAS,EAAC;QACf,MAAM;QACN,uKAAA,AAAK,EAAC,qBAAqB,CAAC;KAC7B,CAA0C,CAAA;AAC7C,CAAC;AAED,SAAS,SAAS,CAChB,WAA2C;IAE3C,IAAI,WAAW,CAAC,IAAI,KAAK,SAAS,EAAE,OAAO,IAAI,CAAA;IAC/C,IAAI,OAAO,WAAW,CAAC,UAAU,KAAK,WAAW,EAAE,OAAO,IAAI,CAAA;IAC9D,OAAO,KAAK,CAAA;AACd,CAAC;AAEK,SAAU,wBAAwB,CACtC,WAA2C;IAE3C,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,WAAW,CAAA;IAChC,IAAI,IAAI,IAAI,EAAC,6KAAA,AAAS,EAAC,IAAI,CAAC,EAAE,MAAM,sJAAI,sBAAmB,CAAC;QAAE,OAAO,EAAE,IAAI;IAAA,CAAE,CAAC,CAAA;IAC9E,IAAI,EAAE,IAAI,mKAAC,YAAA,AAAS,EAAC,EAAE,CAAC,EAAE,MAAM,sJAAI,sBAAmB,CAAC;QAAE,OAAO,EAAE,EAAE;IAAA,CAAE,CAAC,CAAA;AAC1E,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6233, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6239, "column": 0}, "map": {"version":3,"file":"chainConfig.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/op-stack/chainConfig.ts"],"sourcesContent":["import { contracts } from './contracts.js'\nimport { formatters } from './formatters.js'\nimport { serializers } from './serializers.js'\n\nexport const chainConfig = {\n  contracts,\n  formatters,\n  serializers,\n} as const\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAA;AAC1C,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAA;AAC5C,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAA;;;;AAEvC,MAAM,WAAW,GAAG;wKACzB,YAAS;0KACT,aAAU;4KACV,cAAW;CACH,CAAA","ignoreList":[0]}},
    {"offset": {"line": 6253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6259, "column": 0}, "map": {"version":3,"file":"baseSepolia.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/chains/definitions/baseSepolia.ts"],"sourcesContent":["import { chainConfig } from '../../op-stack/chainConfig.js'\nimport { defineChain } from '../../utils/chain/defineChain.js'\n\nconst sourceId = 11_155_111 // sepolia\n\nexport const baseSepolia = /*#__PURE__*/ defineChain({\n  ...chainConfig,\n  id: 84532,\n  network: 'base-sepolia',\n  name: 'Base Sepolia',\n  nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    default: {\n      http: ['https://sepolia.base.org'],\n    },\n  },\n  blockExplorers: {\n    default: {\n      name: 'Basescan',\n      url: 'https://sepolia.basescan.org',\n      apiUrl: 'https://api-sepolia.basescan.org/api',\n    },\n  },\n  contracts: {\n    ...chainConfig.contracts,\n    disputeGameFactory: {\n      [sourceId]: {\n        address: '0xd6E6dBf4F7EA0ac412fD8b65ED297e64BB7a06E1',\n      },\n    },\n    l2OutputOracle: {\n      [sourceId]: {\n        address: '0x84457ca9D0163FbC4bbfe4Dfbb20ba46e48DF254',\n      },\n    },\n    portal: {\n      [sourceId]: {\n        address: '0x49f53e41452c74589e85ca1677426ba426459e85',\n        blockCreated: 4446677,\n      },\n    },\n    l1StandardBridge: {\n      [sourceId]: {\n        address: '0xfd0Bf71F60660E2f608ed56e1659C450eB113120',\n        blockCreated: 4446677,\n      },\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 1059647,\n    },\n  },\n  testnet: true,\n  sourceId,\n})\n"],"names":[],"mappings":";;;AACA,OAAO,EAAE,WAAW,EAAE,MAAM,kCAAkC,CAAA;AAD9D,OAAO,EAAE,WAAW,EAAE,MAAM,+BAA+B,CAAA;;;AAG3D,MAAM,QAAQ,GAAG,UAAU,CAAA,CAAC,UAAU;AAE/B,MAAM,WAAW,GAAG,WAAA,EAAa,mKAAC,cAAA,AAAW,EAAC;IACnD,GAAG,yKAAW;IACd,EAAE,EAAE,KAAK;IACT,OAAO,EAAE,cAAc;IACvB,IAAI,EAAE,cAAc;IACpB,cAAc,EAAE;QAAE,IAAI,EAAE,eAAe;QAAE,MAAM,EAAE,KAAK;QAAE,QAAQ,EAAE,EAAE;IAAA,CAAE;IACtE,OAAO,EAAE;QACP,OAAO,EAAE;YACP,IAAI,EAAE;gBAAC,0BAA0B;aAAC;SACnC;KACF;IACD,cAAc,EAAE;QACd,OAAO,EAAE;YACP,IAAI,EAAE,UAAU;YAChB,GAAG,EAAE,8BAA8B;YACnC,MAAM,EAAE,sCAAsC;SAC/C;KACF;IACD,SAAS,EAAE;QACT,8JAAG,cAAW,CAAC,SAAS;QACxB,kBAAkB,EAAE;YAClB,CAAC,QAAQ,CAAC,EAAE;gBACV,OAAO,EAAE,4CAA4C;aACtD;SACF;QACD,cAAc,EAAE;YACd,CAAC,QAAQ,CAAC,EAAE;gBACV,OAAO,EAAE,4CAA4C;aACtD;SACF;QACD,MAAM,EAAE;YACN,CAAC,QAAQ,CAAC,EAAE;gBACV,OAAO,EAAE,4CAA4C;gBACrD,YAAY,EAAE,OAAO;aACtB;SACF;QACD,gBAAgB,EAAE;YAChB,CAAC,QAAQ,CAAC,EAAE;gBACV,OAAO,EAAE,4CAA4C;gBACrD,YAAY,EAAE,OAAO;aACtB;SACF;QACD,UAAU,EAAE;YACV,OAAO,EAAE,4CAA4C;YACrD,YAAY,EAAE,OAAO;SACtB;KACF;IACD,OAAO,EAAE,IAAI;IACb,QAAQ;CACT,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 6323, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}