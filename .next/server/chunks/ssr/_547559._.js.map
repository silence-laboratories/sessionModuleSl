{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/src/app/page.tsx"],"sourcesContent":["// \"use client\";\n// import { useState } from \"react\";\n// import {\n//   createSmartAccountClient,\n//   toNexusAccount,\n//   smartSessionCreateActions,\n//   toSmartSessionsValidator,\n//   smartSessionUseActions,\n//   stringify,\n//   parse,\n//   SmartSessionMode,\n//   CreateSessionDataParams,\n// } from \"@biconomy/abstractjs\";\n// import { baseSepolia } from \"viem/chains\";\n// import { http, encodeFunctionData, Abi } from \"viem\";\n// import { createViemAccount, generateCryptographicKey, createSignerForSign } from \"../../lib/sl\";\n// import { privateKeyToAccount } from \"viem/accounts\";\n\n// const CounterAbi = [\n//   {\n//     \"anonymous\": false,\n//     \"inputs\": [\n//       {\n//         \"indexed\": false,\n//         \"internalType\": \"uint256\",\n//         \"name\": \"newCounter\",\n//         \"type\": \"uint256\"\n//       }\n//     ],\n//     \"name\": \"Incremented\",\n//     \"type\": \"event\"\n//   },\n//   {\n//     \"inputs\": [],\n//     \"name\": \"counter\",\n//     \"outputs\": [\n//       {\n//         \"internalType\": \"uint256\",\n//         \"name\": \"\",\n//         \"type\": \"uint256\"\n//       }\n//     ],\n//     \"stateMutability\": \"view\",\n//     \"type\": \"function\"\n//   },\n//   {\n//     \"inputs\": [],\n//     \"name\": \"increment\",\n//     \"outputs\": [],\n//     \"stateMutability\": \"nonpayable\",\n//     \"type\": \"function\"\n//   }\n// ] as const satisfies Abi;\n\n// export default function SessionPage() {\n//   const [mpcSigner, setMpcSigner] = useState<any>(null);\n//   const [sessionData, setSessionData] = useState<string | null>(null);\n//   const [keyConfig, setKeyConfig] = useState<any>(null);\n//   const [loading, setLoading] = useState<string>('');\n//   const [txHash, setTxHash] = useState<string>('');\n//   const [elizaAgents, setElizaAgents] = useState<any[]>([]);\n//   const [elizaError, setElizaError] = useState<string>(\"\");\n\n//   // === Existing Functions === (no changes here)\n//   const initializeMPCSigner = async () => { /* ...same as before... */ };\n//   const createSmartSession = async () => { /* ...same as before... */ };\n//   const executeTransaction = async () => { /* ...same as before... */ };\n//   const downloadSessionFile = () => { /* ...same as before... */ };\n\n//   // === New: Test Eliza Backend ===\n//   const fetchElizaAgents = async () => {\n//     setElizaError(\"\");\n//     setElizaAgents([]);\n  \n//     try {\n//       const res = await fetch(\"http://localhost:3000/agents\", {\n//         method: \"GET\",\n//         headers: {\n//           Accept: \"application/json\",\n//         },\n//       });\n  \n//       if (!res.ok) throw new Error(\"Failed to fetch agents\");\n  \n//       const data = await res.json();\n//       console.log(\"Eliza Response:\", data);\n  \n//       // âœ… Fix here: the actual array is in data.agents\n//       setElizaAgents(data.agents || []);\n//     } catch (err: any) {\n//       console.error(\"Eliza fetch failed:\", err);\n//       setElizaError(err.message || \"Unknown error\");\n//     }\n//   };\n  \n\n//   return (\n//     <div className=\"min-h-screen p-8\">\n//       <h1 className=\"text-3xl mb-8\">Session Generator</h1>\n//       <div className=\"space-y-4 max-w-2xl\">\n//         <button onClick={initializeMPCSigner} className=\"btn-primary\" disabled={!!mpcSigner}>\n//           {mpcSigner ? 'MPC Signer Ready' : 'Initialize MPC Signer'}\n//         </button>\n\n//         {mpcSigner && (\n//           <button onClick={createSmartSession} className=\"btn-secondary\" disabled={!!sessionData}>\n//             {sessionData ? 'Session Created' : 'Create Smart Session'}\n//           </button>\n//         )}\n\n//         {sessionData && (\n//           <>\n//             <button onClick={executeTransaction} className=\"btn-success\">\n//               Execute Transaction\n//             </button>\n//             <button onClick={downloadSessionFile} className=\"btn-download\">\n//               Download Session Info\n//             </button>\n//             <p className=\"text-sm text-gray-500\">Session ready for Eliza OS execution</p>\n//           </>\n//         )}\n\n//         {loading && <p className=\"text-blue-500\">{loading}</p>}\n//         {txHash && (\n//           <div className=\"mt-4 p-4 bg-gray-100 rounded\">\n//             <p className=\"font-mono break-words\">Transaction Hash: {txHash}</p>\n//           </div>\n//         )}\n\n//         <div className=\"mt-8 space-y-2\">\n//           {mpcSigner && <p>MPC Signer Address: {mpcSigner.address}</p>}\n//         </div>\n\n//         {/* === Eliza Backend Test Section === */}\n//        {/* === Eliza Message Sending Section === */}\n// <div className=\"mt-12\">\n//   <h2 className=\"text-xl font-bold mb-2\">ðŸ’¬ Send Message to Eliza</h2>\n//   <button\n//     onClick={async () => {\n//       try {\n//         const agentId = \"aa0d6f50-b80b-0dfa-811b-1f8750ee6278\"; // Dobby's ID\n//         const formData = new FormData();\n//         formData.append(\"text\", \"execute transaction\");\n//         formData.append(\"user\", \"user\");\n\n//         const response = await fetch(`http://localhost:3000/${agentId}/message`, {\n//           method: \"POST\",\n//           body: formData,\n//         });\n\n//         const data = await response.json();\n//         console.log(\"Response from Eliza:\", data);\n//         alert(\"Message sent successfully. Check console.\");\n//       } catch (err) {\n//         console.error(\"Failed to send message to Eliza:\", err);\n//         alert(\"Failed to send message.\");\n//       }\n//     }}\n//     className=\"btn-primary\"\n//   >\n//     Send \"execute transaction\"\n//   </button>\n// </div>\n\n//       </div>\n//     </div>\n//   );\n// }\n"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,oCAAoC;AACpC,WAAW;AACX,8BAA8B;AAC9B,oBAAoB;AACpB,+BAA+B;AAC/B,8BAA8B;AAC9B,4BAA4B;AAC5B,eAAe;AACf,WAAW;AACX,sBAAsB;AACtB,6BAA6B;AAC7B,iCAAiC;AACjC,6CAA6C;AAC7C,wDAAwD;AACxD,mGAAmG;AACnG,uDAAuD;AAEvD,uBAAuB;AACvB,MAAM;AACN,0BAA0B;AAC1B,kBAAkB;AAClB,UAAU;AACV,4BAA4B;AAC5B,qCAAqC;AACrC,gCAAgC;AAChC,4BAA4B;AAC5B,UAAU;AACV,SAAS;AACT,6BAA6B;AAC7B,sBAAsB;AACtB,OAAO;AACP,MAAM;AACN,oBAAoB;AACpB,yBAAyB;AACzB,mBAAmB;AACnB,UAAU;AACV,qCAAqC;AACrC,sBAAsB;AACtB,4BAA4B;AAC5B,UAAU;AACV,SAAS;AACT,iCAAiC;AACjC,yBAAyB;AACzB,OAAO;AACP,MAAM;AACN,oBAAoB;AACpB,2BAA2B;AAC3B,qBAAqB;AACrB,uCAAuC;AACvC,yBAAyB;AACzB,MAAM;AACN,4BAA4B;AAE5B,0CAA0C;AAC1C,2DAA2D;AAC3D,yEAAyE;AACzE,2DAA2D;AAC3D,wDAAwD;AACxD,sDAAsD;AACtD,+DAA+D;AAC/D,8DAA8D;AAE9D,oDAAoD;AACpD,4EAA4E;AAC5E,2EAA2E;AAC3E,2EAA2E;AAC3E,sEAAsE;AAEtE,uCAAuC;AACvC,2CAA2C;AAC3C,yBAAyB;AACzB,0BAA0B;AAE1B,YAAY;AACZ,kEAAkE;AAClE,yBAAyB;AACzB,qBAAqB;AACrB,wCAAwC;AACxC,aAAa;AACb,YAAY;AAEZ,gEAAgE;AAEhE,uCAAuC;AACvC,8CAA8C;AAE9C,0DAA0D;AAC1D,2CAA2C;AAC3C,2BAA2B;AAC3B,mDAAmD;AACnD,uDAAuD;AACvD,QAAQ;AACR,OAAO;AAGP,aAAa;AACb,yCAAyC;AACzC,6DAA6D;AAC7D,8CAA8C;AAC9C,gGAAgG;AAChG,uEAAuE;AACvE,oBAAoB;AAEpB,0BAA0B;AAC1B,qGAAqG;AACrG,yEAAyE;AACzE,sBAAsB;AACtB,aAAa;AAEb,4BAA4B;AAC5B,eAAe;AACf,4EAA4E;AAC5E,oCAAoC;AACpC,wBAAwB;AACxB,8EAA8E;AAC9E,sCAAsC;AACtC,wBAAwB;AACxB,4FAA4F;AAC5F,gBAAgB;AAChB,aAAa;AAEb,kEAAkE;AAClE,uBAAuB;AACvB,2DAA2D;AAC3D,kFAAkF;AAClF,mBAAmB;AACnB,aAAa;AAEb,2CAA2C;AAC3C,0EAA0E;AAC1E,iBAAiB;AAEjB,qDAAqD;AACrD,uDAAuD;AACvD,0BAA0B;AAC1B,yEAAyE;AACzE,YAAY;AACZ,6BAA6B;AAC7B,cAAc;AACd,gFAAgF;AAChF,2CAA2C;AAC3C,0DAA0D;AAC1D,2CAA2C;AAE3C,qFAAqF;AACrF,4BAA4B;AAC5B,4BAA4B;AAC5B,cAAc;AAEd,8CAA8C;AAC9C,qDAAqD;AACrD,8DAA8D;AAC9D,wBAAwB;AACxB,kEAAkE;AAClE,4CAA4C;AAC5C,UAAU;AACV,SAAS;AACT,8BAA8B;AAC9B,MAAM;AACN,iCAAiC;AACjC,cAAc;AACd,SAAS;AAET,eAAe;AACf,aAAa;AACb,OAAO;AACP,IAAI"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;iBACVC,MAAMZ,UAAUa,QAAQ;sBACxBC,IAAAA,CAAM,CAAA;gBAAA,QAAA;oBAAA,IAAA;oBAAA;iBAAA;;eACNC,UAAU;;SACV,2CAA2C;cAC3CC,IAAAA;YAAAA,GAAY,GAAA;iBACZC,MAAAA,IAAU,IAAA;wBAAA;4BACVC,KAAAA,CAAAA,GAAAA,2KAAAA,CAAAA,KAAU,EAAE,eAAA,EAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACd,OAAA,GAAA,iTAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACAC,MAAU,CAAA,YAAA,CAAA;;qBACRC,YAAYnB;aACd;QACF,CAAE;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0]}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}