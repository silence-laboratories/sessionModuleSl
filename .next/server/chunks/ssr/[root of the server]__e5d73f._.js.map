{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/src/app/page.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { privateKeyToAccount, toHex, getFunctionSelector, encodeFunctionData } from 'viem';\nimport { createSmartAccountClient, toNexusAccount, smartSessionCreateActions, toSmartSessionsValidator, smartSessionUseActions } from '@biconomy/abstractjs';\nimport { baseSepolia } from 'viem/chains';\nimport { http } from 'viem';\nimport { createSilenceLabsSigner, createViemAccount } from './sl';\nimport { CounterAbi } from './CounterAbi';\n\nconst bundlerUrl = \"https://bundler.biconomy.io/api/v3/84532/nJPK7B3ru.dd7f7861-190d-41bd-af80-6877f74b8f44\";\n\nconst Page = () => {\n    const [logs, setLogs] = useState<string[]>([]);\n\n    const ownerPrivateKey = \"PRIVATE_KEY\"; // Replace with actual private key\n    const contractAddress = \"0x1234567890123456789012345678901234567890\"; // Replace with actual contract address\n    const functionSelector = getFunctionSelector({ abi: CounterAbi, functionName: 'incrementNumber' });\n\n    const handleStart = async () => {\n        try {\n            // Step 1: Set up owner account and Nexus client\n            const account = privateKeyToAccount(`0x${ownerPrivateKey}`);\n            const nexusClient = createSmartAccountClient({\n                account: await toNexusAccount({\n                    signer: account,\n                    chain: baseSepolia,\n                    transport: http(),\n                }),\n                transport: http(bundlerUrl),\n            });\n            setLogs(prev => [...prev, \"Owner account and Nexus client set up.\"]);\n\n            // Step 2: Create and install smart sessions module\n            const sessionsModule = toSmartSessionsValidator({\n                account: nexusClient.account,\n                signer: account\n            });\n            const hash = await nexusClient.installModule({\n                module: sessionsModule.moduleInitData\n            });\n            const { success } = await nexusClient.waitForUserOperationReceipt({ hash });\n            if (success) {\n                setLogs(prev => [...prev, \"Smart sessions module installed.\"]);\n            } else {\n                throw new Error(\"Failed to install module.\");\n            }\n\n            // Step 3: Generate MPC key\n            const { networkSigner, keygenResponse } = await createSilenceLabsSigner();\n            const mpcPublicKey = keygenResponse.publicKey;\n            setLogs(prev => [...prev, \"MPC key generated.\"]);\n\n            // Step 4: Create smart session\n            const sessionRequestedInfo = [\n                {\n                    sessionPublicKey: mpcPublicKey,\n                    actionPoliciesInfo: [\n                        {\n                            contractAddress,\n                            rules: [],\n                            functionSelector: toHex(functionSelector)\n                        }\n                    ]\n                }\n            ];\n            const nexusSessionClient = nexusClient.extend(smartSessionCreateActions(sessionsModule));\n            const createSessionsResponse = await nexusSessionClient.grantPermission({\n                sessionRequestedInfo\n            });\n            const { success: sessionSuccess } = await nexusClient.waitForUserOperationReceipt({\n                hash: createSessionsResponse.userOpHash\n            });\n            if (sessionSuccess) {\n                setLogs(prev => [...prev, \"Smart session created.\"]);\n            } else {\n                throw new Error(\"Failed to create session.\");\n            }\n\n            // Step 5: Create session data\n            const sessionData = {\n                granter: nexusClient.account.address,\n                sessionPublicKey: mpcPublicKey,\n                description: `Permission to increment number at ${contractAddress} on behalf of ${nexusClient.account.address.slice(0, 6)}`,\n                moduleData: {\n                    ...createSessionsResponse,\n                    mode: \"USE\"\n                }\n            };\n            const compressedSessionData = JSON.stringify(sessionData);\n            setLogs(prev => [...prev, \"Session data created and compressed.\"]);\n\n            // Step 6: Create session key's Viem account\n            const keyId = keygenResponse.keyId;\n            const sessionAccount = createViemAccount(networkSigner, keyId, mpcPublicKey);\n            setLogs(prev => [...prev, \"Session account created.\"]);\n\n            // Step 7: Create Nexus client for session key\n            const smartSessionNexusClient = createSmartAccountClient({\n                chain: baseSepolia,\n                account: await toNexusAccount({\n                    signer: sessionAccount,\n                    chain: baseSepolia,\n                    transport: http(),\n                }),\n                transport: http(bundlerUrl)\n            });\n            setLogs(prev => [...prev, \"Session Nexus client created.\"]);\n\n            // Step 8: Set up smart sessions module for using the session\n            const usePermissionsModule = toSmartSessionsValidator({\n                account: smartSessionNexusClient.account,\n                signer: sessionAccount,\n                moduleData: sessionData.moduleData\n            });\n            const useSmartSessionNexusClient = smartSessionNexusClient.extend(\n                smartSessionUseActions(usePermissionsModule)\n            );\n            setLogs(prev => [...prev, \"Smart sessions module set up for use.\"]);\n\n            // Step 9: Send transaction using the session\n            const userOpHash = await useSmartSessionNexusClient.usePermission({\n                calls: [\n                    {\n                        to: contractAddress,\n                        data: encodeFunctionData({\n                            abi: CounterAbi,\n                            functionName: \"incrementNumber\"\n                        })\n                    }\n                ]\n            });\n            setLogs(prev => [...prev, `Transaction hash: ${userOpHash}`]);\n        } catch (error) {\n            setLogs(prev => [...prev, `Error: ${error.message}`]);\n        }\n    };\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h1>Biconomy and Silence Labs Integration</h1>\n            <button onClick={handleStart} style={{ padding: '10px 20px', marginBottom: '20px' }}>\n                Start Integration\n            </button>\n            <div>\n                <h2>Logs</h2>\n                <ul style={{ listStyleType: 'none', padding: 0 }}>\n                    {logs.map((log, index) => (\n                        <li key={index} style={{ marginBottom: '10px', background: '#f0f0f0', padding: '5px' }}>\n                            {log}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default Page;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}