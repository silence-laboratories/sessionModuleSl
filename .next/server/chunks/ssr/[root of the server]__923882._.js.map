{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/lib/browserWallet.ts"],"sourcesContent":["// lib/browserWallet.ts\nimport { TypedData, IBrowserWallet } from '@silencelaboratories/walletprovider-sdk';\nimport { secp256k1 } from '@noble/curves/secp256k1';\nimport { hashTypedData, hexToBytes, serializeSignature } from 'viem';\nimport { toHex } from 'viem/utils';\nimport { Buffer } from 'buffer';\n\nexport class BrowserWallet implements IBrowserWallet {\n  private privateKey: Uint8Array;\n\n  constructor(privateKeyHex: string) {\n    this.privateKey = Uint8Array.from(Buffer.from(privateKeyHex.replace(/^0x/, ''), 'hex'));\n  }\n\n  async signTypedData<T>(from: string, request: TypedData<T>): Promise<unknown> {\n    const castedRequest = {\n      ...request,\n      message: request.message as Record<string, unknown>,\n    };\n\n    // Create a hash of the typed data.\n    const messageHash = hashTypedData(castedRequest);\n    const messageBytes = hexToBytes(messageHash);\n\n    // Sign the hash.\n    const signature = secp256k1.sign(messageBytes, this.privateKey);\n\n    return serializeSignature({\n      r: toHex(signature.r),\n      s: toHex(signature.s),\n      v: BigInt(signature.recovery) + BigInt(27),\n    });\n  }\n}\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;AAKvB;AAFA;AAAA;AADA;AACA;AACA;;;;;AAGO,MAAM;IACH,WAAuB;IAE/B,YAAY,aAAqB,CAAE;QACjC,IAAI,CAAC,UAAU,GAAG,WAAW,IAAI,CAAC,qGAAA,CAAA,SAAM,CAAC,IAAI,CAAC,cAAc,OAAO,CAAC,OAAO,KAAK;IAClF;IAEA,MAAM,cAAiB,IAAY,EAAE,OAAqB,EAAoB;QAC5E,MAAM,gBAAgB;YACpB,GAAG,OAAO;YACV,SAAS,QAAQ,OAAO;QAC1B;QAEA,mCAAmC;QACnC,MAAM,cAAc,CAAA,GAAA,mKAAA,CAAA,gBAAa,AAAD,EAAE;QAClC,MAAM,eAAe,CAAA,GAAA,4JAAA,CAAA,aAAU,AAAD,EAAE;QAEhC,iBAAiB;QACjB,MAAM,YAAY,qJAAA,CAAA,YAAS,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,UAAU;QAE9D,OAAO,CAAA,GAAA,wKAAA,CAAA,qBAAkB,AAAD,EAAE;YACxB,GAAG,CAAA,GAAA,0JAAA,CAAA,QAAK,AAAD,EAAE,UAAU,CAAC;YACpB,GAAG,CAAA,GAAA,0JAAA,CAAA,QAAK,AAAD,EAAE,UAAU,CAAC;YACpB,GAAG,OAAO,UAAU,QAAQ,IAAI,OAAO;QACzC;IACF;AACF"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/lib/sl.ts"],"sourcesContent":["// lib/sl.ts\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  LocalAccount,\n  privateKeyToAccount,\n  toAccount,\n  publicKeyToAddress\n} from \"viem/accounts\";\nimport {\n  WalletProviderServiceClient,\n  EOAAuth,\n  EphKeyClaim,\n  generateEphPrivateKey,\n  getEphPublicKey,\n  NetworkSigner,\n  SignRequestBuilder,\n  EphAuth,\n  computeAddress,\n  SignResponse\n} from \"@silencelaboratories/walletprovider-sdk\";\nimport {\n  bytesToHex,\n  stringToHex,\n  hexToBytes,\n  keccak256,\n  serializeSignature,\n  serializeTransaction,\n  hashTypedData,\n  Signature,\n  Hex\n} from \"viem\";\nimport { BrowserWallet } from \"./browserWallet\";\n\n/** Minimal cluster config */\nconst clusterConfig = {\n  walletProviderId: \"WalletProvider\",\n  walletProviderUrl: \"ws://34.118.117.249\", // or your cluster\n  apiVersion: \"v1\",\n};\n\nconst THRESHOLD = 2;\nconst PARTIES_NUMBER = 3;\n\n/** Key config shape stored in localStorage */\nexport interface KeyConfiguration {\n  publicKey: string;\n  keyId: string;\n  ephemeralKeyId: string;\n  ephemeralPrivateKey: string; // hex (no \"0x\")\n  signerAddress: string;\n  t: number;\n  n: number;\n  sessionAddress: string;\n}\n\n/** Save/load config */\nexport function saveKeyConfig(cfg: KeyConfiguration) {\n  localStorage.setItem(\"keyConfig\", JSON.stringify(cfg));\n}\nexport function loadKeyConfig(): KeyConfiguration | null {\n  const raw = localStorage.getItem(\"keyConfig\");\n  return raw ? JSON.parse(raw) : null;\n}\n\nfunction hexToBytesNo0x(hex: string): Uint8Array {\n  if (hex.startsWith(\"0x\")) hex = hex.slice(2);\n  const out = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < out.length; i++) {\n    out[i] = parseInt(hex.substring(i * 2, i * 2 + 2), 16);\n  }\n  return out;\n}\n\n/**\n * generateCryptographicKey()\n * 1) EOAAuth with a local \"demo\" private key (for simplicity).\n * 2) Silence Labs keygen => store KeyConfiguration in localStorage.\n */\nexport async function generateCryptographicKey(): Promise<{\n  keyConfig: KeyConfiguration;\n  eoaNetworkSigner: NetworkSigner;\n}> {\n  // For demonstration only – in production, use a real user wallet\n  const demoWalletPrivKey =\n    \"0x6b17d0ae446c070ce14b12990cc10f5fcf89d3410277abea6f00352535502393\";\n  const browserWallet = new BrowserWallet(demoWalletPrivKey);\n  const account = privateKeyToAccount(demoWalletPrivKey);\n  const ownerAddress = account.address;\n\n  // Create ephemeral key for multi-round signing\n  const signAlg = \"secp256k1\";\n  const ephemeralPrivKey = generateEphPrivateKey(signAlg);\n  const ephemeralPubKey = getEphPublicKey(ephemeralPrivKey, signAlg);\n  const ephemeralId = uuidv4();\n  const ephClaim = new EphKeyClaim(ephemeralId, ephemeralPubKey, signAlg, 60 * 60);\n\n  const eoaAuth = new EOAAuth(ownerAddress, browserWallet, { ephClaim });\n  const wpClient = new WalletProviderServiceClient({\n    walletProviderId: clusterConfig.walletProviderId,\n    walletProviderUrl: clusterConfig.walletProviderUrl,\n    apiVersion: \"v1\",\n  });\n\n  const eoaNetworkSigner = new NetworkSigner(\n    wpClient,\n    THRESHOLD,\n    PARTIES_NUMBER,\n    eoaAuth\n  );\n  const keygenResp = await eoaNetworkSigner.generateKey([signAlg]);\n  const [primaryKey] = keygenResp;\n  primaryKey.keyId = String(primaryKey.keyId);\n\n  const keyConfig: KeyConfiguration = {\n    publicKey: primaryKey.publicKey,\n    keyId: primaryKey.keyId,\n    ephemeralKeyId: ephemeralId,\n    ephemeralPrivateKey: Buffer.from(ephemeralPrivKey).toString(\"hex\"),\n    signerAddress: ownerAddress,\n    t: THRESHOLD,\n    n: PARTIES_NUMBER,\n    sessionAddress: computeAddress(primaryKey.publicKey),\n  };\n\n  saveKeyConfig(keyConfig);\n  return { keyConfig, eoaNetworkSigner };\n}\n\n/**\n * createSignerForSign()\n * Re-hydrates the ephemeral key & returns a NetworkSigner\n */\nexport async function createSignerForSign(): Promise<{\n  networkSigner: NetworkSigner;\n  keyId: string;\n  publicKey: string;\n}> {\n  const cfg = loadKeyConfig();\n  if (!cfg) throw new Error(\"Key config missing. Please run generateCryptographicKey first.\");\n\n  const ephemeralPrivKeyBytes = hexToBytesNo0x(cfg.ephemeralPrivateKey);\n  const ephAuth = new EphAuth(cfg.ephemeralKeyId, ephemeralPrivKeyBytes, \"secp256k1\");\n\n  const wpClient = new WalletProviderServiceClient({\n    walletProviderId: clusterConfig.walletProviderId,\n    walletProviderUrl: clusterConfig.walletProviderUrl,\n    apiVersion: \"v1\",\n  });\n\n  const networkSigner = new NetworkSigner(wpClient, cfg.t, cfg.n, ephAuth);\n  return {\n    networkSigner,\n    keyId: cfg.keyId,\n    publicKey: cfg.publicKey,\n  };\n}\n\n/**\n * createViemAccount – produce a viem-compatible `account` object that signs raw 32-byte hashes.\n */\nexport function createViemAccount(\n  networkSigner: NetworkSigner,\n  keyId: string,\n  publicKey: string,\n  signAlg = \"secp256k1\"\n): LocalAccount {\n  const pubHex = `0x${publicKey}` as `0x${string}`;\n  const address = computeAddress(publicKey)\n  console.log(\"MPC Address =>\", address);\n\n  return toAccount({\n    address,\n\n    // A) signMessage: we do raw ecdsa on the 32 bytes\n    async signMessage({ message }) {\n      console.log(\"MPC signMessage:\", message);\n\n      const hexMsg = normalizeToHex(message);\n      const signReq = new SignRequestBuilder()\n        .setRequest(uuidv4(), hexMsg, \"EIP191\")\n        .build();\n\n      const [resp] = await networkSigner.signMessage(keyId, signAlg, signReq);\n      if (!resp) throw new Error(\"Silence Labs returned empty signature.\");\n\n      const flattenSignature = (signgenResponse: SignResponse): `0x${string}` => {\n        const { sign, recid } = signgenResponse;\n        const recid_hex = (27 + recid).toString(16);\n        return `0x${sign}${recid_hex}`;\n      };\n    \n      const res = flattenSignature(resp)\n      return res;\n    },\n\n    // B) signTransaction: same approach -> raw ecdsa of keccak(rlp)\n    async signTransaction(tx, args) {\n      console.log(\"MPC signTransaction:\", tx);\n\n      const serializer = args?.serializer || serializeTransaction;\n      const signableTx = tx.type === \"eip4844\"\n        ? { ...tx, sidecars: false }\n        : tx;\n\n      const txHash = keccak256(serializer(signableTx));\n      // sign raw 32 bytes\n      const signReq = new SignRequestBuilder()\n        .setRequest(address, txHash.slice(2), \"rawBytes\")\n        .build();\n\n      const [resp] = await networkSigner.signMessage(keyId, signAlg, signReq);\n      if (!resp) throw new Error(\"No signature from Silence Labs for tx.\");\n\n      const sig = formatViemSign(resp);\n      return serializer(tx, sig);\n    },\n\n    // C) signTypedData: If your aggregator doesn't handle EIP712, this might fail on chain.\n    async signTypedData(typedData) {\n      console.log(\"MPC signTypedData:\", typedData);\n      const dataHash = hashTypedData(typedData);\n\n      const signReq = new SignRequestBuilder()\n        .setRequest(address, dataHash, \"rawBytes\")\n        .build();\n\n      const [resp] = await networkSigner.signMessage(keyId, signAlg, signReq);\n      if (!resp) throw new Error(\"No signature from Silence Labs for typed data.\");\n\n      const sig = formatViemSign(resp);\n      return serializeSignature(sig);\n    },\n  });\n}\n\n// Utility: convert any message into a 0x-string\nfunction normalizeToHex(msg: string | Uint8Array | { raw: string | Uint8Array }): `0x${string}` {\n  if (typeof msg === \"string\") {\n    return msg.startsWith(\"0x\")\n      ? (msg as `0x${string}`)\n      : (stringToHex(msg) as `0x${string}`);\n  } else if (msg instanceof Uint8Array) {\n    return `0x${bytesToHex(msg)}` as `0x${string}`;\n  } else if (\"raw\" in msg) {\n    const val = msg.raw;\n    if (typeof val === \"string\") {\n      return val.startsWith(\"0x\")\n        ? (val as `0x${string}`)\n        : (stringToHex(val) as `0x${string}`);\n    } else {\n      return `0x${bytesToHex(val)}` as `0x${string}`;\n    }\n  }\n  throw new Error(\"Unsupported message type for signMessage.\");\n}\n\n/**\n * formatViemSign – Silence Labs returns { sign: \"r||s\", recid: 0|1 } => { r, s, v = 27|28 }\n */\nfunction formatViemSign(resp: SignResponse): Signature {\n  const hexSig = resp.sign.startsWith(\"0x\") ? resp.sign.slice(2) : resp.sign;\n  const r = \"0x\" + hexSig.slice(0, 64) as Hex;\n  const s = \"0x\" + hexSig.slice(64, 128) as Hex;\n  const recid = resp.recid; // 0 or 1\n  const v = recid === 0 ? 27n : 28n;\n  return { r, s, v, yParity: recid };\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport {\n  createSmartAccountClient,\n  toNexusAccount,\n  smartSessionActions,\n  toSmartSessionsModule,\n  getSudoPolicy,\n} from \"@biconomy/abstractjs\";\nimport {\n  encodeFunctionData,\n  parseEther,\n  Address,\n  http,\n  parseAbi,\n} from \"viem\";\nimport { baseSepolia } from \"viem/chains\";\nimport {\n  createViemAccount,\n  generateCryptographicKey,\n  createSignerForSign,\n} from \"../../lib/sl\";\nimport { privateKeyToAccount } from \"viem/accounts\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\n// --- Constants --- //\nconst chain = { ...baseSepolia, id: 84532 };\n\nconst ALCHEMY_RPC =\n  \"https://base-sepolia.g.alchemy.com/v2/71BtTS_ke_J_XJg8P2LtjAGZuDKOQUJD\";\nconst BICONOMY_BUNDLER_URL =\n  \"https://bundler.biconomy.io/api/v3/84532/nJPK7B3ru.dd7f7861-190d-41bd-af80-6877f74b8f44\";\nconst OWNER_PRIVATE_KEY =\n  \"0x1439f4ea306e7a2ed953a1f7e948614c2b3a8d62ae034b50d9b4ba3f51124c03\";\n\n// ERC20 test token on Base Sepolia (not used on frontend processing)\nconst ERC20_TOKEN_ADDRESS: Address =\n  \"0x03AA93e006fBa956cdBAfa2b8EF789D0Cb63e7b4\";\n\n// --- Agent/Backend Configuration --- //\nconst AGENT_ID = \"aa0d6f50-b80b-0dfa-811b-1f8750ee6278\";\nconst ELIZA_MESSAGE_URL = `http://localhost:3000/${AGENT_ID}/message`;\n\n// Add these styles at the top of the file\nconst carouselSettings = {\n  dots: true,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n  autoplay: true,\n  autoplaySpeed: 3000,\n};\n\nconst carouselItems = [\n  {\n    title: \"Secure MPC Transactions\",\n    description: \"Experience secure multi-party computation for your blockchain transactions\",\n    icon: \"🔒\",\n  },\n  {\n    title: \"Smart Session Management\",\n    description: \"Create and manage smart sessions with ease\",\n    icon: \"⚡\",\n  },\n  {\n    title: \"Real-time Chat Interface\",\n    description: \"Communicate with your backend in real-time\",\n    icon: \"💬\",\n  },\n];\n\nexport default function SessionPage() {\n  // Core states\n  const [mpcSigner, setMpcSigner] = useState<any>(null);\n  // keygenData is from createSignerForSign (includes keyId, publicKey)\n  const [keygenData, setKeygenData] = useState<any>(null);\n  // keyConfig is the full configuration returned from generateCryptographicKey,\n  // which includes ephemeralKeyId, ephemeralPrivateKey, signerAddress, etc.\n  const [keyConfig, setKeyConfig] = useState<any>(null);\n  const [sessionDetails, setSessionDetails] = useState<any>(null);\n  const [nexusAccountAddress, setNexusAccountAddress] = useState<Address>();\n  const [ownerAccount, setOwnerAccount] = useState<any>(null);\n  const [loading, setLoading] = useState<string>(\"\");\n  // Flag to show that the session file has been downloaded and chat UI unlocked.\n  const [sessionDownloaded, setSessionDownloaded] = useState<boolean>(false);\n\n  // Chat UI states\n  const [chatInput, setChatInput] = useState<string>(\"\");\n  const [chatLog, setChatLog] = useState<\n    Array<{ sender: string; message: string }>\n  >([]);\n\n  // --- Initialize MPC Signer ---\n  const initializeMPCSigner = async () => {\n    setLoading(\"Initializing MPC Signer...\");\n    try {\n      // First, generate the full cryptographic key configuration.\n      // This returns both the keyConfig and a NetworkSigner instance (which we won't store directly).\n      const { keyConfig: newKeyConfig } = await generateCryptographicKey();\n      // Save the key configuration so the backend can reconstruct the MPC signer.\n      setKeyConfig(newKeyConfig);\n\n      // Next, retrieve the network signer along with keygen data.\n      const { networkSigner, keyId, publicKey } = await createSignerForSign();\n\n      // We use these to create an MPC account that will be used in the session.\n      const mpcAccount = createViemAccount(networkSigner, keyId, publicKey);\n      setKeygenData({ keyId, publicKey });\n      setMpcSigner(mpcAccount);\n      setLoading(\"\");\n    } catch (err) {\n      console.error(\"MPC Signer Error:\", err);\n      setLoading(\"\");\n    }\n  };\n\n  // --- Create Smart Session ---\n  const createSmartSession = async () => {\n    setLoading(\"Creating Smart Session...\");\n    try {\n      const owner = privateKeyToAccount(OWNER_PRIVATE_KEY);\n      setOwnerAccount(owner);\n\n      const nexusAccount = await toNexusAccount({\n        signer: owner,\n        chain,\n        transport: http(ALCHEMY_RPC),\n      });\n\n      const address = await nexusAccount.getAddress();\n      setNexusAccountAddress(address);\n\n      const nexusClient = createSmartAccountClient({\n        account: nexusAccount,\n        transport: http(BICONOMY_BUNDLER_URL),\n      });\n\n      const smartModule = toSmartSessionsModule({ signer: owner });\n      const installHash = await nexusClient.installModule({ module: smartModule });\n\n      const receipt = await nexusClient.waitForUserOperationReceipt({\n        hash: installHash,\n      });\n      if (!receipt.success) throw new Error(\"Module installation failed\");\n\n      const sessionClient = nexusClient.extend(smartSessionActions());\n\n      // Create a session that grants permission to the MPC signer.\n      const session = await sessionClient.grantPermission({\n        redeemer: mpcSigner.address,\n        actions: [\n          {\n            actionTarget: ERC20_TOKEN_ADDRESS,\n            actionTargetSelector: \"0xa9059cbb\", // transfer(address,uint256)\n            actionPolicies: [getSudoPolicy()],\n          },\n        ],\n      });\n\n      setSessionDetails(session);\n      setLoading(\"\");\n    } catch (err) {\n      console.error(\"Session Creation Error:\", err);\n      setLoading(\"\");\n    }\n  };\n\n  const downloadSessionFile = () => {\n    if (!sessionDetails || !mpcSigner || !keygenData || !keyConfig) return;\n    const sessionData = {\n      sessionDetails,\n      mpcSigner,\n      keygenData, // includes keyId and publicKey\n      keyConfig,  // additional info: ephemeralKeyId, ephemeralPrivateKey, signerAddress, etc.\n      nexusAccountAddress,\n      ownerAccount, // Include if needed by backend\n    };\n\n    const jsonString = JSON.stringify(\n      sessionData,\n      (_, value) => (typeof value === \"bigint\" ? value.toString() : value),\n      2\n    );    \n    const blob = new Blob([jsonString], { type: \"application/json\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"session-info.json\";\n    a.click();\n    URL.revokeObjectURL(url);\n\n    // Mark that file download is complete so that chat UI can be shown.\n    setSessionDownloaded(true);\n  };\n\n  // --- Send Chat Message to Backend ---\n  // This sends the chat message (e.g. \"send 0.00001 to 0xABC...\") to your backend.\n  const sendChatMessage = async () => {\n    if (!chatInput.trim()) return;\n    // Append user's message to the chat log.\n    setChatLog((prev) => [...prev, { sender: \"user\", message: chatInput }]);\n\n    try {\n      // Prepare payload with FormData.\n      const formData = new FormData();\n      formData.append(\"text\", chatInput);\n      formData.append(\"user\", \"user\");\n\n      const response = await fetch(ELIZA_MESSAGE_URL, {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) throw new Error(\"Failed to send message to backend\");\n\n      const data = await response.json();\n      console.log(\"Response from backend:\", data);\n      // Append the backend's response to the chat log.\n      setChatLog((prev) => [\n        ...prev,\n        { sender: \"backend\", message: JSON.stringify(data) },\n      ]);\n    } catch (err: any) {\n      console.error(\"Failed to send message:\", err);\n      setChatLog((prev) => [\n        ...prev,\n        {\n          sender: \"backend\",\n          message: err.message || \"An error occurred while sending message\",\n        },\n      ]);\n    }\n    // Clear the chat input after sending.\n    setChatInput(\"\");\n  };\n\n  return (\n    <div className=\"min-h-screen p-8 font-mono bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800\">\n      <div className=\"max-w-4xl mx-auto\">\n        <h1 className=\"text-4xl font-bold mb-8 text-center bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-purple-600\">\n          MPC-Powered Smart Session: Transaction Orchestration\n        </h1>\n\n        <div className=\"space-y-8\">\n          {/* --- MPC and Session Creation Section --- */}\n          <div className=\"p-6 bg-white dark:bg-gray-800 shadow-lg rounded-xl border border-gray-200 dark:border-gray-700 transition-all duration-300 hover:shadow-xl\">\n            <button\n              onClick={initializeMPCSigner}\n              disabled={!!mpcSigner}\n              className={`px-6 py-3 rounded-lg w-full mb-4 transition-all duration-300 ${\n                mpcSigner\n                  ? \"bg-green-500 text-white cursor-not-allowed\"\n                  : \"bg-gradient-to-r from-blue-500 to-blue-600 text-white hover:from-blue-600 hover:to-blue-700 transform hover:-translate-y-1\"\n              }`}\n            >\n              {mpcSigner ? \"✅ MPC Signer Ready\" : \"Initialize MPC Signer\"}\n            </button>\n\n            {mpcSigner && (\n              <button\n                onClick={createSmartSession}\n                disabled={!!sessionDetails}\n                className={`px-6 py-3 rounded-lg w-full mb-4 transition-all duration-300 ${\n                  sessionDetails\n                    ? \"bg-green-500 text-white cursor-not-allowed\"\n                    : \"bg-gradient-to-r from-purple-500 to-purple-600 text-white hover:from-purple-600 hover:to-purple-700 transform hover:-translate-y-1\"\n                }`}\n              >\n                {sessionDetails ? \"✅ Session Created\" : \"Create Smart Session\"}\n              </button>\n            )}\n\n            {sessionDetails && (\n              <>\n                <button\n                  onClick={downloadSessionFile}\n                  className=\"px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg w-full mb-4 transition-all duration-300 hover:from-green-600 hover:to-green-700 transform hover:-translate-y-1\"\n                >\n                  Download Session Info\n                </button>\n                <p className=\"text-sm text-gray-600 dark:text-gray-300 text-center\">\n                  This file contains the session info, MPC signer data, key generation details, and full key configuration required for backend processing.\n                </p>\n              </>\n            )}\n          </div>\n\n          {/* --- Chat Window Section --- */}\n          {sessionDownloaded && (\n            <div className=\"p-6 bg-white dark:bg-gray-800 shadow-lg rounded-xl border border-gray-200 dark:border-gray-700\">\n              <h2 className=\"text-2xl font-bold mb-6 text-center text-gray-800 dark:text-white\">💬 Chat with Backend</h2>\n              {/* Chat log area */}\n              <div className=\"border border-gray-200 dark:border-gray-700 p-4 h-96 overflow-y-auto mb-6 rounded-lg bg-gray-50 dark:bg-gray-900\">\n                {chatLog.length === 0 ? (\n                  <p className=\"text-gray-500 dark:text-gray-400 text-center py-8\">No messages yet. Start a conversation!</p>\n                ) : (\n                  chatLog.map((entry, index) => (\n                    <div\n                      key={index}\n                      className={`mb-4 p-3 rounded-lg max-w-[80%] ${\n                        entry.sender === \"user\"\n                          ? \"bg-blue-500 text-white ml-auto\"\n                          : \"bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-white\"\n                      }`}\n                    >\n                      <span className=\"font-semibold\">\n                        {entry.sender === \"user\" ? \"You:\" : \"Backend:\"}\n                      </span>{\" \"}\n                      <span>{entry.message}</span>\n                    </div>\n                  ))\n                )}\n              </div>\n              {/* Chat input area */}\n              <div className=\"flex gap-2\">\n                <input\n                  type=\"text\"\n                  placeholder='Type a message, e.g. \"send 0.00001 to 0xABC...\"'\n                  value={chatInput}\n                  onChange={(e) => setChatInput(e.target.value)}\n                  className=\"flex-grow p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-900 text-gray-800 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  onKeyPress={(e) => e.key === 'Enter' && sendChatMessage()}\n                />\n                <button\n                  onClick={sendChatMessage}\n                  className=\"px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-lg transition-all duration-300 hover:from-blue-600 hover:to-blue-700 transform hover:-translate-y-1\"\n                >\n                  Send\n                </button>\n              </div>\n            </div>\n          )}\n\n          {/* --- Loading Status --- */}\n          {loading && (\n            <div className=\"text-center\">\n              <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-4 border-blue-500 border-t-transparent\"></div>\n              <p className=\"text-blue-500 font-medium mt-2\">{loading}</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 688, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}