{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport {\n  createSmartAccountClient,\n  toNexusAccount,\n  smartSessionActions,\n  toSmartSessionsModule,\n  getSudoPolicy,\n  stringify,\n} from \"@biconomy/abstractjs\";\nimport { baseSepolia } from \"viem/chains\";\nimport { http, parseEther, Address } from \"viem\";\nimport { createViemAccount, generateCryptographicKey, createSignerForSign, loadKeyConfig } from \"../../lib/sl\";\nimport { privateKeyToAccount } from \"viem/accounts\";\n\nconst chain = { ...baseSepolia, id: 84532 };\nconst ALCHEMY_RPC = \"https://base-sepolia.g.alchemy.com/v2/71BtTS_ke_J_XJg8P2LtjAGZuDKOQUJD\";\nconst BICONOMY_BUNDLER_URL = \"https://bundler.biconomy.io/api/v3/84532/nJPK7B3ru.dd7f7861-190d-41bd-af80-6877f74b8f44\";\nconst OWNER_PRIVATE_KEY = \"0x1439f4ea306e7a2ed953a1f7e948614c2b3a8d62ae034b50d9b4ba3f51124c03\";\n\nexport default function SessionPage() {\n  const [mpcSigner, setMpcSigner] = useState<any>(null);\n  const [sessionData, setSessionData] = useState<string | null>(null);\n  const [keyConfig, setKeyConfig] = useState<any>(null);\n  const [loading, setLoading] = useState<string>(\"\");\n  const [chatInput, setChatInput] = useState<string>(\"\");\n  const [chatHistory, setChatHistory] = useState<string[]>([]);\n\n\n  \n\n  const createSmartSession = async () => {\n    setLoading(\"Creating Smart Session...\");\n    try {\n      const owner = privateKeyToAccount(OWNER_PRIVATE_KEY);\n      const nexusAccount = await toNexusAccount({ signer: owner, chain, transport: http(ALCHEMY_RPC) });\n      const nexusClient = createSmartAccountClient({ account: nexusAccount, transport: http(BICONOMY_BUNDLER_URL) });\n      const smartModule = toSmartSessionsModule({ signer: owner });\n      const installHash = await nexusClient.installModule({ module: smartModule });\n      const receipt = await nexusClient.waitForUserOperationReceipt({ hash: installHash });\n      if (!receipt.success) throw new Error(\"Module installation failed\");\n      const smartSessionsClient = nexusClient.extend(smartSessionActions());\n      const session = await smartSessionsClient.grantPermission({\n        redeemer: mpcSigner.address,\n        actions: [{ actionTarget: \"0x7961d826258946969fa0d80b34508094c6148bdf\", actionTargetSelector: \"0xa9059cbb\", actionPolicies: [getSudoPolicy()] }],\n      });\n// Stringify with custom replacer for BigInt handling\n      setSessionData(JSON.stringify(session, (_, v) => \n        typeof v === 'bigint' ? v.toString() : v\n      ));      \n            \n      setLoading(\"\");\n    } catch (err) {\n      console.error(\"Session Creation Error:\", err);\n      setLoading(\"\");\n    }\n  };\n  const sendMessageToEliza = async () => {\n    if (!chatInput) return;\n    setLoading(\"Sending to Eliza...\");\n  \n    try {\n      const agentId = \"aa0d6f50-b80b-0dfa-811b-1f8750ee6278\";\n  \n      const regex = /(\\d+(\\.\\d+)?)\\s*(ETH|eth|token)?\\s*to\\s*(0x[a-fA-F0-9]{40})/;\n      const match = chatInput.match(regex);\n  \n      if (!match) throw new Error(\"Invalid command format\");\n  \n      const amount = match[1];\n      const recipient = match[4];\n  \n      // Validate and reformat the ephemeralPrivateKey in keyConfig:\n      if (!keyConfig?.ephemeralPrivateKey)\n        throw new Error(\"Missing ephemeralPrivateKey in keyConfig\");\n  \n      const rawEphemeralKey = keyConfig.ephemeralPrivateKey;\n      // If the key is a Buffer (or similar), convert to hex string; if already a string, ensure '0x' prefix.\n      const formattedEphemeralKey =\n        typeof rawEphemeralKey === \"string\"\n          ? rawEphemeralKey.startsWith(\"0x\")\n            ? rawEphemeralKey\n            : \"0x\" + rawEphemeralKey\n          : rawEphemeralKey.toString(\"hex\").startsWith(\"0x\")\n          ? rawEphemeralKey.toString(\"hex\")\n          : \"0x\" + rawEphemeralKey.toString(\"hex\");\n  \n      const payload = {\n        recipient,\n        amount: parseEther(amount).toString(), // amount is converted to wei as a string\n        sessionInfo: {\n          ...JSON.parse(sessionData || \"{}\"),\n        },\n        keyConfig: {\n          ...keyConfig,\n          ephemeralPrivateKey: formattedEphemeralKey,\n        },\n      };\n  \n      const finalMessage = `\n  Execute transaction of ${amount} token to ${recipient}\n  \n  \\`\\`\\`json\n  ${JSON.stringify(payload, null, 2)}\n  \\`\\`\\`\n      `;\n  \n      const formData = new FormData();\n      formData.append(\"text\", finalMessage);\n      formData.append(\"user\", \"user\");\n  \n      const response = await fetch(`http://localhost:3000/${agentId}/message`, {\n        method: \"POST\",\n        body: formData,\n      });\n  \n      const data = await response.json();\n  \n      setChatHistory([\n        ...chatHistory,\n        `You: ${chatInput}`,\n        `Eliza: ${data?.response}`,\n      ]);\n      setChatInput(\"\");\n      setLoading(\"\");\n    } catch (err: any) {\n      console.error(err);\n      setChatHistory([...chatHistory, `Error: ${err.message}`]);\n      setLoading(\"\");\n    }\n  };\n  \n  \n  return (\n    <div className=\"min-h-screen p-8 flex\">\n      <div className=\"w-1/2 space-y-4 max-w-xl\">\n        <h1 className=\"text-3xl font-bold mb-6\">Session Generator</h1>\n        <button onClick={initializeMPCSigner} className=\"btn-primary\" disabled={!!mpcSigner}>\n          {mpcSigner ? \"MPC Signer Ready\" : \"Initialize MPC Signer\"}\n        </button>\n        {mpcSigner && (\n          <button onClick={createSmartSession} className=\"btn-secondary\" disabled={!!sessionData}>\n            {sessionData ? \"Session Created\" : \"Create Smart Session\"}\n          </button>\n        )}\n        {loading && <p className=\"text-blue-500\">{loading}</p>}\n      </div>\n\n      {sessionData && (\n        <div className=\"w-1/2 pl-8\">\n          <h2 className=\"text-xl font-bold mb-4\">ðŸ’¬ Chat with Eliza OS</h2>\n          <div className=\"space-y-2 mb-4 h-80 overflow-y-auto border p-2 rounded\">\n            {chatHistory.map((msg, idx) => (<div key={idx} className=\"p-2 bg-gray-100 rounded\">{msg}</div>))}\n          </div>\n          <input type=\"text\" placeholder=\"Type your command...\" value={chatInput} onChange={(e) => setChatInput(e.target.value)} className=\"p-2 border w-full mb-2 rounded\" />\n          <button onClick={sendMessageToEliza} className=\"btn-primary\">Send</button>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}