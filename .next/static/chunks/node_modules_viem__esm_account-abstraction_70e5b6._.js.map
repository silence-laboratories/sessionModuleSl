{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"toSmartAccount.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/accounts/toSmartAccount.ts"],"sourcesContent":["import { type Abi, parseAbi } from 'abitype'\n\nimport { getCode } from '../../actions/public/getCode.js'\nimport { readContract } from '../../actions/public/readContract.js'\nimport type { Prettify } from '../../types/utils.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { createNonceManager } from '../../utils/nonceManager.js'\nimport { serializeErc6492Signature } from '../../utils/signature/serializeErc6492Signature.js'\nimport type { EntryPointVersion } from '../types/entryPointVersion.js'\nimport type { SmartAccount, SmartAccountImplementation } from './types.js'\n\nexport type ToSmartAccountParameters<\n  entryPointAbi extends Abi | readonly unknown[] = Abi,\n  entryPointVersion extends EntryPointVersion = EntryPointVersion,\n  extend extends object = object,\n> = SmartAccountImplementation<entryPointAbi, entryPointVersion, extend>\n\nexport type ToSmartAccountReturnType<\n  implementation extends\n    SmartAccountImplementation = SmartAccountImplementation,\n> = Prettify<SmartAccount<implementation>>\n\n/**\n * @description Creates a Smart Account with a provided account implementation.\n *\n * @param parameters - {@link ToSmartAccountParameters}\n * @returns A Smart Account. {@link ToSmartAccountReturnType}\n */\nexport async function toSmartAccount<\n  implementation extends SmartAccountImplementation,\n>(\n  implementation: implementation,\n): Promise<ToSmartAccountReturnType<implementation>> {\n  const {\n    extend,\n    nonceKeyManager = createNonceManager({\n      source: {\n        get() {\n          return Date.now()\n        },\n        set() {},\n      },\n    }),\n    ...rest\n  } = implementation\n\n  let deployed = false\n\n  const address = await implementation.getAddress()\n\n  return {\n    ...extend,\n    ...rest,\n    address,\n    async getFactoryArgs() {\n      if ('isDeployed' in this && (await this.isDeployed()))\n        return { factory: undefined, factoryData: undefined }\n      return implementation.getFactoryArgs()\n    },\n    async getNonce(parameters) {\n      const key =\n        parameters?.key ??\n        BigInt(\n          await nonceKeyManager.consume({\n            address,\n            chainId: implementation.client.chain!.id!,\n            client: implementation.client,\n          }),\n        )\n\n      if (implementation.getNonce)\n        return await implementation.getNonce({ ...parameters, key })\n\n      const nonce = await readContract(implementation.client, {\n        abi: parseAbi([\n          'function getNonce(address, uint192) pure returns (uint256)',\n        ]),\n        address: implementation.entryPoint.address,\n        functionName: 'getNonce',\n        args: [address, key],\n      })\n      return nonce\n    },\n    async isDeployed() {\n      if (deployed) return true\n      const code = await getAction(\n        implementation.client,\n        getCode,\n        'getCode',\n      )({\n        address,\n      })\n      deployed = Boolean(code)\n      return deployed\n    },\n    ...(implementation.sign\n      ? {\n          async sign(parameters) {\n            const [{ factory, factoryData }, signature] = await Promise.all([\n              this.getFactoryArgs(),\n              implementation.sign!(parameters),\n            ])\n            if (factory && factoryData)\n              return serializeErc6492Signature({\n                address: factory,\n                data: factoryData,\n                signature,\n              })\n            return signature\n          },\n        }\n      : {}),\n    async signMessage(parameters) {\n      const [{ factory, factoryData }, signature] = await Promise.all([\n        this.getFactoryArgs(),\n        implementation.signMessage(parameters),\n      ])\n      if (factory && factoryData)\n        return serializeErc6492Signature({\n          address: factory,\n          data: factoryData,\n          signature,\n        })\n      return signature\n    },\n    async signTypedData(parameters) {\n      const [{ factory, factoryData }, signature] = await Promise.all([\n        this.getFactoryArgs(),\n        implementation.signTypedData(parameters),\n      ])\n      if (factory && factoryData)\n        return serializeErc6492Signature({\n          address: factory,\n          data: factoryData,\n          signature,\n        })\n      return signature\n    },\n    type: 'smart',\n  } as ToSmartAccountReturnType<implementation>\n}\n"],"names":[],"mappings":";;;AAMA,OAAO,EAAE,kBAAkB,EAAE,MAAM,6BAA6B,CAAA;AAHhE,OAAO,EAAE,YAAY,EAAE,MAAM,sCAAsC,CAAA;AAHnE,OAAO,EAAY,QAAQ,EAAE,MAAM,SAAS,CAAA;AAK5C,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AAHpD,OAAO,EAAE,OAAO,EAAE,MAAM,iCAAiC,CAAA;AAKzD,OAAO,EAAE,yBAAyB,EAAE,MAAM,oDAAoD,CAAA;;;;;;;AAqBvF,KAAK,UAAU,cAAc,CAGlC,cAA8B;IAE9B,MAAM,EACJ,MAAM,EACN,eAAe,gKAAG,qBAAA,AAAkB,EAAC;QACnC,MAAM,EAAE;YACN,GAAG;gBACD,OAAO,IAAI,CAAC,GAAG,EAAE,CAAA;YACnB,CAAC;YACD,GAAG,KAAI,CAAC;SACT;KACF,CAAC,EACF,GAAG,IAAI,EACR,GAAG,cAAc,CAAA;IAElB,IAAI,QAAQ,GAAG,KAAK,CAAA;IAEpB,MAAM,OAAO,GAAG,MAAM,cAAc,CAAC,UAAU,EAAE,CAAA;IAEjD,OAAO;QACL,GAAG,MAAM;QACT,GAAG,IAAI;QACP,OAAO;QACP,KAAK,CAAC,cAAc;YAClB,IAAI,YAAY,IAAI,IAAI,IAAI,AAAC,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC,CACnD,OAAO;gBAAE,OAAO,EAAE,SAAS;gBAAE,WAAW,EAAE,SAAS;YAAA,CAAE,CAAA;YACvD,OAAO,cAAc,CAAC,cAAc,EAAE,CAAA;QACxC,CAAC;QACD,KAAK,CAAC,QAAQ,EAAC,UAAU;YACvB,MAAM,GAAG,GACP,UAAU,EAAE,GAAG,IACf,MAAM,CACJ,MAAM,eAAe,CAAC,OAAO,CAAC;gBAC5B,OAAO;gBACP,OAAO,EAAE,cAAc,CAAC,MAAM,CAAC,KAAM,CAAC,EAAG;gBACzC,MAAM,EAAE,cAAc,CAAC,MAAM;aAC9B,CAAC,CACH,CAAA;YAEH,IAAI,cAAc,CAAC,QAAQ,EACzB,OAAO,MAAM,cAAc,CAAC,QAAQ,CAAC;gBAAE,GAAG,UAAU;gBAAE,GAAG;YAAA,CAAE,CAAC,CAAA;YAE9D,MAAM,KAAK,GAAG,+KAAM,eAAA,AAAY,EAAC,cAAc,CAAC,MAAM,EAAE;gBACtD,GAAG,iLAAE,WAAA,AAAQ,EAAC;oBACZ,4DAA4D;iBAC7D,CAAC;gBACF,OAAO,EAAE,cAAc,CAAC,UAAU,CAAC,OAAO;gBAC1C,YAAY,EAAE,UAAU;gBACxB,IAAI,EAAE;oBAAC,OAAO;oBAAE,GAAG;iBAAC;aACrB,CAAC,CAAA;YACF,OAAO,KAAK,CAAA;QACd,CAAC;QACD,KAAK,CAAC,UAAU;YACd,IAAI,QAAQ,EAAE,OAAO,IAAI,CAAA;YACzB,MAAM,IAAI,GAAG,gKAAM,YAAA,AAAS,EAC1B,cAAc,CAAC,MAAM,kKACrB,UAAO,EACP,SAAS,CACV,CAAC;gBACA,OAAO;aACR,CAAC,CAAA;YACF,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;YACxB,OAAO,QAAQ,CAAA;QACjB,CAAC;QACD,GAAG,AAAC,cAAc,CAAC,IAAI,GACnB;YACE,KAAK,CAAC,IAAI,EAAC,UAAU;gBACnB,MAAM,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,EAAE,SAAS,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;oBAC9D,IAAI,CAAC,cAAc,EAAE;oBACrB,cAAc,CAAC,IAAK,CAAC,UAAU,CAAC;iBACjC,CAAC,CAAA;gBACF,IAAI,OAAO,IAAI,WAAW,EACxB,8LAAO,4BAAA,AAAyB,EAAC;oBAC/B,OAAO,EAAE,OAAO;oBAChB,IAAI,EAAE,WAAW;oBACjB,SAAS;iBACV,CAAC,CAAA;gBACJ,OAAO,SAAS,CAAA;YAClB,CAAC;SACF,GACD,CAAA,CAAE,CAAC;QACP,KAAK,CAAC,WAAW,EAAC,UAAU;YAC1B,MAAM,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,EAAE,SAAS,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;gBAC9D,IAAI,CAAC,cAAc,EAAE;gBACrB,cAAc,CAAC,WAAW,CAAC,UAAU,CAAC;aACvC,CAAC,CAAA;YACF,IAAI,OAAO,IAAI,WAAW,EACxB,QAAO,kNAAA,AAAyB,EAAC;gBAC/B,OAAO,EAAE,OAAO;gBAChB,IAAI,EAAE,WAAW;gBACjB,SAAS;aACV,CAAC,CAAA;YACJ,OAAO,SAAS,CAAA;QAClB,CAAC;QACD,KAAK,CAAC,aAAa,EAAC,UAAU;YAC5B,MAAM,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,EAAE,SAAS,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;gBAC9D,IAAI,CAAC,cAAc,EAAE;gBACrB,cAAc,CAAC,aAAa,CAAC,UAAU,CAAC;aACzC,CAAC,CAAA;YACF,IAAI,OAAO,IAAI,WAAW,EACxB,8LAAO,4BAAA,AAAyB,EAAC;gBAC/B,OAAO,EAAE,OAAO;gBAChB,IAAI,EAAE,WAAW;gBACjB,SAAS;aACV,CAAC,CAAA;YACJ,OAAO,SAAS,CAAA;QAClB,CAAC;QACD,IAAI,EAAE,OAAO;KAC8B,CAAA;AAC/C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"file":"getUserOperationHash.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/utils/userOperation/getUserOperationHash.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport type { Hash } from '../../../types/misc.js'\nimport { encodeAbiParameters } from '../../../utils/abi/encodeAbiParameters.js'\nimport { concat } from '../../../utils/data/concat.js'\nimport { pad } from '../../../utils/data/pad.js'\nimport { numberToHex } from '../../../utils/encoding/toHex.js'\nimport { keccak256 } from '../../../utils/hash/keccak256.js'\nimport type { EntryPointVersion } from '../../types/entryPointVersion.js'\nimport type { UserOperation } from '../../types/userOperation.js'\n\nexport type GetUserOperationHashParameters<\n  entryPointVersion extends EntryPointVersion = EntryPointVersion,\n> = {\n  chainId: number\n  entryPointAddress: Address\n  entryPointVersion: entryPointVersion | EntryPointVersion\n  userOperation: UserOperation<entryPointVersion>\n}\n\nexport type GetUserOperationHashReturnType = Hash\n\nexport function getUserOperationHash<\n  entryPointVersion extends EntryPointVersion,\n>(\n  parameters: GetUserOperationHashParameters<entryPointVersion>,\n): GetUserOperationHashReturnType {\n  const { chainId, entryPointAddress, entryPointVersion } = parameters\n  const userOperation = parameters.userOperation as UserOperation\n  const {\n    callData,\n    callGasLimit,\n    initCode,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    paymasterAndData,\n    preVerificationGas,\n    sender,\n    verificationGasLimit,\n  } = userOperation\n\n  const packedUserOp = (() => {\n    if (entryPointVersion === '0.6') {\n      return encodeAbiParameters(\n        [\n          { type: 'address' },\n          { type: 'uint256' },\n          { type: 'bytes32' },\n          { type: 'bytes32' },\n          { type: 'uint256' },\n          { type: 'uint256' },\n          { type: 'uint256' },\n          { type: 'uint256' },\n          { type: 'uint256' },\n          { type: 'bytes32' },\n        ],\n        [\n          sender,\n          nonce,\n          keccak256(initCode ?? '0x'),\n          keccak256(callData ?? '0x'),\n          callGasLimit,\n          verificationGasLimit,\n          preVerificationGas,\n          maxFeePerGas,\n          maxPriorityFeePerGas,\n          keccak256(paymasterAndData ?? '0x'),\n        ],\n      )\n    }\n\n    if (entryPointVersion === '0.7') {\n      const accountGasLimits = concat([\n        pad(numberToHex(userOperation.verificationGasLimit), { size: 16 }),\n        pad(numberToHex(userOperation.callGasLimit), { size: 16 }),\n      ])\n      const callData_hashed = keccak256(callData)\n      const gasFees = concat([\n        pad(numberToHex(userOperation.maxPriorityFeePerGas), { size: 16 }),\n        pad(numberToHex(userOperation.maxFeePerGas), { size: 16 }),\n      ])\n      const initCode_hashed = keccak256(\n        userOperation.factory && userOperation.factoryData\n          ? concat([userOperation.factory, userOperation.factoryData])\n          : '0x',\n      )\n      const paymasterAndData_hashed = keccak256(\n        userOperation.paymaster\n          ? concat([\n              userOperation.paymaster,\n              pad(\n                numberToHex(userOperation.paymasterVerificationGasLimit || 0),\n                {\n                  size: 16,\n                },\n              ),\n              pad(numberToHex(userOperation.paymasterPostOpGasLimit || 0), {\n                size: 16,\n              }),\n              userOperation.paymasterData || '0x',\n            ])\n          : '0x',\n      )\n\n      return encodeAbiParameters(\n        [\n          { type: 'address' },\n          { type: 'uint256' },\n          { type: 'bytes32' },\n          { type: 'bytes32' },\n          { type: 'bytes32' },\n          { type: 'uint256' },\n          { type: 'bytes32' },\n          { type: 'bytes32' },\n        ],\n        [\n          sender,\n          nonce,\n          initCode_hashed,\n          callData_hashed,\n          accountGasLimits,\n          preVerificationGas,\n          gasFees,\n          paymasterAndData_hashed,\n        ],\n      )\n    }\n\n    throw new Error(`entryPointVersion \"${entryPointVersion}\" not supported.`)\n  })()\n\n  return keccak256(\n    encodeAbiParameters(\n      [{ type: 'bytes32' }, { type: 'address' }, { type: 'uint256' }],\n      [keccak256(packedUserOp), entryPointAddress, BigInt(chainId)],\n    ),\n  )\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"file":"address.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/constants/address.ts"],"sourcesContent":["export const entryPoint06Address =\n  '0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789' as const\nexport const entryPoint07Address =\n  '0x0000000071727De22E5E9d8BAf0edAc6f37da032' as const\n"],"names":[],"mappings":";;;;AAAO,MAAM,mBAAmB,GAC9B,4CAAqD,CAAA;AAChD,MAAM,mBAAmB,GAC9B,4CAAqD,CAAA","ignoreList":[0]}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"file":"userOperationRequest.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/utils/formatters/userOperationRequest.ts"],"sourcesContent":["import type { ErrorType } from '../../../errors/utils.js'\nimport type { ExactPartial } from '../../../types/utils.js'\nimport { numberToHex } from '../../../utils/encoding/toHex.js'\nimport type { RpcUserOperation } from '../../types/rpc.js'\nimport type { UserOperation } from '../../types/userOperation.js'\n\nexport type FormatUserOperationRequestErrorType = ErrorType\n\nexport function formatUserOperationRequest(\n  request: ExactPartial<UserOperation>,\n) {\n  const rpcRequest = {} as RpcUserOperation\n\n  if (typeof request.callData !== 'undefined')\n    rpcRequest.callData = request.callData\n  if (typeof request.callGasLimit !== 'undefined')\n    rpcRequest.callGasLimit = numberToHex(request.callGasLimit)\n  if (typeof request.factory !== 'undefined')\n    rpcRequest.factory = request.factory\n  if (typeof request.factoryData !== 'undefined')\n    rpcRequest.factoryData = request.factoryData\n  if (typeof request.initCode !== 'undefined')\n    rpcRequest.initCode = request.initCode\n  if (typeof request.maxFeePerGas !== 'undefined')\n    rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas)\n  if (typeof request.maxPriorityFeePerGas !== 'undefined')\n    rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas)\n  if (typeof request.nonce !== 'undefined')\n    rpcRequest.nonce = numberToHex(request.nonce)\n  if (typeof request.paymaster !== 'undefined')\n    rpcRequest.paymaster = request.paymaster\n  if (typeof request.paymasterAndData !== 'undefined')\n    rpcRequest.paymasterAndData = request.paymasterAndData || '0x'\n  if (typeof request.paymasterData !== 'undefined')\n    rpcRequest.paymasterData = request.paymasterData\n  if (typeof request.paymasterPostOpGasLimit !== 'undefined')\n    rpcRequest.paymasterPostOpGasLimit = numberToHex(\n      request.paymasterPostOpGasLimit,\n    )\n  if (typeof request.paymasterVerificationGasLimit !== 'undefined')\n    rpcRequest.paymasterVerificationGasLimit = numberToHex(\n      request.paymasterVerificationGasLimit,\n    )\n  if (typeof request.preVerificationGas !== 'undefined')\n    rpcRequest.preVerificationGas = numberToHex(request.preVerificationGas)\n  if (typeof request.sender !== 'undefined') rpcRequest.sender = request.sender\n  if (typeof request.signature !== 'undefined')\n    rpcRequest.signature = request.signature\n  if (typeof request.verificationGasLimit !== 'undefined')\n    rpcRequest.verificationGasLimit = numberToHex(request.verificationGasLimit)\n\n  return rpcRequest\n}\n"],"names":[],"mappings":";;;AAEA,OAAO,EAAE,WAAW,EAAE,MAAM,kCAAkC,CAAA;;AAMxD,SAAU,0BAA0B,CACxC,OAAoC;IAEpC,MAAM,UAAU,GAAG,CAAA,CAAsB,CAAA;IAEzC,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,WAAW,EACzC,UAAU,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAA;IACxC,IAAI,OAAO,OAAO,CAAC,YAAY,KAAK,WAAW,EAC7C,UAAU,CAAC,YAAY,qKAAG,cAAA,AAAW,EAAC,OAAO,CAAC,YAAY,CAAC,CAAA;IAC7D,IAAI,OAAO,OAAO,CAAC,OAAO,KAAK,WAAW,EACxC,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAA;IACtC,IAAI,OAAO,OAAO,CAAC,WAAW,KAAK,WAAW,EAC5C,UAAU,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAA;IAC9C,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,WAAW,EACzC,UAAU,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAA;IACxC,IAAI,OAAO,OAAO,CAAC,YAAY,KAAK,WAAW,EAC7C,UAAU,CAAC,YAAY,IAAG,+KAAA,AAAW,EAAC,OAAO,CAAC,YAAY,CAAC,CAAA;IAC7D,IAAI,OAAO,OAAO,CAAC,oBAAoB,KAAK,WAAW,EACrD,UAAU,CAAC,oBAAoB,OAAG,4KAAA,AAAW,EAAC,OAAO,CAAC,oBAAoB,CAAC,CAAA;IAC7E,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,WAAW,EACtC,UAAU,CAAC,KAAK,IAAG,+KAAA,AAAW,EAAC,OAAO,CAAC,KAAK,CAAC,CAAA;IAC/C,IAAI,OAAO,OAAO,CAAC,SAAS,KAAK,WAAW,EAC1C,UAAU,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAA;IAC1C,IAAI,OAAO,OAAO,CAAC,gBAAgB,KAAK,WAAW,EACjD,UAAU,CAAC,gBAAgB,GAAG,OAAO,CAAC,gBAAgB,IAAI,IAAI,CAAA;IAChE,IAAI,OAAO,OAAO,CAAC,aAAa,KAAK,WAAW,EAC9C,UAAU,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAA;IAClD,IAAI,OAAO,OAAO,CAAC,uBAAuB,KAAK,WAAW,EACxD,UAAU,CAAC,uBAAuB,qKAAG,cAAA,AAAW,EAC9C,OAAO,CAAC,uBAAuB,CAChC,CAAA;IACH,IAAI,OAAO,OAAO,CAAC,6BAA6B,KAAK,WAAW,EAC9D,UAAU,CAAC,6BAA6B,qKAAG,cAAA,AAAW,EACpD,OAAO,CAAC,6BAA6B,CACtC,CAAA;IACH,IAAI,OAAO,OAAO,CAAC,kBAAkB,KAAK,WAAW,EACnD,UAAU,CAAC,kBAAkB,IAAG,+KAAA,AAAW,EAAC,OAAO,CAAC,kBAAkB,CAAC,CAAA;IACzE,IAAI,OAAO,OAAO,CAAC,MAAM,KAAK,WAAW,EAAE,UAAU,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAA;IAC7E,IAAI,OAAO,OAAO,CAAC,SAAS,KAAK,WAAW,EAC1C,UAAU,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAA;IAC1C,IAAI,OAAO,OAAO,CAAC,oBAAoB,KAAK,WAAW,EACrD,UAAU,CAAC,oBAAoB,qKAAG,cAAA,AAAW,EAAC,OAAO,CAAC,oBAAoB,CAAC,CAAA;IAE7E,OAAO,UAAU,CAAA;AACnB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"file":"getPaymasterData.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/actions/paymaster/getPaymasterData.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Hex } from '../../../types/misc.js'\nimport type { OneOf, PartialBy, Prettify } from '../../../types/utils.js'\nimport { hexToBigInt } from '../../../utils/encoding/fromHex.js'\nimport { numberToHex } from '../../../utils/encoding/toHex.js'\nimport type { UserOperation } from '../../types/userOperation.js'\nimport {\n  type FormatUserOperationRequestErrorType,\n  formatUserOperationRequest,\n} from '../../utils/formatters/userOperationRequest.js'\n\nexport type GetPaymasterDataParameters = OneOf<\n  | PartialBy<\n      Pick<\n        UserOperation<'0.6'>,\n        | 'callData'\n        | 'callGasLimit'\n        | 'initCode'\n        | 'maxFeePerGas'\n        | 'maxPriorityFeePerGas'\n        | 'nonce'\n        | 'sender'\n        | 'preVerificationGas'\n        | 'verificationGasLimit'\n      >,\n      | 'callGasLimit'\n      | 'initCode'\n      | 'maxFeePerGas'\n      | 'maxPriorityFeePerGas'\n      | 'preVerificationGas'\n      | 'verificationGasLimit'\n    >\n  | PartialBy<\n      Pick<\n        UserOperation<'0.7'>,\n        | 'callData'\n        | 'callGasLimit'\n        | 'factory'\n        | 'factoryData'\n        | 'maxFeePerGas'\n        | 'maxPriorityFeePerGas'\n        | 'nonce'\n        | 'sender'\n        | 'preVerificationGas'\n        | 'verificationGasLimit'\n        | 'paymasterPostOpGasLimit'\n        | 'paymasterVerificationGasLimit'\n      >,\n      | 'callGasLimit'\n      | 'factory'\n      | 'factoryData'\n      | 'maxFeePerGas'\n      | 'maxPriorityFeePerGas'\n      | 'preVerificationGas'\n      | 'verificationGasLimit'\n    >\n> & {\n  context?: unknown | undefined\n  chainId: number\n  entryPointAddress: Address\n}\n\nexport type GetPaymasterDataReturnType = Prettify<\n  OneOf<\n    | { paymasterAndData: Hex }\n    | {\n        paymaster: Address\n        paymasterData: Hex\n        paymasterPostOpGasLimit?: bigint | undefined\n        paymasterVerificationGasLimit?: bigint | undefined\n      }\n  >\n>\n\nexport type GetPaymasterDataErrorType =\n  | FormatUserOperationRequestErrorType\n  | ErrorType\n\n/**\n * Retrieves paymaster-related User Operation properties to be used for sending the User Operation.\n *\n * - Docs: https://viem.sh/account-abstraction/actions/paymaster/getPaymasterData\n *\n * @param client - Client to use\n * @param parameters - {@link GetPaymasterDataParameters}\n * @returns Paymaster-related User Operation properties. {@link GetPaymasterDataReturnType}\n *\n * @example\n * import { http } from 'viem'\n * import { createPaymasterClient, getPaymasterData } from 'viem/account-abstraction'\n *\n * const paymasterClient = createPaymasterClient({\n *   transport: http('https://...'),\n * })\n *\n * const userOperation = { ... }\n *\n * const values = await getPaymasterData(paymasterClient, {\n *   chainId: 1,\n *   entryPointAddress: '0x...',\n *   ...userOperation,\n * })\n */\nexport async function getPaymasterData(\n  client: Client<Transport>,\n  parameters: GetPaymasterDataParameters,\n): Promise<GetPaymasterDataReturnType> {\n  const { chainId, entryPointAddress, context, ...userOperation } = parameters\n  const request = formatUserOperationRequest(userOperation)\n  const { paymasterPostOpGasLimit, paymasterVerificationGasLimit, ...rest } =\n    await client.request({\n      method: 'pm_getPaymasterData',\n      params: [\n        {\n          ...request,\n          callGasLimit: request.callGasLimit ?? '0x0',\n          verificationGasLimit: request.verificationGasLimit ?? '0x0',\n          preVerificationGas: request.preVerificationGas ?? '0x0',\n        },\n        entryPointAddress,\n        numberToHex(chainId),\n        context,\n      ],\n    })\n  return {\n    ...rest,\n    ...(paymasterPostOpGasLimit && {\n      paymasterPostOpGasLimit: hexToBigInt(paymasterPostOpGasLimit),\n    }),\n    ...(paymasterVerificationGasLimit && {\n      paymasterVerificationGasLimit: hexToBigInt(paymasterVerificationGasLimit),\n    }),\n  } as unknown as GetPaymasterDataReturnType\n}\n"],"names":[],"mappings":";;;AASA,OAAO,EAEL,0BAA0B,GAC3B,MAAM,gDAAgD,CAAA;AALvD,OAAO,EAAE,WAAW,EAAE,MAAM,kCAAkC,CAAA;AAD9D,OAAO,EAAE,WAAW,EAAE,MAAM,oCAAoC,CAAA;;;;AAoGzD,KAAK,UAAU,gBAAgB,CACpC,MAAyB,EACzB,UAAsC;IAEtC,MAAM,EAAE,OAAO,EAAE,iBAAiB,EAAE,OAAO,EAAE,GAAG,aAAa,EAAE,GAAG,UAAU,CAAA;IAC5E,MAAM,OAAO,gNAAG,6BAA0B,AAA1B,EAA2B,aAAa,CAAC,CAAA;IACzD,MAAM,EAAE,uBAAuB,EAAE,6BAA6B,EAAE,GAAG,IAAI,EAAE,GACvE,MAAM,MAAM,CAAC,OAAO,CAAC;QACnB,MAAM,EAAE,qBAAqB;QAC7B,MAAM,EAAE;YACN;gBACE,GAAG,OAAO;gBACV,YAAY,EAAE,OAAO,CAAC,YAAY,IAAI,KAAK;gBAC3C,oBAAoB,EAAE,OAAO,CAAC,oBAAoB,IAAI,KAAK;gBAC3D,kBAAkB,EAAE,OAAO,CAAC,kBAAkB,IAAI,KAAK;aACxD;YACD,iBAAiB;8KACjB,cAAA,AAAW,EAAC,OAAO,CAAC;YACpB,OAAO;SACR;KACF,CAAC,CAAA;IACJ,OAAO;QACL,GAAG,IAAI;QACP,GAAG,AAAC,uBAAuB,IAAI;YAC7B,uBAAuB,sKAAE,cAAA,AAAW,EAAC,uBAAuB,CAAC;SAC9D,CAAC;QACF,GAAG,AAAC,6BAA6B,IAAI;YACnC,6BAA6B,sKAAE,cAAA,AAAW,EAAC,6BAA6B,CAAC;SAC1E,CAAC;KACsC,CAAA;AAC5C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"file":"getPaymasterStubData.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/actions/paymaster/getPaymasterStubData.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Hex } from '../../../types/misc.js'\nimport type { OneOf, PartialBy, Prettify } from '../../../types/utils.js'\nimport { hexToBigInt } from '../../../utils/encoding/fromHex.js'\nimport { numberToHex } from '../../../utils/encoding/toHex.js'\nimport type { UserOperation } from '../../types/userOperation.js'\nimport {\n  type FormatUserOperationRequestErrorType,\n  formatUserOperationRequest,\n} from '../../utils/formatters/userOperationRequest.js'\n\nexport type GetPaymasterStubDataParameters = OneOf<\n  | PartialBy<\n      Pick<\n        UserOperation<'0.6'>,\n        | 'callData'\n        | 'callGasLimit'\n        | 'initCode'\n        | 'maxFeePerGas'\n        | 'maxPriorityFeePerGas'\n        | 'nonce'\n        | 'sender'\n        | 'preVerificationGas'\n        | 'verificationGasLimit'\n      >,\n      | 'callGasLimit'\n      | 'initCode'\n      | 'maxFeePerGas'\n      | 'maxPriorityFeePerGas'\n      | 'preVerificationGas'\n      | 'verificationGasLimit'\n    >\n  | PartialBy<\n      Pick<\n        UserOperation<'0.7'>,\n        | 'callData'\n        | 'callGasLimit'\n        | 'factory'\n        | 'factoryData'\n        | 'maxFeePerGas'\n        | 'maxPriorityFeePerGas'\n        | 'nonce'\n        | 'sender'\n        | 'preVerificationGas'\n        | 'verificationGasLimit'\n      >,\n      | 'callGasLimit'\n      | 'factory'\n      | 'factoryData'\n      | 'maxFeePerGas'\n      | 'maxPriorityFeePerGas'\n      | 'preVerificationGas'\n      | 'verificationGasLimit'\n    >\n> & {\n  context?: unknown | undefined\n  chainId: number\n  entryPointAddress: Address\n}\n\nexport type GetPaymasterStubDataReturnType = Prettify<\n  OneOf<\n    | { paymasterAndData: Hex }\n    | {\n        paymaster: Address\n        paymasterData: Hex\n        paymasterVerificationGasLimit?: bigint | undefined\n        paymasterPostOpGasLimit: bigint\n      }\n  > & {\n    sponsor?: { name: string; icon?: string | undefined } | undefined\n    isFinal?: boolean | undefined\n  }\n>\n\nexport type GetPaymasterStubDataErrorType =\n  | FormatUserOperationRequestErrorType\n  | ErrorType\n\n/**\n * Retrieves paymaster-related User Operation properties to be used for gas estimation.\n *\n * - Docs: https://viem.sh/account-abstraction/actions/paymaster/getPaymasterStubData\n *\n * @param client - Client to use\n * @param parameters - {@link GetPaymasterStubDataParameters}\n * @returns Paymaster-related User Operation properties. {@link GetPaymasterStubDataReturnType}\n *\n * @example\n * import { http } from 'viem'\n * import { createPaymasterClient, getPaymasterStubData } from 'viem/account-abstraction'\n *\n * const paymasterClient = createPaymasterClient({\n *   transport: http('https://...'),\n * })\n *\n * const userOperation = { ... }\n *\n * const values = await getPaymasterStubData(paymasterClient, {\n *   chainId: 1,\n *   entryPointAddress: '0x...',\n *   ...userOperation,\n * })\n */\nexport async function getPaymasterStubData(\n  client: Client<Transport>,\n  parameters: GetPaymasterStubDataParameters,\n): Promise<GetPaymasterStubDataReturnType> {\n  const { chainId, entryPointAddress, context, ...userOperation } = parameters\n  const request = formatUserOperationRequest(userOperation)\n  const { paymasterPostOpGasLimit, paymasterVerificationGasLimit, ...rest } =\n    await client.request({\n      method: 'pm_getPaymasterStubData',\n      params: [\n        {\n          ...request,\n          callGasLimit: request.callGasLimit ?? '0x0',\n          verificationGasLimit: request.verificationGasLimit ?? '0x0',\n          preVerificationGas: request.preVerificationGas ?? '0x0',\n        },\n        entryPointAddress,\n        numberToHex(chainId),\n        context,\n      ],\n    })\n  return {\n    ...rest,\n    ...(paymasterPostOpGasLimit && {\n      paymasterPostOpGasLimit: hexToBigInt(paymasterPostOpGasLimit),\n    }),\n    ...(paymasterVerificationGasLimit && {\n      paymasterVerificationGasLimit: hexToBigInt(paymasterVerificationGasLimit),\n    }),\n  } as unknown as GetPaymasterStubDataReturnType\n}\n"],"names":[],"mappings":";;;AASA,OAAO,EAEL,0BAA0B,GAC3B,MAAM,gDAAgD,CAAA;AALvD,OAAO,EAAE,WAAW,EAAE,MAAM,kCAAkC,CAAA;AAD9D,OAAO,EAAE,WAAW,EAAE,MAAM,oCAAoC,CAAA;;;;AAqGzD,KAAK,UAAU,oBAAoB,CACxC,MAAyB,EACzB,UAA0C;IAE1C,MAAM,EAAE,OAAO,EAAE,iBAAiB,EAAE,OAAO,EAAE,GAAG,aAAa,EAAE,GAAG,UAAU,CAAA;IAC5E,MAAM,OAAO,gNAAG,6BAA0B,AAA1B,EAA2B,aAAa,CAAC,CAAA;IACzD,MAAM,EAAE,uBAAuB,EAAE,6BAA6B,EAAE,GAAG,IAAI,EAAE,GACvE,MAAM,MAAM,CAAC,OAAO,CAAC;QACnB,MAAM,EAAE,yBAAyB;QACjC,MAAM,EAAE;YACN;gBACE,GAAG,OAAO;gBACV,YAAY,EAAE,OAAO,CAAC,YAAY,IAAI,KAAK;gBAC3C,oBAAoB,EAAE,OAAO,CAAC,oBAAoB,IAAI,KAAK;gBAC3D,kBAAkB,EAAE,OAAO,CAAC,kBAAkB,IAAI,KAAK;aACxD;YACD,iBAAiB;8KACjB,cAAA,AAAW,EAAC,OAAO,CAAC;YACpB,OAAO;SACR;KACF,CAAC,CAAA;IACJ,OAAO;QACL,GAAG,IAAI;QACP,GAAG,AAAC,uBAAuB,IAAI;YAC7B,uBAAuB,sKAAE,cAAA,AAAW,EAAC,uBAAuB,CAAC;SAC9D,CAAC;QACF,GAAG,AAAC,6BAA6B,IAAI;YACnC,6BAA6B,sKAAE,cAAA,AAAW,EAAC,6BAA6B,CAAC;SAC1E,CAAC;KAC0C,CAAA;AAChD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"file":"paymaster.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/clients/decorators/paymaster.ts"],"sourcesContent":["import type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport {\n  type GetPaymasterDataParameters,\n  type GetPaymasterDataReturnType,\n  getPaymasterData,\n} from '../../actions/paymaster/getPaymasterData.js'\nimport {\n  type GetPaymasterStubDataParameters,\n  type GetPaymasterStubDataReturnType,\n  getPaymasterStubData,\n} from '../../actions/paymaster/getPaymasterStubData.js'\n\nexport type PaymasterActions = {\n  /**\n   * Retrieves paymaster-related User Operation properties to be used for sending the User Operation.\n   *\n   * - Docs: https://viem.sh/account-abstraction/actions/paymaster/getPaymasterData\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetPaymasterDataParameters}\n   * @returns Paymaster-related User Operation properties. {@link GetPaymasterDataReturnType}\n   *\n   * @example\n   * import { http } from 'viem'\n   * import { createPaymasterClient } from 'viem/account-abstraction'\n   *\n   * const paymasterClient = createPaymasterClient({\n   *   transport: http('https://...'),\n   * })\n   *\n   * const userOperation = { ... }\n   *\n   * const values = await paymasterClient.getPaymasterData({\n   *   chainId: 1,\n   *   entryPointAddress: '0x...',\n   *   ...userOperation,\n   * })\n   */\n  getPaymasterData: (\n    parameters: GetPaymasterDataParameters,\n  ) => Promise<GetPaymasterDataReturnType>\n  /**\n   * Retrieves paymaster-related User Operation properties to be used for gas estimation.\n   *\n   * - Docs: https://viem.sh/account-abstraction/actions/paymaster/getPaymasterStubData\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetPaymasterStubDataParameters}\n   * @returns Paymaster-related User Operation properties. {@link GetPaymasterStubDataReturnType}\n   *\n   * @example\n   * import { http } from 'viem'\n   * import { createPaymasterClient } from 'viem/account-abstraction'\n   *\n   * const paymasterClient = createPaymasterClient({\n   *   transport: http('https://...'),\n   * })\n   *\n   * const userOperation = { ... }\n   *\n   * const values = await paymasterClient.getPaymasterStubData({\n   *   chainId: 1,\n   *   entryPointAddress: '0x...',\n   *   ...userOperation,\n   * })\n   */\n  getPaymasterStubData: (\n    parameters: GetPaymasterStubDataParameters,\n  ) => Promise<GetPaymasterStubDataReturnType>\n}\n\nexport function paymasterActions<transport extends Transport = Transport>(\n  client: Client<transport>,\n): PaymasterActions {\n  return {\n    getPaymasterData: (parameters) => getPaymasterData(client, parameters),\n    getPaymasterStubData: (parameters) =>\n      getPaymasterStubData(client, parameters),\n  }\n}\n"],"names":[],"mappings":";;;AAEA,OAAO,EAGL,gBAAgB,GACjB,MAAM,6CAA6C,CAAA;AACpD,OAAO,EAGL,oBAAoB,GACrB,MAAM,iDAAiD,CAAA;;;AA6DlD,SAAU,gBAAgB,CAC9B,MAAyB;IAEzB,OAAO;QACL,gBAAgB,EAAE,CAAC,UAAU,EAAE,EAAE,yMAAC,mBAAA,AAAgB,EAAC,MAAM,EAAE,UAAU,CAAC;QACtE,oBAAoB,EAAE,CAAC,UAAU,EAAE,EAAE,6MACnC,uBAAA,AAAoB,EAAC,MAAM,EAAE,UAAU,CAAC;KAC3C,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 424, "column": 0}, "map": {"version":3,"file":"createPaymasterClient.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/clients/createPaymasterClient.ts"],"sourcesContent":["import {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  createClient,\n} from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { PaymasterRpcSchema, RpcSchema } from '../../types/eip1193.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type PaymasterActions,\n  paymasterActions,\n} from './decorators/paymaster.js'\n\nexport type PaymasterClientConfig<\n  transport extends Transport = Transport,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, undefined, undefined, rpcSchema>,\n    'cacheTime' | 'key' | 'name' | 'pollingInterval' | 'rpcSchema' | 'transport'\n  >\n>\n\nexport type PaymasterClient<\n  transport extends Transport = Transport,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Client<\n    transport,\n    undefined,\n    undefined,\n    rpcSchema extends RpcSchema\n      ? [...PaymasterRpcSchema, ...rpcSchema]\n      : PaymasterRpcSchema,\n    PaymasterActions\n  >\n>\n\nexport type CreatePaymasterClientErrorType = CreateClientErrorType | ErrorType\n\n/**\n * Creates a Paymaster Client.\n *\n * - Docs: https://viem.sh/account-abstraction/clients/paymaster\n *\n * @param config - {@link PaymasterClientConfig}\n * @returns A Paymaster Client. {@link PaymasterClient}\n *\n * @example\n * import { http } from 'viem'\n * import { createPaymasterClient } from 'viem/account-abstraction'\n *\n * const paymasterClient = createPaymasterClient({\n *   transport: http('https://...'),\n * })\n */\nexport function createPaymasterClient<\n  transport extends Transport,\n  rpcSchema extends RpcSchema | undefined = undefined,\n>(\n  parameters: PaymasterClientConfig<transport, rpcSchema>,\n): PaymasterClient<transport, rpcSchema>\n\nexport function createPaymasterClient(\n  parameters: PaymasterClientConfig,\n): PaymasterClient {\n  const { key = 'bundler', name = 'Bundler Client', transport } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    transport,\n    type: 'PaymasterClient',\n  })\n  return client.extend(paymasterActions)\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAIL,YAAY,GACb,MAAM,+BAA+B,CAAA;AAKtC,OAAO,EAEL,gBAAgB,GACjB,MAAM,2BAA2B,CAAA;;;AAoD5B,SAAU,qBAAqB,CACnC,UAAiC;IAEjC,MAAM,EAAE,GAAG,GAAG,SAAS,EAAE,IAAI,GAAG,gBAAgB,EAAE,SAAS,EAAE,GAAG,UAAU,CAAA;IAC1E,MAAM,MAAM,GAAG,8KAAA,AAAY,EAAC;QAC1B,GAAG,UAAU;QACb,GAAG;QACH,IAAI;QACJ,SAAS;QACT,IAAI,EAAE,iBAAiB;KACxB,CAAC,CAAA;IACF,OAAO,MAAM,CAAC,MAAM,iMAAC,mBAAgB,CAAC,CAAA;AACxC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 448, "column": 0}, "map": {"version":3,"file":"prepareUserOperation.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/actions/bundler/prepareUserOperation.ts"],"sourcesContent":["import type { Address, Narrow } from 'abitype'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../../accounts/utils/parseAccount.js'\nimport {\n  type EstimateFeesPerGasErrorType,\n  estimateFeesPerGas,\n} from '../../../actions/public/estimateFeesPerGas.js'\nimport { getChainId as getChainId_ } from '../../../actions/public/getChainId.js'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../../errors/account.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Call, Calls } from '../../../types/calls.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { Hex } from '../../../types/misc.js'\nimport type { StateOverride } from '../../../types/stateOverride.js'\nimport type {\n  Assign,\n  OneOf,\n  Prettify,\n  UnionOmit,\n} from '../../../types/utils.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../../utils/abi/encodeFunctionData.js'\nimport { type ConcatErrorType, concat } from '../../../utils/data/concat.js'\nimport { getAction } from '../../../utils/getAction.js'\nimport type { SmartAccount } from '../../accounts/types.js'\nimport type { BundlerClient } from '../../clients/createBundlerClient.js'\nimport type { PaymasterActions } from '../../clients/decorators/paymaster.js'\nimport type {\n  DeriveSmartAccount,\n  GetSmartAccountParameter,\n} from '../../types/account.js'\nimport type {\n  DeriveEntryPointVersion,\n  EntryPointVersion,\n} from '../../types/entryPointVersion.js'\nimport type {\n  UserOperation,\n  UserOperationRequest,\n} from '../../types/userOperation.js'\nimport {\n  type GetPaymasterDataErrorType,\n  getPaymasterData as getPaymasterData_,\n} from '../paymaster/getPaymasterData.js'\nimport {\n  type GetPaymasterStubDataErrorType,\n  getPaymasterStubData as getPaymasterStubData_,\n} from '../paymaster/getPaymasterStubData.js'\nimport {\n  type EstimateUserOperationGasParameters,\n  estimateUserOperationGas,\n} from './estimateUserOperationGas.js'\n\nconst defaultParameters = [\n  'factory',\n  'fees',\n  'gas',\n  'paymaster',\n  'nonce',\n  'signature',\n] as const\n\nexport type PrepareUserOperationParameterType =\n  | 'factory'\n  | 'fees'\n  | 'gas'\n  | 'paymaster'\n  | 'nonce'\n  | 'signature'\n\ntype FactoryProperties<\n  entryPointVersion extends EntryPointVersion = EntryPointVersion,\n> =\n  | (entryPointVersion extends '0.7'\n      ? {\n          factory: UserOperation['factory']\n          factoryData: UserOperation['factoryData']\n        }\n      : never)\n  | (entryPointVersion extends '0.6'\n      ? {\n          initCode: UserOperation['initCode']\n        }\n      : never)\n\ntype GasProperties<\n  entryPointVersion extends EntryPointVersion = EntryPointVersion,\n> =\n  | (entryPointVersion extends '0.7'\n      ? {\n          callGasLimit: UserOperation['callGasLimit']\n          preVerificationGas: UserOperation['preVerificationGas']\n          verificationGasLimit: UserOperation['verificationGasLimit']\n          paymasterPostOpGasLimit: UserOperation['paymasterPostOpGasLimit']\n          paymasterVerificationGasLimit: UserOperation['paymasterVerificationGasLimit']\n        }\n      : never)\n  | (entryPointVersion extends '0.6'\n      ? {\n          callGasLimit: UserOperation['callGasLimit']\n          preVerificationGas: UserOperation['preVerificationGas']\n          verificationGasLimit: UserOperation['verificationGasLimit']\n        }\n      : never)\n\ntype FeeProperties = {\n  maxFeePerGas: UserOperation['maxFeePerGas']\n  maxPriorityFeePerGas: UserOperation['maxPriorityFeePerGas']\n}\n\ntype NonceProperties = {\n  nonce: UserOperation['nonce']\n}\n\ntype PaymasterProperties<\n  entryPointVersion extends EntryPointVersion = EntryPointVersion,\n> =\n  | (entryPointVersion extends '0.7'\n      ? {\n          paymaster: UserOperation['paymaster']\n          paymasterData: UserOperation['paymasterData']\n          paymasterPostOpGasLimit: UserOperation['paymasterPostOpGasLimit']\n          paymasterVerificationGasLimit: UserOperation['paymasterVerificationGasLimit']\n        }\n      : never)\n  | (entryPointVersion extends '0.6'\n      ? {\n          paymasterAndData: UserOperation['paymasterAndData']\n        }\n      : never)\n\ntype SignatureProperties = {\n  signature: UserOperation['signature']\n}\n\nexport type PrepareUserOperationRequest<\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n  accountOverride extends SmartAccount | undefined = SmartAccount | undefined,\n  calls extends readonly unknown[] = readonly unknown[],\n  //\n  _derivedAccount extends SmartAccount | undefined = DeriveSmartAccount<\n    account,\n    accountOverride\n  >,\n  _derivedVersion extends\n    EntryPointVersion = DeriveEntryPointVersion<_derivedAccount>,\n> = Assign<\n  UserOperationRequest<_derivedVersion>,\n  OneOf<{ calls: Calls<Narrow<calls>> } | { callData: Hex }> & {\n    parameters?: readonly PrepareUserOperationParameterType[] | undefined\n    paymaster?:\n      | Address\n      | true\n      | {\n          /** Retrieves paymaster-related User Operation properties to be used for sending the User Operation. */\n          getPaymasterData?: PaymasterActions['getPaymasterData'] | undefined\n          /** Retrieves paymaster-related User Operation properties to be used for gas estimation. */\n          getPaymasterStubData?:\n            | PaymasterActions['getPaymasterStubData']\n            | undefined\n        }\n      | undefined\n    /** Paymaster context to pass to `getPaymasterData` and `getPaymasterStubData` calls. */\n    paymasterContext?: unknown | undefined\n    /** State overrides for the User Operation call. */\n    stateOverride?: StateOverride | undefined\n  }\n>\n\nexport type PrepareUserOperationParameters<\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n  accountOverride extends SmartAccount | undefined = SmartAccount | undefined,\n  calls extends readonly unknown[] = readonly unknown[],\n  request extends PrepareUserOperationRequest<\n    account,\n    accountOverride,\n    calls\n  > = PrepareUserOperationRequest<account, accountOverride, calls>,\n> = request & GetSmartAccountParameter<account, accountOverride>\n\nexport type PrepareUserOperationReturnType<\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n  accountOverride extends SmartAccount | undefined = SmartAccount | undefined,\n  calls extends readonly unknown[] = readonly unknown[],\n  request extends PrepareUserOperationRequest<\n    account,\n    accountOverride,\n    calls\n  > = PrepareUserOperationRequest<account, accountOverride, calls>,\n  //\n  _parameters extends\n    PrepareUserOperationParameterType = request['parameters'] extends readonly PrepareUserOperationParameterType[]\n    ? request['parameters'][number]\n    : (typeof defaultParameters)[number],\n  _derivedAccount extends SmartAccount | undefined = DeriveSmartAccount<\n    account,\n    accountOverride\n  >,\n  _derivedVersion extends\n    EntryPointVersion = DeriveEntryPointVersion<_derivedAccount>,\n> = Prettify<\n  UnionOmit<request, 'calls' | 'parameters'> & {\n    callData: Hex\n    paymasterAndData: _derivedVersion extends '0.6' ? Hex : undefined\n    sender: UserOperation['sender']\n  } & (Extract<_parameters, 'factory'> extends never\n      ? {}\n      : FactoryProperties<_derivedVersion>) &\n    (Extract<_parameters, 'nonce'> extends never ? {} : NonceProperties) &\n    (Extract<_parameters, 'fees'> extends never ? {} : FeeProperties) &\n    (Extract<_parameters, 'gas'> extends never\n      ? {}\n      : GasProperties<_derivedVersion>) &\n    (Extract<_parameters, 'paymaster'> extends never\n      ? {}\n      : PaymasterProperties<_derivedVersion>) &\n    (Extract<_parameters, 'signature'> extends never ? {} : SignatureProperties)\n>\n\nexport type PrepareUserOperationErrorType =\n  | ParseAccountErrorType\n  | GetPaymasterStubDataErrorType\n  | GetPaymasterDataErrorType\n  | EncodeFunctionDataErrorType\n  | ConcatErrorType\n  | EstimateFeesPerGasErrorType\n  | ErrorType\n\n/**\n * Prepares a User Operation and fills in missing properties.\n *\n * - Docs: https://viem.sh/actions/bundler/prepareUserOperation\n *\n * @param args - {@link PrepareUserOperationParameters}\n * @returns The User Operation. {@link PrepareUserOperationReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { toSmartAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareUserOperation } from 'viem/actions'\n *\n * const account = await toSmartAccount({ ... })\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const request = await prepareUserOperation(client, {\n *   account,\n *   calls: [{ to: '0x...', value: parseEther('1') }],\n * })\n */\nexport async function prepareUserOperation<\n  account extends SmartAccount | undefined,\n  const calls extends readonly unknown[],\n  const request extends PrepareUserOperationRequest<\n    account,\n    accountOverride,\n    calls\n  >,\n  accountOverride extends SmartAccount | undefined = undefined,\n>(\n  client: Client<Transport, Chain | undefined, account>,\n  parameters_: PrepareUserOperationParameters<\n    account,\n    accountOverride,\n    calls,\n    request\n  >,\n): Promise<\n  PrepareUserOperationReturnType<account, accountOverride, calls, request>\n> {\n  const parameters = parameters_ as PrepareUserOperationParameters\n  const {\n    account: account_ = client.account,\n    parameters: properties = defaultParameters,\n    stateOverride,\n  } = parameters\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Assert that an Account is defined.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  if (!account_) throw new AccountNotFoundError()\n  const account = parseAccount(account_)\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Declare typed Bundler Client.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  const bundlerClient = client as unknown as BundlerClient\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Declare Paymaster properties.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  const paymaster = parameters.paymaster ?? bundlerClient?.paymaster\n  const paymasterAddress = typeof paymaster === 'string' ? paymaster : undefined\n  const { getPaymasterStubData, getPaymasterData } = (() => {\n    // If `paymaster: true`, we will assume the Bundler Client supports Paymaster Actions.\n    if (paymaster === true)\n      return {\n        getPaymasterStubData: (parameters: any) =>\n          getAction(\n            bundlerClient,\n            getPaymasterStubData_,\n            'getPaymasterStubData',\n          )(parameters),\n        getPaymasterData: (parameters: any) =>\n          getAction(\n            bundlerClient,\n            getPaymasterData_,\n            'getPaymasterData',\n          )(parameters),\n      }\n\n    // If Actions are passed to `paymaster` (via Paymaster Client or directly), we will use them.\n    if (typeof paymaster === 'object') {\n      const { getPaymasterStubData, getPaymasterData } = paymaster\n      return {\n        getPaymasterStubData: (getPaymasterData && getPaymasterStubData\n          ? getPaymasterStubData\n          : getPaymasterData) as typeof getPaymasterStubData,\n        getPaymasterData:\n          getPaymasterData && getPaymasterStubData\n            ? getPaymasterData\n            : undefined,\n      }\n    }\n\n    // No Paymaster functions.\n    return {\n      getPaymasterStubData: undefined,\n      getPaymasterData: undefined,\n    }\n  })()\n  const paymasterContext = parameters.paymasterContext\n    ? parameters.paymasterContext\n    : bundlerClient?.paymasterContext\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Set up the User Operation request.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  let request = {\n    ...parameters,\n    paymaster: paymasterAddress,\n    sender: account.address,\n  } as PrepareUserOperationRequest\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Concurrently prepare properties required to fill the User Operation.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  const [callData, factory, fees, nonce] = await Promise.all([\n    (async () => {\n      if (parameters.calls)\n        return account.encodeCalls(\n          parameters.calls.map((call_) => {\n            const call = call_ as Call\n            if (call.abi)\n              return {\n                data: encodeFunctionData(call),\n                to: call.to,\n                value: call.value,\n              } as Call\n            return call as Call\n          }),\n        )\n      return parameters.callData\n    })(),\n    (async () => {\n      if (!properties.includes('factory')) return undefined\n      if (parameters.initCode) return { initCode: parameters.initCode }\n      if (parameters.factory && parameters.factoryData) {\n        return {\n          factory: parameters.factory,\n          factoryData: parameters.factoryData,\n        }\n      }\n\n      const { factory, factoryData } = await account.getFactoryArgs()\n\n      if (account.entryPoint.version === '0.6')\n        return {\n          initCode:\n            factory && factoryData ? concat([factory, factoryData]) : undefined,\n        }\n      return {\n        factory,\n        factoryData,\n      }\n    })(),\n    (async () => {\n      if (!properties.includes('fees')) return undefined\n\n      // If we have sufficient properties for fees, return them.\n      if (\n        typeof parameters.maxFeePerGas === 'bigint' &&\n        typeof parameters.maxPriorityFeePerGas === 'bigint'\n      )\n        return request\n\n      // If the Bundler Client has a `estimateFeesPerGas` hook, run it.\n      if (bundlerClient?.userOperation?.estimateFeesPerGas) {\n        const fees = await bundlerClient.userOperation.estimateFeesPerGas({\n          account,\n          bundlerClient,\n          userOperation: request as UserOperation,\n        })\n        return {\n          ...request,\n          ...fees,\n        }\n      }\n\n      // Otherwise, we will need to estimate the fees to fill the fee properties.\n      try {\n        const client_ = bundlerClient.client ?? client\n        const fees = await getAction(\n          client_,\n          estimateFeesPerGas,\n          'estimateFeesPerGas',\n        )({\n          chain: client_.chain,\n          type: 'eip1559',\n        })\n        return {\n          maxFeePerGas:\n            typeof parameters.maxFeePerGas === 'bigint'\n              ? parameters.maxFeePerGas\n              : BigInt(\n                  // Bundlers unfortunately have strict rules on fee prechecks – we will need to set a generous buffer.\n                  2n * fees.maxFeePerGas,\n                ),\n          maxPriorityFeePerGas:\n            typeof parameters.maxPriorityFeePerGas === 'bigint'\n              ? parameters.maxPriorityFeePerGas\n              : BigInt(\n                  // Bundlers unfortunately have strict rules on fee prechecks – we will need to set a generous buffer.\n                  2n * fees.maxPriorityFeePerGas,\n                ),\n        }\n      } catch {\n        return undefined\n      }\n    })(),\n    (async () => {\n      if (!properties.includes('nonce')) return undefined\n      if (typeof parameters.nonce === 'bigint') return parameters.nonce\n      return account.getNonce()\n    })(),\n  ])\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Fill User Operation with the prepared properties from above.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  if (typeof callData !== 'undefined') request.callData = callData\n  if (typeof factory !== 'undefined')\n    request = { ...request, ...(factory as any) }\n  if (typeof fees !== 'undefined') request = { ...request, ...(fees as any) }\n  if (typeof nonce !== 'undefined') request.nonce = nonce\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Fill User Operation with the `signature` property.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  if (properties.includes('signature')) {\n    if (typeof parameters.signature !== 'undefined')\n      request.signature = parameters.signature\n    else\n      request.signature = await account.getStubSignature(\n        request as UserOperation,\n      )\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // `initCode` is required to be filled with EntryPoint 0.6.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  // If no `initCode` is provided, we use an empty bytes string.\n  if (account.entryPoint.version === '0.6' && !request.initCode)\n    request.initCode = '0x'\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Fill User Operation with paymaster-related properties for **gas estimation**.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  let chainId: number | undefined\n  async function getChainId(): Promise<number> {\n    if (chainId) return chainId\n    if (client.chain) return client.chain.id\n    const chainId_ = await getAction(client, getChainId_, 'getChainId')({})\n    chainId = chainId_\n    return chainId\n  }\n\n  // If the User Operation is intended to be sponsored, we will need to fill the paymaster-related\n  // User Operation properties required to estimate the User Operation gas.\n  let isPaymasterPopulated = false\n  if (\n    properties.includes('paymaster') &&\n    getPaymasterStubData &&\n    !paymasterAddress &&\n    !parameters.paymasterAndData\n  ) {\n    const {\n      isFinal = false,\n      sponsor,\n      ...paymasterArgs\n    } = await getPaymasterStubData({\n      chainId: await getChainId(),\n      entryPointAddress: account.entryPoint.address,\n      context: paymasterContext,\n      ...(request as UserOperation),\n    })\n    isPaymasterPopulated = isFinal\n    request = {\n      ...request,\n      ...paymasterArgs,\n    } as PrepareUserOperationRequest\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // `paymasterAndData` is required to be filled with EntryPoint 0.6.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  // If no `paymasterAndData` is provided, we use an empty bytes string.\n  if (account.entryPoint.version === '0.6' && !request.paymasterAndData)\n    request.paymasterAndData = '0x'\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Fill User Operation with gas-related properties.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  if (properties.includes('gas')) {\n    // If the Account has opinionated gas estimation logic, run the `estimateGas` hook and\n    // fill the request with the prepared gas properties.\n    if (account.userOperation?.estimateGas) {\n      const gas = await account.userOperation.estimateGas(\n        request as UserOperation,\n      )\n      request = {\n        ...request,\n        ...gas,\n      } as PrepareUserOperationRequest\n    }\n\n    // If not all the gas properties are already populated, we will need to estimate the gas\n    // to fill the gas properties.\n    if (\n      typeof request.callGasLimit === 'undefined' ||\n      typeof request.preVerificationGas === 'undefined' ||\n      typeof request.verificationGasLimit === 'undefined' ||\n      (request.paymaster &&\n        typeof request.paymasterPostOpGasLimit === 'undefined') ||\n      (request.paymaster &&\n        typeof request.paymasterVerificationGasLimit === 'undefined')\n    ) {\n      const gas = await getAction(\n        bundlerClient,\n        estimateUserOperationGas,\n        'estimateUserOperationGas',\n      )({\n        account,\n        // Some Bundlers fail if nullish gas values are provided for gas estimation :') –\n        // so we will need to set a default zeroish value.\n        callGasLimit: 0n,\n        preVerificationGas: 0n,\n        verificationGasLimit: 0n,\n        stateOverride,\n        ...(request.paymaster\n          ? {\n              paymasterPostOpGasLimit: 0n,\n              paymasterVerificationGasLimit: 0n,\n            }\n          : {}),\n        ...request,\n      } as EstimateUserOperationGasParameters)\n      request = {\n        ...request,\n        callGasLimit: request.callGasLimit ?? gas.callGasLimit,\n        preVerificationGas:\n          request.preVerificationGas ?? gas.preVerificationGas,\n        verificationGasLimit:\n          request.verificationGasLimit ?? gas.verificationGasLimit,\n        paymasterPostOpGasLimit:\n          request.paymasterPostOpGasLimit ?? gas.paymasterPostOpGasLimit,\n        paymasterVerificationGasLimit:\n          request.paymasterVerificationGasLimit ??\n          gas.paymasterVerificationGasLimit,\n      } as PrepareUserOperationRequest\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Fill User Operation with paymaster-related properties for **sending** the User Operation.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  // If the User Operation is intended to be sponsored, we will need to fill the paymaster-related\n  // User Operation properties required to send the User Operation.\n  if (\n    properties.includes('paymaster') &&\n    getPaymasterData &&\n    !paymasterAddress &&\n    !parameters.paymasterAndData &&\n    !isPaymasterPopulated\n  ) {\n    // Retrieve paymaster-related User Operation properties to be used for **sending** the User Operation.\n    const paymaster = await getPaymasterData({\n      chainId: await getChainId(),\n      entryPointAddress: account.entryPoint.address,\n      context: paymasterContext,\n      ...(request as UserOperation),\n    })\n    request = {\n      ...request,\n      ...paymaster,\n    } as PrepareUserOperationRequest\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Remove redundant properties that do not conform to the User Operation schema.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  delete request.calls\n  delete request.parameters\n  delete request.paymasterContext\n  if (typeof request.paymaster !== 'string') delete request.paymaster\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  return request as unknown as PrepareUserOperationReturnType<\n    account,\n    accountOverride,\n    calls,\n    request\n  >\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 728, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 734, "column": 0}, "map": {"version":3,"file":"userOperationGas.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/utils/formatters/userOperationGas.ts"],"sourcesContent":["import type { ErrorType } from '../../../errors/utils.js'\nimport type { RpcEstimateUserOperationGasReturnType } from '../../types/rpc.js'\nimport type { EstimateUserOperationGasReturnType } from '../../types/userOperation.js'\n\nexport type FormatUserOperationGasErrorType = ErrorType\n\nexport function formatUserOperationGas(\n  parameters: RpcEstimateUserOperationGasReturnType,\n): EstimateUserOperationGasReturnType {\n  const gas = {} as EstimateUserOperationGasReturnType\n\n  if (parameters.callGasLimit)\n    gas.callGasLimit = BigInt(parameters.callGasLimit)\n  if (parameters.preVerificationGas)\n    gas.preVerificationGas = BigInt(parameters.preVerificationGas)\n  if (parameters.verificationGasLimit)\n    gas.verificationGasLimit = BigInt(parameters.verificationGasLimit)\n  if (parameters.paymasterPostOpGasLimit)\n    gas.paymasterPostOpGasLimit = BigInt(parameters.paymasterPostOpGasLimit)\n  if (parameters.paymasterVerificationGasLimit)\n    gas.paymasterVerificationGasLimit = BigInt(\n      parameters.paymasterVerificationGasLimit,\n    )\n\n  return gas\n}\n"],"names":[],"mappings":";;;AAMM,SAAU,sBAAsB,CACpC,UAAiD;IAEjD,MAAM,GAAG,GAAG,CAAA,CAAwC,CAAA;IAEpD,IAAI,UAAU,CAAC,YAAY,EACzB,GAAG,CAAC,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,CAAA;IACpD,IAAI,UAAU,CAAC,kBAAkB,EAC/B,GAAG,CAAC,kBAAkB,GAAG,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAA;IAChE,IAAI,UAAU,CAAC,oBAAoB,EACjC,GAAG,CAAC,oBAAoB,GAAG,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAA;IACpE,IAAI,UAAU,CAAC,uBAAuB,EACpC,GAAG,CAAC,uBAAuB,GAAG,MAAM,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAA;IAC1E,IAAI,UAAU,CAAC,6BAA6B,EAC1C,GAAG,CAAC,6BAA6B,GAAG,MAAM,CACxC,UAAU,CAAC,6BAA6B,CACzC,CAAA;IAEH,OAAO,GAAG,CAAA;AACZ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 746, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 752, "column": 0}, "map": {"version":3,"file":"bundler.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/errors/bundler.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport { BaseError } from '../../errors/base.js'\nimport type { Hex } from '../../types/misc.js'\n\nexport type AccountNotDeployedErrorType = AccountNotDeployedError & {\n  name: 'AccountNotDeployedError'\n}\nexport class AccountNotDeployedError extends BaseError {\n  static message = /aa20/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Smart Account is not deployed.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- No `factory`/`factoryData` or `initCode` properties are provided for Smart Account deployment.',\n        '- An incorrect `sender` address is provided.',\n      ],\n      name: 'AccountNotDeployedError',\n    })\n  }\n}\n\nexport type ExecutionRevertedErrorType = ExecutionRevertedError & {\n  code: -32521\n  name: 'ExecutionRevertedError'\n}\nexport class ExecutionRevertedError extends BaseError {\n  static code = -32521\n  static message = /execution reverted/\n\n  data?: { revertData?: Hex } | undefined\n\n  constructor({\n    cause,\n    data,\n    message,\n  }: {\n    cause?: BaseError | undefined\n    data?: { revertData?: Hex } | undefined\n    message?: string | undefined\n  } = {}) {\n    const reason = message\n      ?.replace('execution reverted: ', '')\n      ?.replace('execution reverted', '')\n    super(\n      `Execution reverted ${\n        reason ? `with reason: ${reason}` : 'for an unknown reason'\n      }.`,\n      {\n        cause,\n        name: 'ExecutionRevertedError',\n      },\n    )\n\n    this.data = data\n  }\n}\n\nexport type FailedToSendToBeneficiaryErrorType =\n  FailedToSendToBeneficiaryError & {\n    name: 'FailedToSendToBeneficiaryError'\n  }\nexport class FailedToSendToBeneficiaryError extends BaseError {\n  static message = /aa91/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Failed to send funds to beneficiary.', {\n      cause,\n      name: 'FailedToSendToBeneficiaryError',\n    })\n  }\n}\n\nexport type GasValuesOverflowErrorType = GasValuesOverflowError & {\n  name: 'GasValuesOverflowError'\n}\nexport class GasValuesOverflowError extends BaseError {\n  static message = /aa94/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Gas value overflowed.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- one of the gas values exceeded 2**120 (uint120)',\n      ].filter(Boolean) as string[],\n      name: 'GasValuesOverflowError',\n    })\n  }\n}\n\nexport type HandleOpsOutOfGasErrorType = HandleOpsOutOfGasError & {\n  name: 'HandleOpsOutOfGasError'\n}\nexport class HandleOpsOutOfGasError extends BaseError {\n  static message = /aa95/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super(\n      'The `handleOps` function was called by the Bundler with a gas limit too low.',\n      {\n        cause,\n        name: 'HandleOpsOutOfGasError',\n      },\n    )\n  }\n}\n\nexport type InitCodeFailedErrorType = InitCodeFailedError & {\n  name: 'InitCodeFailedError'\n}\nexport class InitCodeFailedError extends BaseError {\n  static message = /aa13/\n  constructor({\n    cause,\n    factory,\n    factoryData,\n    initCode,\n  }: {\n    cause?: BaseError | undefined\n    factory?: Address | undefined\n    factoryData?: Hex | undefined\n    initCode?: Hex | undefined\n  }) {\n    super('Failed to simulate deployment for Smart Account.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- Invalid `factory`/`factoryData` or `initCode` properties are present',\n        '- Smart Account deployment execution ran out of gas (low `verificationGasLimit` value)',\n        '- Smart Account deployment execution reverted with an error\\n',\n        factory && `factory: ${factory}`,\n        factoryData && `factoryData: ${factoryData}`,\n        initCode && `initCode: ${initCode}`,\n      ].filter(Boolean) as string[],\n      name: 'InitCodeFailedError',\n    })\n  }\n}\n\nexport type InitCodeMustCreateSenderErrorType =\n  InitCodeMustCreateSenderError & {\n    name: 'InitCodeMustCreateSenderError'\n  }\nexport class InitCodeMustCreateSenderError extends BaseError {\n  static message = /aa15/\n  constructor({\n    cause,\n    factory,\n    factoryData,\n    initCode,\n  }: {\n    cause?: BaseError | undefined\n    factory?: Address | undefined\n    factoryData?: Hex | undefined\n    initCode?: Hex | undefined\n  }) {\n    super(\n      'Smart Account initialization implementation did not create an account.',\n      {\n        cause,\n        metaMessages: [\n          'This could arise when:',\n          '- `factory`/`factoryData` or `initCode` properties are invalid',\n          '- Smart Account initialization implementation is incorrect\\n',\n          factory && `factory: ${factory}`,\n          factoryData && `factoryData: ${factoryData}`,\n          initCode && `initCode: ${initCode}`,\n        ].filter(Boolean) as string[],\n        name: 'InitCodeMustCreateSenderError',\n      },\n    )\n  }\n}\n\nexport type InitCodeMustReturnSenderErrorType =\n  InitCodeMustReturnSenderError & {\n    name: 'InitCodeMustReturnSenderError'\n  }\nexport class InitCodeMustReturnSenderError extends BaseError {\n  static message = /aa14/\n  constructor({\n    cause,\n    factory,\n    factoryData,\n    initCode,\n    sender,\n  }: {\n    cause?: BaseError | undefined\n    factory?: Address | undefined\n    factoryData?: Hex | undefined\n    initCode?: Hex | undefined\n    sender?: Address | undefined\n  }) {\n    super(\n      'Smart Account initialization implementation does not return the expected sender.',\n      {\n        cause,\n        metaMessages: [\n          'This could arise when:',\n          'Smart Account initialization implementation does not return a sender address\\n',\n          factory && `factory: ${factory}`,\n          factoryData && `factoryData: ${factoryData}`,\n          initCode && `initCode: ${initCode}`,\n          sender && `sender: ${sender}`,\n        ].filter(Boolean) as string[],\n        name: 'InitCodeMustReturnSenderError',\n      },\n    )\n  }\n}\n\nexport type InsufficientPrefundErrorType = InsufficientPrefundError & {\n  name: 'InsufficientPrefundError'\n}\nexport class InsufficientPrefundError extends BaseError {\n  static message = /aa21/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super(\n      'Smart Account does not have sufficient funds to execute the User Operation.',\n      {\n        cause,\n        metaMessages: [\n          'This could arise when:',\n          '- the Smart Account does not have sufficient funds to cover the required prefund, or',\n          '- a Paymaster was not provided',\n        ].filter(Boolean) as string[],\n        name: 'InsufficientPrefundError',\n      },\n    )\n  }\n}\n\nexport type InternalCallOnlyErrorType = InternalCallOnlyError & {\n  name: 'InternalCallOnlyError'\n}\nexport class InternalCallOnlyError extends BaseError {\n  static message = /aa92/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Bundler attempted to call an invalid function on the EntryPoint.', {\n      cause,\n      name: 'InternalCallOnlyError',\n    })\n  }\n}\n\nexport type InvalidAggregatorErrorType = InvalidAggregatorError & {\n  name: 'InvalidAggregatorError'\n}\nexport class InvalidAggregatorError extends BaseError {\n  static message = /aa96/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super(\n      'Bundler used an invalid aggregator for handling aggregated User Operations.',\n      {\n        cause,\n        name: 'InvalidAggregatorError',\n      },\n    )\n  }\n}\n\nexport type InvalidAccountNonceErrorType = InvalidAccountNonceError & {\n  name: 'InvalidAccountNonceError'\n}\nexport class InvalidAccountNonceError extends BaseError {\n  static message = /aa25/\n  constructor({\n    cause,\n    nonce,\n  }: {\n    cause?: BaseError | undefined\n    nonce?: bigint | undefined\n  }) {\n    super('Invalid Smart Account nonce used for User Operation.', {\n      cause,\n      metaMessages: [nonce && `nonce: ${nonce}`].filter(Boolean) as string[],\n      name: 'InvalidAccountNonceError',\n    })\n  }\n}\n\nexport type InvalidBeneficiaryErrorType = InvalidBeneficiaryError & {\n  name: 'InvalidBeneficiaryError'\n}\nexport class InvalidBeneficiaryError extends BaseError {\n  static message = /aa90/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Bundler has not set a beneficiary address.', {\n      cause,\n      name: 'InvalidBeneficiaryError',\n    })\n  }\n}\n\nexport type InvalidFieldsErrorType = InvalidFieldsError & {\n  name: 'InvalidFieldsError'\n}\nexport class InvalidFieldsError extends BaseError {\n  static code = -32602\n\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Invalid fields set on User Operation.', {\n      cause,\n      name: 'InvalidFieldsError',\n    })\n  }\n}\n\nexport type InvalidPaymasterAndDataErrorType = InvalidPaymasterAndDataError & {\n  name: 'InvalidPaymasterAndDataError'\n}\nexport class InvalidPaymasterAndDataError extends BaseError {\n  static message = /aa93/\n  constructor({\n    cause,\n    paymasterAndData,\n  }: {\n    cause?: BaseError | undefined\n    paymasterAndData?: Hex | undefined\n  }) {\n    super('Paymaster properties provided are invalid.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- the `paymasterAndData` property is of an incorrect length\\n',\n        paymasterAndData && `paymasterAndData: ${paymasterAndData}`,\n      ].filter(Boolean) as string[],\n      name: 'InvalidPaymasterAndDataError',\n    })\n  }\n}\n\nexport type PaymasterDepositTooLowErrorType = PaymasterDepositTooLowError & {\n  code: -32508\n  name: 'PaymasterDepositTooLowError'\n}\nexport class PaymasterDepositTooLowError extends BaseError {\n  static code = -32508\n  static message = /aa31/\n\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Paymaster deposit for the User Operation is too low.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- the Paymaster has deposited less than the expected amount via the `deposit` function',\n      ].filter(Boolean) as string[],\n      name: 'PaymasterDepositTooLowError',\n    })\n  }\n}\n\nexport type PaymasterFunctionRevertedErrorType =\n  PaymasterFunctionRevertedError & {\n    name: 'PaymasterFunctionRevertedError'\n  }\nexport class PaymasterFunctionRevertedError extends BaseError {\n  static message = /aa33/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('The `validatePaymasterUserOp` function on the Paymaster reverted.', {\n      cause,\n      name: 'PaymasterFunctionRevertedError',\n    })\n  }\n}\n\nexport type PaymasterNotDeployedErrorType = PaymasterNotDeployedError & {\n  name: 'PaymasterNotDeployedError'\n}\nexport class PaymasterNotDeployedError extends BaseError {\n  static message = /aa30/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('The Paymaster contract has not been deployed.', {\n      cause,\n      name: 'PaymasterNotDeployedError',\n    })\n  }\n}\n\nexport type PaymasterRateLimitErrorType = PaymasterRateLimitError & {\n  code: -32504\n  name: 'PaymasterRateLimitError'\n}\nexport class PaymasterRateLimitError extends BaseError {\n  static code = -32504\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(\n      'UserOperation rejected because paymaster (or signature aggregator) is throttled/banned.',\n      {\n        cause,\n        name: 'PaymasterRateLimitError',\n      },\n    )\n  }\n}\n\nexport type PaymasterStakeTooLowErrorType = PaymasterStakeTooLowError & {\n  code: -32505\n  name: 'PaymasterStakeTooLowError'\n}\nexport class PaymasterStakeTooLowError extends BaseError {\n  static code = -32505\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(\n      'UserOperation rejected because paymaster (or signature aggregator) is throttled/banned.',\n      {\n        cause,\n        name: 'PaymasterStakeTooLowError',\n      },\n    )\n  }\n}\n\nexport type PaymasterPostOpFunctionRevertedErrorType =\n  PaymasterPostOpFunctionRevertedError & {\n    name: 'PaymasterPostOpFunctionRevertedError'\n  }\nexport class PaymasterPostOpFunctionRevertedError extends BaseError {\n  static message = /aa50/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Paymaster `postOp` function reverted.', {\n      cause,\n      name: 'PaymasterPostOpFunctionRevertedError',\n    })\n  }\n}\n\nexport type SenderAlreadyConstructedErrorType =\n  SenderAlreadyConstructedError & {\n    name: 'SenderAlreadyConstructedError'\n  }\nexport class SenderAlreadyConstructedError extends BaseError {\n  static message = /aa10/\n  constructor({\n    cause,\n    factory,\n    factoryData,\n    initCode,\n  }: {\n    cause?: BaseError | undefined\n    factory?: Address | undefined\n    factoryData?: Hex | undefined\n    initCode?: Hex | undefined\n  }) {\n    super('Smart Account has already been deployed.', {\n      cause,\n      metaMessages: [\n        'Remove the following properties and try again:',\n        factory && '`factory`',\n        factoryData && '`factoryData`',\n        initCode && '`initCode`',\n      ].filter(Boolean) as string[],\n      name: 'SenderAlreadyConstructedError',\n    })\n  }\n}\n\nexport type SignatureCheckFailedErrorType = SignatureCheckFailedError & {\n  code: -32507\n  name: 'SignatureCheckFailedError'\n}\nexport class SignatureCheckFailedError extends BaseError {\n  static code = -32507\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(\n      'UserOperation rejected because account signature check failed (or paymaster signature, if the paymaster uses its data as signature).',\n      {\n        cause,\n        name: 'SignatureCheckFailedError',\n      },\n    )\n  }\n}\n\nexport type SmartAccountFunctionRevertedErrorType =\n  SmartAccountFunctionRevertedError & {\n    name: 'SmartAccountFunctionRevertedError'\n  }\nexport class SmartAccountFunctionRevertedError extends BaseError {\n  static message = /aa23/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('The `validateUserOp` function on the Smart Account reverted.', {\n      cause,\n      name: 'SmartAccountFunctionRevertedError',\n    })\n  }\n}\n\nexport type UnsupportedSignatureAggregatorErrorType =\n  UnsupportedSignatureAggregatorError & {\n    code: -32506\n    name: 'UnsupportedSignatureAggregatorError'\n  }\nexport class UnsupportedSignatureAggregatorError extends BaseError {\n  static code = -32506\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(\n      'UserOperation rejected because account specified unsupported signature aggregator.',\n      {\n        cause,\n        name: 'UnsupportedSignatureAggregatorError',\n      },\n    )\n  }\n}\n\nexport type UserOperationExpiredErrorType = UserOperationExpiredError & {\n  name: 'UserOperationExpiredError'\n}\nexport class UserOperationExpiredError extends BaseError {\n  static message = /aa22/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('User Operation expired.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- the `validAfter` or `validUntil` values returned from `validateUserOp` on the Smart Account are not satisfied',\n      ].filter(Boolean) as string[],\n      name: 'UserOperationExpiredError',\n    })\n  }\n}\n\nexport type UserOperationPaymasterExpiredErrorType =\n  UserOperationPaymasterExpiredError & {\n    name: 'UserOperationPaymasterExpiredError'\n  }\nexport class UserOperationPaymasterExpiredError extends BaseError {\n  static message = /aa32/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Paymaster for User Operation expired.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- the `validAfter` or `validUntil` values returned from `validatePaymasterUserOp` on the Paymaster are not satisfied',\n      ].filter(Boolean) as string[],\n      name: 'UserOperationPaymasterExpiredError',\n    })\n  }\n}\n\nexport type UserOperationSignatureErrorType = UserOperationSignatureError & {\n  name: 'UserOperationSignatureError'\n}\nexport class UserOperationSignatureError extends BaseError {\n  static message = /aa24/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Signature provided for the User Operation is invalid.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- the `signature` for the User Operation is incorrectly computed, and unable to be verified by the Smart Account',\n      ].filter(Boolean) as string[],\n      name: 'UserOperationSignatureError',\n    })\n  }\n}\n\nexport type UserOperationPaymasterSignatureErrorType =\n  UserOperationPaymasterSignatureError & {\n    name: 'UserOperationPaymasterSignatureError'\n  }\nexport class UserOperationPaymasterSignatureError extends BaseError {\n  static message = /aa34/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Signature provided for the User Operation is invalid.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- the `signature` for the User Operation is incorrectly computed, and unable to be verified by the Paymaster',\n      ].filter(Boolean) as string[],\n      name: 'UserOperationPaymasterSignatureError',\n    })\n  }\n}\n\nexport type UserOperationRejectedByEntryPointErrorType =\n  UserOperationRejectedByEntryPointError & {\n    code: -32500\n    name: 'UserOperationRejectedByEntryPointError'\n  }\nexport class UserOperationRejectedByEntryPointError extends BaseError {\n  static code = -32500\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(\n      \"User Operation rejected by EntryPoint's `simulateValidation` during account creation or validation.\",\n      {\n        cause,\n        name: 'UserOperationRejectedByEntryPointError',\n      },\n    )\n  }\n}\n\nexport type UserOperationRejectedByPaymasterErrorType =\n  UserOperationRejectedByPaymasterError & {\n    code: -32501\n    name: 'UserOperationRejectedByPaymasterError'\n  }\nexport class UserOperationRejectedByPaymasterError extends BaseError {\n  static code = -32501\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(\"User Operation rejected by Paymaster's `validatePaymasterUserOp`.\", {\n      cause,\n      name: 'UserOperationRejectedByPaymasterError',\n    })\n  }\n}\n\nexport type UserOperationRejectedByOpCodeErrorType =\n  UserOperationRejectedByOpCodeError & {\n    code: -32502\n    name: 'UserOperationRejectedByOpCodeError'\n  }\nexport class UserOperationRejectedByOpCodeError extends BaseError {\n  static code = -32502\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super('User Operation rejected with op code validation error.', {\n      cause,\n      name: 'UserOperationRejectedByOpCodeError',\n    })\n  }\n}\n\nexport type UserOperationOutOfTimeRangeErrorType =\n  UserOperationOutOfTimeRangeError & {\n    code: -32503\n    name: 'UserOperationOutOfTimeRangeError'\n  }\nexport class UserOperationOutOfTimeRangeError extends BaseError {\n  static code = -32503\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(\n      'UserOperation out of time-range: either wallet or paymaster returned a time-range, and it is already expired (or will expire soon).',\n      {\n        cause,\n        name: 'UserOperationOutOfTimeRangeError',\n      },\n    )\n  }\n}\n\nexport type UnknownBundlerErrorType = UnknownBundlerError & {\n  name: 'UnknownBundlerError'\n}\nexport class UnknownBundlerError extends BaseError {\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(\n      `An error occurred while executing user operation: ${cause?.shortMessage}`,\n      {\n        cause,\n        name: 'UnknownBundlerError',\n      },\n    )\n  }\n}\n\nexport type VerificationGasLimitExceededErrorType =\n  VerificationGasLimitExceededError & {\n    name: 'VerificationGasLimitExceededError'\n  }\nexport class VerificationGasLimitExceededError extends BaseError {\n  static message = /aa40/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('User Operation verification gas limit exceeded.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- the gas used for verification exceeded the `verificationGasLimit`',\n      ].filter(Boolean) as string[],\n      name: 'VerificationGasLimitExceededError',\n    })\n  }\n}\n\nexport type VerificationGasLimitTooLowErrorType =\n  VerificationGasLimitTooLowError & {\n    name: 'VerificationGasLimitTooLowError'\n  }\nexport class VerificationGasLimitTooLowError extends BaseError {\n  static message = /aa41/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('User Operation verification gas limit is too low.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- the `verificationGasLimit` is too low to verify the User Operation',\n      ].filter(Boolean) as string[],\n      name: 'VerificationGasLimitTooLowError',\n    })\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1391, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1397, "column": 0}, "map": {"version":3,"file":"getBundlerError.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/utils/errors/getBundlerError.ts"],"sourcesContent":["import type { BaseError } from '../../../errors/base.js'\nimport type { ExactPartial } from '../../../types/utils.js'\nimport {\n  AccountNotDeployedError,\n  type AccountNotDeployedErrorType,\n  ExecutionRevertedError,\n  type ExecutionRevertedErrorType,\n  FailedToSendToBeneficiaryError,\n  type FailedToSendToBeneficiaryErrorType,\n  GasValuesOverflowError,\n  type GasValuesOverflowErrorType,\n  HandleOpsOutOfGasError,\n  type HandleOpsOutOfGasErrorType,\n  InitCodeFailedError,\n  type InitCodeFailedErrorType,\n  InitCodeMustCreateSenderError,\n  type InitCodeMustCreateSenderErrorType,\n  InitCodeMustReturnSenderError,\n  type InitCodeMustReturnSenderErrorType,\n  InsufficientPrefundError,\n  type InsufficientPrefundErrorType,\n  InternalCallOnlyError,\n  type InternalCallOnlyErrorType,\n  InvalidAccountNonceError,\n  type InvalidAccountNonceErrorType,\n  InvalidAggregatorError,\n  type InvalidAggregatorErrorType,\n  InvalidBeneficiaryError,\n  type InvalidBeneficiaryErrorType,\n  InvalidFieldsError,\n  type InvalidFieldsErrorType,\n  InvalidPaymasterAndDataError,\n  type InvalidPaymasterAndDataErrorType,\n  PaymasterDepositTooLowError,\n  type PaymasterDepositTooLowErrorType,\n  PaymasterFunctionRevertedError,\n  type PaymasterFunctionRevertedErrorType,\n  PaymasterNotDeployedError,\n  type PaymasterNotDeployedErrorType,\n  PaymasterPostOpFunctionRevertedError,\n  type PaymasterPostOpFunctionRevertedErrorType,\n  PaymasterRateLimitError,\n  type PaymasterRateLimitErrorType,\n  PaymasterStakeTooLowError,\n  type PaymasterStakeTooLowErrorType,\n  SenderAlreadyConstructedError,\n  type SenderAlreadyConstructedErrorType,\n  SignatureCheckFailedError,\n  type SignatureCheckFailedErrorType,\n  SmartAccountFunctionRevertedError,\n  type SmartAccountFunctionRevertedErrorType,\n  UnknownBundlerError,\n  type UnknownBundlerErrorType,\n  UnsupportedSignatureAggregatorError,\n  type UnsupportedSignatureAggregatorErrorType,\n  UserOperationExpiredError,\n  type UserOperationExpiredErrorType,\n  UserOperationOutOfTimeRangeError,\n  type UserOperationOutOfTimeRangeErrorType,\n  UserOperationPaymasterExpiredError,\n  type UserOperationPaymasterExpiredErrorType,\n  UserOperationPaymasterSignatureError,\n  type UserOperationPaymasterSignatureErrorType,\n  UserOperationRejectedByEntryPointError,\n  type UserOperationRejectedByEntryPointErrorType,\n  UserOperationRejectedByOpCodeError,\n  type UserOperationRejectedByOpCodeErrorType,\n  UserOperationRejectedByPaymasterError,\n  type UserOperationRejectedByPaymasterErrorType,\n  UserOperationSignatureError,\n  type UserOperationSignatureErrorType,\n  VerificationGasLimitExceededError,\n  type VerificationGasLimitExceededErrorType,\n  VerificationGasLimitTooLowError,\n  type VerificationGasLimitTooLowErrorType,\n} from '../../errors/bundler.js'\nimport type { UserOperation } from '../../types/userOperation.js'\n\nconst bundlerErrors = [\n  ExecutionRevertedError,\n  InvalidFieldsError,\n  PaymasterDepositTooLowError,\n  PaymasterRateLimitError,\n  PaymasterStakeTooLowError,\n  SignatureCheckFailedError,\n  UnsupportedSignatureAggregatorError,\n  UserOperationOutOfTimeRangeError,\n  UserOperationRejectedByEntryPointError,\n  UserOperationRejectedByPaymasterError,\n  UserOperationRejectedByOpCodeError,\n]\n\nexport type GetBundlerErrorParameters = ExactPartial<UserOperation>\n\nexport type GetBundlerErrorReturnType =\n  | AccountNotDeployedErrorType\n  | ExecutionRevertedErrorType\n  | FailedToSendToBeneficiaryErrorType\n  | GasValuesOverflowErrorType\n  | HandleOpsOutOfGasErrorType\n  | InitCodeFailedErrorType\n  | InitCodeMustCreateSenderErrorType\n  | InitCodeMustReturnSenderErrorType\n  | InsufficientPrefundErrorType\n  | InternalCallOnlyErrorType\n  | InvalidAccountNonceErrorType\n  | InvalidAggregatorErrorType\n  | InvalidBeneficiaryErrorType\n  | InvalidFieldsErrorType\n  | InvalidPaymasterAndDataErrorType\n  | PaymasterDepositTooLowErrorType\n  | PaymasterFunctionRevertedErrorType\n  | PaymasterNotDeployedErrorType\n  | PaymasterPostOpFunctionRevertedErrorType\n  | PaymasterRateLimitErrorType\n  | PaymasterStakeTooLowErrorType\n  | SignatureCheckFailedErrorType\n  | SenderAlreadyConstructedErrorType\n  | SmartAccountFunctionRevertedErrorType\n  | UnsupportedSignatureAggregatorErrorType\n  | UserOperationOutOfTimeRangeErrorType\n  | UserOperationRejectedByEntryPointErrorType\n  | UserOperationRejectedByOpCodeErrorType\n  | UserOperationRejectedByPaymasterErrorType\n  | UnknownBundlerErrorType\n  | UserOperationExpiredErrorType\n  | UserOperationPaymasterExpiredErrorType\n  | UserOperationPaymasterSignatureErrorType\n  | UserOperationSignatureErrorType\n  | VerificationGasLimitExceededErrorType\n  | VerificationGasLimitTooLowErrorType\n\nexport function getBundlerError(\n  err: BaseError,\n  args: GetBundlerErrorParameters,\n): GetBundlerErrorReturnType {\n  const message = (err.details || '').toLowerCase()\n\n  if (AccountNotDeployedError.message.test(message))\n    return new AccountNotDeployedError({\n      cause: err,\n    }) as any\n  if (FailedToSendToBeneficiaryError.message.test(message))\n    return new FailedToSendToBeneficiaryError({\n      cause: err,\n    }) as any\n  if (GasValuesOverflowError.message.test(message))\n    return new GasValuesOverflowError({\n      cause: err,\n    }) as any\n  if (HandleOpsOutOfGasError.message.test(message))\n    return new HandleOpsOutOfGasError({\n      cause: err,\n    }) as any\n  if (InitCodeFailedError.message.test(message))\n    return new InitCodeFailedError({\n      cause: err,\n      factory: args.factory,\n      factoryData: args.factoryData,\n      initCode: args.initCode,\n    }) as any\n  if (InitCodeMustCreateSenderError.message.test(message))\n    return new InitCodeMustCreateSenderError({\n      cause: err,\n      factory: args.factory,\n      factoryData: args.factoryData,\n      initCode: args.initCode,\n    }) as any\n  if (InitCodeMustReturnSenderError.message.test(message))\n    return new InitCodeMustReturnSenderError({\n      cause: err,\n      factory: args.factory,\n      factoryData: args.factoryData,\n      initCode: args.initCode,\n      sender: args.sender,\n    }) as any\n  if (InsufficientPrefundError.message.test(message))\n    return new InsufficientPrefundError({\n      cause: err,\n    }) as any\n  if (InternalCallOnlyError.message.test(message))\n    return new InternalCallOnlyError({\n      cause: err,\n    }) as any\n  if (InvalidAccountNonceError.message.test(message))\n    return new InvalidAccountNonceError({\n      cause: err,\n      nonce: args.nonce,\n    }) as any\n  if (InvalidAggregatorError.message.test(message))\n    return new InvalidAggregatorError({\n      cause: err,\n    }) as any\n  if (InvalidBeneficiaryError.message.test(message))\n    return new InvalidBeneficiaryError({\n      cause: err,\n    }) as any\n  if (InvalidPaymasterAndDataError.message.test(message))\n    return new InvalidPaymasterAndDataError({\n      cause: err,\n    }) as any\n  if (PaymasterDepositTooLowError.message.test(message))\n    return new PaymasterDepositTooLowError({\n      cause: err,\n    }) as any\n  if (PaymasterFunctionRevertedError.message.test(message))\n    return new PaymasterFunctionRevertedError({\n      cause: err,\n    }) as any\n  if (PaymasterNotDeployedError.message.test(message))\n    return new PaymasterNotDeployedError({\n      cause: err,\n    }) as any\n  if (PaymasterPostOpFunctionRevertedError.message.test(message))\n    return new PaymasterPostOpFunctionRevertedError({\n      cause: err,\n    }) as any\n  if (SmartAccountFunctionRevertedError.message.test(message))\n    return new SmartAccountFunctionRevertedError({\n      cause: err,\n    }) as any\n  if (SenderAlreadyConstructedError.message.test(message))\n    return new SenderAlreadyConstructedError({\n      cause: err,\n      factory: args.factory,\n      factoryData: args.factoryData,\n      initCode: args.initCode,\n    }) as any\n  if (UserOperationExpiredError.message.test(message))\n    return new UserOperationExpiredError({\n      cause: err,\n    }) as any\n  if (UserOperationPaymasterExpiredError.message.test(message))\n    return new UserOperationPaymasterExpiredError({\n      cause: err,\n    }) as any\n  if (UserOperationPaymasterSignatureError.message.test(message))\n    return new UserOperationPaymasterSignatureError({\n      cause: err,\n    }) as any\n  if (UserOperationSignatureError.message.test(message))\n    return new UserOperationSignatureError({\n      cause: err,\n    }) as any\n  if (VerificationGasLimitExceededError.message.test(message))\n    return new VerificationGasLimitExceededError({\n      cause: err,\n    }) as any\n  if (VerificationGasLimitTooLowError.message.test(message))\n    return new VerificationGasLimitTooLowError({\n      cause: err,\n    }) as any\n\n  const error = err.walk((e) =>\n    bundlerErrors.some((error) => error.code === (e as { code: number }).code),\n  ) as BaseError & { code: number; data: any }\n\n  if (error) {\n    if (error.code === ExecutionRevertedError.code)\n      return new ExecutionRevertedError({\n        cause: err,\n        data: error.data,\n        message: error.details,\n      }) as any\n    if (error.code === InvalidFieldsError.code)\n      return new InvalidFieldsError({\n        cause: err,\n      }) as any\n    if (error.code === PaymasterDepositTooLowError.code)\n      return new PaymasterDepositTooLowError({\n        cause: err,\n      }) as any\n    if (error.code === PaymasterRateLimitError.code)\n      return new PaymasterRateLimitError({\n        cause: err,\n      }) as any\n    if (error.code === PaymasterStakeTooLowError.code)\n      return new PaymasterStakeTooLowError({\n        cause: err,\n      }) as any\n    if (error.code === SignatureCheckFailedError.code)\n      return new SignatureCheckFailedError({\n        cause: err,\n      }) as any\n    if (error.code === UnsupportedSignatureAggregatorError.code)\n      return new UnsupportedSignatureAggregatorError({\n        cause: err,\n      }) as any\n    if (error.code === UserOperationOutOfTimeRangeError.code)\n      return new UserOperationOutOfTimeRangeError({\n        cause: err,\n      }) as any\n    if (error.code === UserOperationRejectedByEntryPointError.code)\n      return new UserOperationRejectedByEntryPointError({\n        cause: err,\n      }) as any\n    if (error.code === UserOperationRejectedByPaymasterError.code)\n      return new UserOperationRejectedByPaymasterError({\n        cause: err,\n      }) as any\n    if (error.code === UserOperationRejectedByOpCodeError.code)\n      return new UserOperationRejectedByOpCodeError({\n        cause: err,\n      }) as any\n  }\n\n  return new UnknownBundlerError({\n    cause: err,\n  }) as any\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1548, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1554, "column": 0}, "map": {"version":3,"file":"userOperation.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/errors/userOperation.ts"],"sourcesContent":["import { BaseError } from '../../errors/base.js'\nimport { prettyPrint } from '../../errors/transaction.js'\nimport type { Hash } from '../../types/misc.js'\nimport { formatGwei } from '../../utils/index.js'\nimport type { UserOperation } from '../types/userOperation.js'\n\nexport type UserOperationExecutionErrorType = UserOperationExecutionError & {\n  name: 'UserOperationExecutionError'\n}\nexport class UserOperationExecutionError extends BaseError {\n  override cause: BaseError\n\n  constructor(\n    cause: BaseError,\n    {\n      callData,\n      callGasLimit,\n      docsPath,\n      factory,\n      factoryData,\n      initCode,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      paymaster,\n      paymasterAndData,\n      paymasterData,\n      paymasterPostOpGasLimit,\n      paymasterVerificationGasLimit,\n      preVerificationGas,\n      sender,\n      signature,\n      verificationGasLimit,\n    }: UserOperation & {\n      docsPath?: string | undefined\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      callData,\n      callGasLimit,\n      factory,\n      factoryData,\n      initCode,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n      paymaster,\n      paymasterAndData,\n      paymasterData,\n      paymasterPostOpGasLimit,\n      paymasterVerificationGasLimit,\n      preVerificationGas,\n      sender,\n      signature,\n      verificationGasLimit,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Request Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n      name: 'UserOperationExecutionError',\n    })\n    this.cause = cause\n  }\n}\n\nexport type UserOperationReceiptNotFoundErrorType =\n  UserOperationReceiptNotFoundError & {\n    name: 'UserOperationReceiptNotFoundError'\n  }\nexport class UserOperationReceiptNotFoundError extends BaseError {\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `User Operation receipt with hash \"${hash}\" could not be found. The User Operation may not have been processed yet.`,\n      { name: 'UserOperationReceiptNotFoundError' },\n    )\n  }\n}\n\nexport type UserOperationNotFoundErrorType = UserOperationNotFoundError & {\n  name: 'UserOperationNotFoundError'\n}\nexport class UserOperationNotFoundError extends BaseError {\n  constructor({ hash }: { hash: Hash }) {\n    super(`User Operation with hash \"${hash}\" could not be found.`, {\n      name: 'UserOperationNotFoundError',\n    })\n  }\n}\n\nexport type WaitForUserOperationReceiptTimeoutErrorType =\n  WaitForUserOperationReceiptTimeoutError & {\n    name: 'WaitForUserOperationReceiptTimeoutError'\n  }\nexport class WaitForUserOperationReceiptTimeoutError extends BaseError {\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Timed out while waiting for User Operation with hash \"${hash}\" to be confirmed.`,\n      { name: 'WaitForUserOperationReceiptTimeoutError' },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;AACA,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAA;AAEzD,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAA;AAHjD,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAA;;;;AAS1C,MAAO,2BAA4B,2JAAQ,YAAS;IAGxD,YACE,KAAgB,EAChB,EACE,QAAQ,EACR,YAAY,EACZ,QAAQ,EACR,OAAO,EACP,WAAW,EACX,QAAQ,EACR,YAAY,EACZ,oBAAoB,EACpB,KAAK,EACL,SAAS,EACT,gBAAgB,EAChB,aAAa,EACb,uBAAuB,EACvB,6BAA6B,EAC7B,kBAAkB,EAClB,MAAM,EACN,SAAS,EACT,oBAAoB,EAGrB,CAAA;QAED,MAAM,UAAU,gKAAG,cAAW,AAAX,EAAY;YAC7B,QAAQ;YACR,YAAY;YACZ,OAAO;YACP,WAAW;YACX,QAAQ;YACR,YAAY,EACV,OAAO,YAAY,KAAK,WAAW,IACnC,IAAG,+KAAA,AAAU,EAAC,YAAY,CAAC,CAAA,KAAA,CAAO;YACpC,oBAAoB,EAClB,OAAO,oBAAoB,KAAK,WAAW,IAC3C,sKAAG,aAAA,AAAU,EAAC,oBAAoB,CAAC,CAAA,KAAA,CAAO;YAC5C,KAAK;YACL,SAAS;YACT,gBAAgB;YAChB,aAAa;YACb,uBAAuB;YACvB,6BAA6B;YAC7B,kBAAkB;YAClB,MAAM;YACN,SAAS;YACT,oBAAoB;SACrB,CAAC,CAAA;QAEF,KAAK,CAAC,KAAK,CAAC,YAAY,EAAE;YACxB,KAAK;YACL,QAAQ;YACR,YAAY,EAAE;mBACR,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;uBAAG,KAAK,CAAC,YAAY;oBAAE,GAAG;iBAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC3D,oBAAoB;gBACpB,UAAU;aACX,CAAC,MAAM,CAAC,OAAO,CAAa;YAC7B,IAAI,EAAE,6BAA6B;SACpC,CAAC,CAAA;QA5DK,OAAA,cAAA,CAAA,IAAA,EAAA,SAAA;;;;;WAAgB;QA6DvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;IACpB,CAAC;CACF;AAMK,MAAO,iCAAkC,2JAAQ,YAAS;IAC9D,YAAY,EAAE,IAAI,EAAkB,CAAA;QAClC,KAAK,CACH,CAAA,kCAAA,EAAqC,IAAI,CAAA,yEAAA,CAA2E,EACpH;YAAE,IAAI,EAAE,mCAAmC;QAAA,CAAE,CAC9C,CAAA;IACH,CAAC;CACF;AAKK,MAAO,0BAA2B,SAAQ,8JAAS;IACvD,YAAY,EAAE,IAAI,EAAkB,CAAA;QAClC,KAAK,CAAC,CAAA,0BAAA,EAA6B,IAAI,CAAA,qBAAA,CAAuB,EAAE;YAC9D,IAAI,EAAE,4BAA4B;SACnC,CAAC,CAAA;IACJ,CAAC;CACF;AAMK,MAAO,uCAAwC,2JAAQ,YAAS;IACpE,YAAY,EAAE,IAAI,EAAkB,CAAA;QAClC,KAAK,CACH,CAAA,sDAAA,EAAyD,IAAI,CAAA,kBAAA,CAAoB,EACjF;YAAE,IAAI,EAAE,yCAAyC;QAAA,CAAE,CACpD,CAAA;IACH,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 1630, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1636, "column": 0}, "map": {"version":3,"file":"getUserOperationError.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/utils/errors/getUserOperationError.ts"],"sourcesContent":["import type { Abi, Address } from 'abitype'\nimport { BaseError } from '../../../errors/base.js'\nimport {\n  ContractFunctionExecutionError,\n  ContractFunctionRevertedError,\n  ContractFunctionZeroDataError,\n} from '../../../errors/contract.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Call } from '../../../types/calls.js'\nimport type { Hex } from '../../../types/misc.js'\nimport { decodeErrorResult } from '../../../utils/abi/decodeErrorResult.js'\nimport type { GetContractErrorReturnType } from '../../../utils/errors/getContractError.js'\nimport { ExecutionRevertedError } from '../../errors/bundler.js'\nimport {\n  UserOperationExecutionError,\n  type UserOperationExecutionErrorType,\n} from '../../errors/userOperation.js'\nimport type { UserOperation } from '../../types/userOperation.js'\nimport {\n  type GetBundlerErrorParameters,\n  getBundlerError,\n} from './getBundlerError.js'\n\ntype GetNodeErrorReturnType = ErrorType\n\nexport type GetUserOperationErrorParameters = UserOperation & {\n  calls?: readonly unknown[] | undefined\n  docsPath?: string | undefined\n}\n\nexport type GetUserOperationErrorReturnType<cause = ErrorType> = Omit<\n  UserOperationExecutionErrorType,\n  'cause'\n> & { cause: cause | GetNodeErrorReturnType }\n\nexport type GetUserOperationErrorErrorType = ErrorType\n\nexport function getUserOperationError<err extends ErrorType<string>>(\n  err: err,\n  { calls, docsPath, ...args }: GetUserOperationErrorParameters,\n): GetUserOperationErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getBundlerError(\n      err as {} as BaseError,\n      args as GetBundlerErrorParameters,\n    )\n    if (calls && cause instanceof ExecutionRevertedError) {\n      const revertData = getRevertData(cause)\n      const contractCalls = calls?.filter(\n        (call: any) => call.abi,\n      ) as readonly Call[]\n      if (revertData && contractCalls.length > 0)\n        return getContractError({ calls: contractCalls, revertData })\n    }\n    return cause\n  })()\n  return new UserOperationExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetUserOperationErrorReturnType<err>\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n\nfunction getRevertData(error: BaseError) {\n  let revertData: Hex | undefined\n  error.walk((e) => {\n    const error = e as any\n    if (\n      typeof error.data === 'string' ||\n      typeof error.data?.revertData === 'string' ||\n      (!(error instanceof BaseError) && typeof error.message === 'string')\n    ) {\n      const match = (\n        error.data?.revertData ||\n        error.data ||\n        error.message\n      ).match?.(/(0x[A-Za-z0-9]*)/)\n      if (match) {\n        revertData = match[1]\n        return true\n      }\n    }\n    return false\n  })\n  return revertData\n}\n\nfunction getContractError(parameters: {\n  calls: readonly Call[]\n  revertData: Hex\n}) {\n  const { calls, revertData } = parameters\n\n  const { abi, functionName, args, to } = (() => {\n    const contractCalls = calls?.filter((call) =>\n      Boolean(call.abi),\n    ) as readonly Call[]\n\n    if (contractCalls.length === 1) return contractCalls[0]\n\n    const compatContractCalls = contractCalls.filter((call) => {\n      try {\n        return Boolean(\n          decodeErrorResult({\n            abi: call.abi,\n            data: revertData,\n          }),\n        )\n      } catch {\n        return false\n      }\n    })\n    if (compatContractCalls.length === 1) return compatContractCalls[0]\n\n    return {\n      abi: [],\n      functionName: contractCalls.reduce(\n        (acc, call) => `${acc ? `${acc} | ` : ''}${call.functionName}`,\n        '',\n      ),\n      args: undefined,\n      to: undefined,\n    }\n  })() as {\n    abi: Abi\n    functionName: string\n    args: unknown[]\n    to: Address\n  }\n\n  const cause = (() => {\n    if (revertData === '0x')\n      return new ContractFunctionZeroDataError({ functionName })\n    return new ContractFunctionRevertedError({\n      abi,\n      data: revertData,\n      functionName,\n    })\n  })()\n  return new ContractFunctionExecutionError(cause as BaseError, {\n    abi,\n    args,\n    contractAddress: to,\n    functionName,\n  }) as GetContractErrorReturnType\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1725, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1731, "column": 0}, "map": {"version":3,"file":"estimateUserOperationGas.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/actions/bundler/estimateUserOperationGas.ts"],"sourcesContent":["import type { Address, Narrow } from 'abitype'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../../errors/account.js'\nimport type { BaseError } from '../../../errors/base.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Calls } from '../../../types/calls.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { Hex } from '../../../types/misc.js'\nimport type { StateOverride } from '../../../types/stateOverride.js'\nimport type {\n  Assign,\n  MaybeRequired,\n  OneOf,\n  Prettify,\n} from '../../../types/utils.js'\nimport type { RequestErrorType } from '../../../utils/buildRequest.js'\nimport { getAction } from '../../../utils/getAction.js'\nimport { serializeStateOverride } from '../../../utils/stateOverride.js'\nimport type { SmartAccount } from '../../accounts/types.js'\nimport type { PaymasterActions } from '../../clients/decorators/paymaster.js'\nimport type {\n  DeriveSmartAccount,\n  GetSmartAccountParameter,\n} from '../../types/account.js'\nimport type {\n  DeriveEntryPointVersion,\n  EntryPointVersion,\n} from '../../types/entryPointVersion.js'\nimport type {\n  EstimateUserOperationGasReturnType as EstimateUserOperationGasReturnType_,\n  UserOperation,\n  UserOperationRequest,\n} from '../../types/userOperation.js'\nimport { getUserOperationError } from '../../utils/errors/getUserOperationError.js'\nimport {\n  type FormatUserOperationGasErrorType,\n  formatUserOperationGas,\n} from '../../utils/formatters/userOperationGas.js'\nimport {\n  type FormatUserOperationRequestErrorType,\n  formatUserOperationRequest,\n} from '../../utils/formatters/userOperationRequest.js'\nimport {\n  type PrepareUserOperationErrorType,\n  type PrepareUserOperationParameters,\n  prepareUserOperation,\n} from './prepareUserOperation.js'\n\nexport type EstimateUserOperationGasParameters<\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n  accountOverride extends SmartAccount | undefined = SmartAccount | undefined,\n  calls extends readonly unknown[] = readonly unknown[],\n  //\n  _derivedAccount extends SmartAccount | undefined = DeriveSmartAccount<\n    account,\n    accountOverride\n  >,\n  _derivedVersion extends\n    EntryPointVersion = DeriveEntryPointVersion<_derivedAccount>,\n> = GetSmartAccountParameter<account, accountOverride, false> &\n  (\n    | UserOperation // Accept a full-formed User Operation.\n    | Assign<\n        // Accept a partially-formed User Operation (UserOperationRequest) to be filled.\n        UserOperationRequest<_derivedVersion>,\n        OneOf<{ calls: Calls<Narrow<calls>> } | { callData: Hex }> & {\n          paymaster?:\n            | Address\n            | true\n            | {\n                /** Retrieves paymaster-related User Operation properties to be used for sending the User Operation. */\n                getPaymasterData?:\n                  | PaymasterActions['getPaymasterData']\n                  | undefined\n                /** Retrieves paymaster-related User Operation properties to be used for gas estimation. */\n                getPaymasterStubData?:\n                  | PaymasterActions['getPaymasterStubData']\n                  | undefined\n              }\n            | undefined\n          /** Paymaster context to pass to `getPaymasterData` and `getPaymasterStubData` calls. */\n          paymasterContext?: unknown | undefined\n        }\n      >\n  ) &\n  // Allow the EntryPoint address to be overridden, if no Account is provided, it will need to be required.\n  MaybeRequired<\n    { entryPointAddress?: Address },\n    _derivedAccount extends undefined ? true : false\n  > & {\n    /** State overrides for the User Operation call. */\n    stateOverride?: StateOverride | undefined\n  }\n\nexport type EstimateUserOperationGasReturnType<\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n  accountOverride extends SmartAccount | undefined = SmartAccount | undefined,\n  //\n  _derivedAccount extends SmartAccount | undefined = DeriveSmartAccount<\n    account,\n    accountOverride\n  >,\n  _derivedVersion extends\n    EntryPointVersion = DeriveEntryPointVersion<_derivedAccount>,\n> = Prettify<EstimateUserOperationGasReturnType_<_derivedVersion>>\n\nexport type EstimateUserOperationGasErrorType =\n  | ParseAccountErrorType\n  | PrepareUserOperationErrorType\n  | FormatUserOperationRequestErrorType\n  | FormatUserOperationGasErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns an estimate of gas values necessary to execute the User Operation.\n *\n * - Docs: https://viem.sh/actions/bundler/estimateUserOperationGas\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateUserOperationGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateUserOperationGasReturnType}\n *\n * @example\n * import { createBundlerClient, http, parseEther } from 'viem'\n * import { toSmartAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { estimateUserOperationGas } from 'viem/actions'\n *\n * const account = await toSmartAccount({ ... })\n *\n * const bundlerClient = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const values = await estimateUserOperationGas(bundlerClient, {\n *   account,\n *   calls: [{ to: '0x...', value: parseEther('1') }],\n * })\n */\nexport async function estimateUserOperationGas<\n  const calls extends readonly unknown[],\n  account extends SmartAccount | undefined,\n  accountOverride extends SmartAccount | undefined = undefined,\n>(\n  client: Client<Transport, Chain | undefined, account>,\n  parameters: EstimateUserOperationGasParameters<\n    account,\n    accountOverride,\n    calls\n  >,\n): Promise<EstimateUserOperationGasReturnType<account, accountOverride>> {\n  const {\n    account: account_ = client.account,\n    entryPointAddress,\n    stateOverride,\n  } = parameters\n\n  if (!account_ && !parameters.sender) throw new AccountNotFoundError()\n  const account = account_ ? parseAccount(account_) : undefined\n\n  const rpcStateOverride = serializeStateOverride(stateOverride)\n\n  const request = account\n    ? await getAction(\n        client,\n        prepareUserOperation,\n        'prepareUserOperation',\n      )({\n        ...parameters,\n        parameters: ['factory', 'nonce', 'paymaster', 'signature'],\n      } as unknown as PrepareUserOperationParameters)\n    : parameters\n\n  try {\n    const params = [\n      formatUserOperationRequest(request as UserOperation),\n      (entryPointAddress ?? account?.entryPoint?.address)!,\n    ] as const\n    const result = await client.request({\n      method: 'eth_estimateUserOperationGas',\n      params: rpcStateOverride ? [...params, rpcStateOverride] : [...params],\n    })\n    return formatUserOperationGas(result) as EstimateUserOperationGasReturnType<\n      account,\n      accountOverride\n    >\n  } catch (error) {\n    const calls = (parameters as any).calls\n    throw getUserOperationError(error as BaseError, {\n      ...(request as UserOperation),\n      ...(calls ? { calls } : {}),\n    })\n  }\n}\n"],"names":[],"mappings":";;;AAOA,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAA;AANjE,OAAO,EAEL,YAAY,GACb,MAAM,yCAAyC,CAAA;AAkBhD,OAAO,EAAE,sBAAsB,EAAE,MAAM,iCAAiC,CAAA;AADxE,OAAO,EAAE,SAAS,EAAE,MAAM,6BAA6B,CAAA;AA0BvD,OAAO,EAGL,oBAAoB,GACrB,MAAM,2BAA2B,CAAA;AARlC,OAAO,EAEL,0BAA0B,GAC3B,MAAM,gDAAgD,CAAA;AAPvD,OAAO,EAEL,sBAAsB,GACvB,MAAM,4CAA4C,CAAA;AAJnD,OAAO,EAAE,qBAAqB,EAAE,MAAM,6CAA6C,CAAA;;;;;;;;;AA4G5E,KAAK,UAAU,wBAAwB,CAK5C,MAAqD,EACrD,UAIC;IAED,MAAM,EACJ,OAAO,EAAE,QAAQ,GAAG,MAAM,CAAC,OAAO,EAClC,iBAAiB,EACjB,aAAa,EACd,GAAG,UAAU,CAAA;IAEd,IAAI,CAAC,QAAQ,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,yJAAI,uBAAoB,EAAE,CAAA;IACrE,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,0KAAC,eAAA,AAAY,EAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;IAE7D,MAAM,gBAAgB,iKAAG,yBAAA,AAAsB,EAAC,aAAa,CAAC,CAAA;IAE9D,MAAM,OAAO,GAAG,OAAO,GACnB,OAAM,qKAAA,AAAS,EACb,MAAM,0MACN,uBAAoB,EACpB,sBAAsB,CACvB,CAAC;QACA,GAAG,UAAU;QACb,UAAU,EAAE;YAAC,SAAS;YAAE,OAAO;YAAE,WAAW;YAAE,WAAW;SAAC;KACd,CAAC,GAC/C,UAAU,CAAA;IAEd,IAAI,CAAC;QACH,MAAM,MAAM,GAAG;yNACb,6BAA0B,AAA1B,EAA2B,OAAwB,CAAC;YACnD,iBAAiB,IAAI,OAAO,EAAE,UAAU,EAAE,OAAO,CAAE;SAC5C,CAAA;QACV,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;YAClC,MAAM,EAAE,8BAA8B;YACtC,MAAM,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC;mBAAG,MAAM;gBAAE,gBAAgB;aAAC,CAAC,CAAC,CAAC,CAAC;mBAAG,MAAM;aAAC;SACvE,CAAC,CAAA;QACF,gNAAO,yBAAA,AAAsB,EAAC,MAAM,CAGnC,CAAA;IACH,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC;QACf,MAAM,KAAK,GAAI,UAAkB,CAAC,KAAK,CAAA;QACvC,gNAAM,wBAAA,AAAqB,EAAC,KAAkB,EAAE;YAC9C,GAAI,OAAyB;YAC7B,GAAG,AAAC,KAAK,CAAC,CAAC,CAAC;gBAAE,KAAK;YAAA,CAAE,CAAC,CAAC,CAAC,CAAA,CAAE,CAAC;SAC5B,CAAC,CAAA;IACJ,CAAC;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1789, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1795, "column": 0}, "map": {"version":3,"file":"getSupportedEntryPoints.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/actions/bundler/getSupportedEntryPoints.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { RequestErrorType } from '../../../utils/buildRequest.js'\n\nexport type GetSupportedEntryPointsReturnType = readonly Address[]\nexport type GetSupportedEntryPointsErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the EntryPoints that the bundler supports.\n *\n * - Docs: https://viem.sh/actions/bundler/getSupportedEntryPoints\n *\n * @param client - Client to use\n * @param parameters - {@link GetSupportedEntryPointsParameters}\n * @returns Supported Entry Points. {@link GetSupportedEntryPointsReturnType}\n *\n * @example\n * import { createBundlerClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getSupportedEntryPoints } from 'viem/actions'\n *\n * const bundlerClient = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const addresses = await getSupportedEntryPoints(bundlerClient)\n */\nexport function getSupportedEntryPoints(client: Client<Transport>) {\n  return client.request({ method: 'eth_supportedEntryPoints' })\n}\n"],"names":[],"mappings":"AASA;;;;;;;;;;;;;;;;;;;;GAoBG;;;AACG,SAAU,uBAAuB,CAAC,MAAyB;IAC/D,OAAO,MAAM,CAAC,OAAO,CAAC;QAAE,MAAM,EAAE,0BAA0B;IAAA,CAAE,CAAC,CAAA;AAC/D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1823, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1829, "column": 0}, "map": {"version":3,"file":"userOperation.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/utils/formatters/userOperation.ts"],"sourcesContent":["import type { ErrorType } from '../../../errors/utils.js'\nimport type { RpcUserOperation } from '../../types/rpc.js'\nimport type { UserOperation } from '../../types/userOperation.js'\n\nexport type FormatUserOperationErrorType = ErrorType\n\nexport function formatUserOperation(parameters: RpcUserOperation) {\n  const userOperation = { ...parameters } as unknown as UserOperation\n\n  if (parameters.callGasLimit)\n    userOperation.callGasLimit = BigInt(parameters.callGasLimit)\n  if (parameters.maxFeePerGas)\n    userOperation.maxFeePerGas = BigInt(parameters.maxFeePerGas)\n  if (parameters.maxPriorityFeePerGas)\n    userOperation.maxPriorityFeePerGas = BigInt(parameters.maxPriorityFeePerGas)\n  if (parameters.nonce) userOperation.nonce = BigInt(parameters.nonce)\n  if (parameters.paymasterPostOpGasLimit)\n    userOperation.paymasterPostOpGasLimit = BigInt(\n      parameters.paymasterPostOpGasLimit,\n    )\n  if (parameters.paymasterVerificationGasLimit)\n    userOperation.paymasterVerificationGasLimit = BigInt(\n      parameters.paymasterVerificationGasLimit,\n    )\n  if (parameters.preVerificationGas)\n    userOperation.preVerificationGas = BigInt(parameters.preVerificationGas)\n  if (parameters.verificationGasLimit)\n    userOperation.verificationGasLimit = BigInt(parameters.verificationGasLimit)\n\n  return userOperation\n}\n"],"names":[],"mappings":";;;AAMM,SAAU,mBAAmB,CAAC,UAA4B;IAC9D,MAAM,aAAa,GAAG;QAAE,GAAG,UAAU;IAAA,CAA8B,CAAA;IAEnE,IAAI,UAAU,CAAC,YAAY,EACzB,aAAa,CAAC,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,CAAA;IAC9D,IAAI,UAAU,CAAC,YAAY,EACzB,aAAa,CAAC,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,CAAA;IAC9D,IAAI,UAAU,CAAC,oBAAoB,EACjC,aAAa,CAAC,oBAAoB,GAAG,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAA;IAC9E,IAAI,UAAU,CAAC,KAAK,EAAE,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;IACpE,IAAI,UAAU,CAAC,uBAAuB,EACpC,aAAa,CAAC,uBAAuB,GAAG,MAAM,CAC5C,UAAU,CAAC,uBAAuB,CACnC,CAAA;IACH,IAAI,UAAU,CAAC,6BAA6B,EAC1C,aAAa,CAAC,6BAA6B,GAAG,MAAM,CAClD,UAAU,CAAC,6BAA6B,CACzC,CAAA;IACH,IAAI,UAAU,CAAC,kBAAkB,EAC/B,aAAa,CAAC,kBAAkB,GAAG,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAA;IAC1E,IAAI,UAAU,CAAC,oBAAoB,EACjC,aAAa,CAAC,oBAAoB,GAAG,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAA;IAE9E,OAAO,aAAa,CAAA;AACtB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1846, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1852, "column": 0}, "map": {"version":3,"file":"getUserOperation.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/actions/bundler/getUserOperation.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Hash } from '../../../types/misc.js'\nimport type { Prettify } from '../../../types/utils.js'\nimport type { RequestErrorType } from '../../../utils/buildRequest.js'\nimport {\n  UserOperationNotFoundError,\n  type UserOperationNotFoundErrorType,\n} from '../../errors/userOperation.js'\nimport type { UserOperation } from '../../types/userOperation.js'\nimport { formatUserOperation } from '../../utils/formatters/userOperation.js'\n\nexport type GetUserOperationParameters = {\n  /** The hash of the User Operation. */\n  hash: Hash\n}\n\nexport type GetUserOperationReturnType = Prettify<{\n  /** The block hash the User Operation was included on. */\n  blockHash: Hash\n  /** The block number the User Operation was included on. */\n  blockNumber: bigint\n  /** The EntryPoint which handled the User Operation. */\n  entryPoint: Address\n  /** The hash of the transaction which included the User Operation. */\n  transactionHash: Hash\n  /** The User Operation. */\n  userOperation: UserOperation\n}>\n\nexport type GetUserOperationErrorType =\n  | RequestErrorType\n  | UserOperationNotFoundErrorType\n  | ErrorType\n\n/**\n * Retrieves information about a User Operation given a hash.\n *\n * - Docs: https://viem.sh/account-abstraction/actions/bundler/getUserOperation\n *\n * @param client - Client to use\n * @param parameters - {@link GetUserOperationParameters}\n * @returns The receipt. {@link GetUserOperationReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getUserOperation } from 'viem/actions\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await getUserOperation(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getUserOperation(\n  client: Client<Transport>,\n  { hash }: GetUserOperationParameters,\n) {\n  const result = await client.request(\n    {\n      method: 'eth_getUserOperationByHash',\n      params: [hash],\n    },\n    { dedupe: true },\n  )\n\n  if (!result) throw new UserOperationNotFoundError({ hash })\n\n  const { blockHash, blockNumber, entryPoint, transactionHash, userOperation } =\n    result\n\n  return {\n    blockHash,\n    blockNumber: BigInt(blockNumber),\n    entryPoint,\n    transactionHash,\n    userOperation: formatUserOperation(userOperation),\n  }\n}\n"],"names":[],"mappings":";;;AAOA,OAAO,EACL,0BAA0B,GAE3B,MAAM,+BAA+B,CAAA;AAEtC,OAAO,EAAE,mBAAmB,EAAE,MAAM,yCAAyC,CAAA;;;AAgDtE,KAAK,UAAU,gBAAgB,CACpC,MAAyB,EACzB,EAAE,IAAI,EAA8B;IAEpC,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,OAAO,CACjC;QACE,MAAM,EAAE,4BAA4B;QACpC,MAAM,EAAE;YAAC,IAAI;SAAC;KACf,EACD;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CACjB,CAAA;IAED,IAAI,CAAC,MAAM,EAAE,MAAM,yLAAI,6BAA0B,CAAC;QAAE,IAAI;IAAA,CAAE,CAAC,CAAA;IAE3D,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,eAAe,EAAE,aAAa,EAAE,GAC1E,MAAM,CAAA;IAER,OAAO;QACL,SAAS;QACT,WAAW,EAAE,MAAM,CAAC,WAAW,CAAC;QAChC,UAAU;QACV,eAAe;QACf,aAAa,wMAAE,sBAAA,AAAmB,EAAC,aAAa,CAAC;KAClD,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1880, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1886, "column": 0}, "map": {"version":3,"file":"userOperationReceipt.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/utils/formatters/userOperationReceipt.ts"],"sourcesContent":["import type { ErrorType } from '../../../errors/utils.js'\nimport { formatLog } from '../../../utils/formatters/log.js'\nimport { formatTransactionReceipt } from '../../../utils/formatters/transactionReceipt.js'\nimport type { RpcUserOperationReceipt } from '../../types/rpc.js'\nimport type { UserOperationReceipt } from '../../types/userOperation.js'\n\nexport type FormatUserOperationReceiptErrorType = ErrorType\n\nexport function formatUserOperationReceipt(\n  parameters: RpcUserOperationReceipt,\n) {\n  const receipt = { ...parameters } as unknown as UserOperationReceipt\n\n  if (parameters.actualGasCost)\n    receipt.actualGasCost = BigInt(parameters.actualGasCost)\n  if (parameters.actualGasUsed)\n    receipt.actualGasUsed = BigInt(parameters.actualGasUsed)\n  if (parameters.logs)\n    receipt.logs = parameters.logs.map((log) => formatLog(log)) as any\n  if (parameters.receipt)\n    receipt.receipt = formatTransactionReceipt(receipt.receipt as any)\n\n  return receipt\n}\n"],"names":[],"mappings":";;;AACA,OAAO,EAAE,SAAS,EAAE,MAAM,kCAAkC,CAAA;AAC5D,OAAO,EAAE,wBAAwB,EAAE,MAAM,iDAAiD,CAAA;;;AAMpF,SAAU,0BAA0B,CACxC,UAAmC;IAEnC,MAAM,OAAO,GAAG;QAAE,GAAG,UAAU;IAAA,CAAqC,CAAA;IAEpE,IAAI,UAAU,CAAC,aAAa,EAC1B,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,CAAA;IAC1D,IAAI,UAAU,CAAC,aAAa,EAC1B,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,CAAA;IAC1D,IAAI,UAAU,CAAC,IAAI,EACjB,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,iKAAC,YAAA,AAAS,EAAC,GAAG,CAAC,CAAQ,CAAA;IACpE,IAAI,UAAU,CAAC,OAAO,EACpB,OAAO,CAAC,OAAO,oLAAG,2BAAA,AAAwB,EAAC,OAAO,CAAC,OAAc,CAAC,CAAA;IAEpE,OAAO,OAAO,CAAA;AAChB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1903, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1909, "column": 0}, "map": {"version":3,"file":"getUserOperationReceipt.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/actions/bundler/getUserOperationReceipt.ts"],"sourcesContent":["import type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Hash } from '../../../types/misc.js'\nimport type { Prettify } from '../../../types/utils.js'\nimport type { RequestErrorType } from '../../../utils/buildRequest.js'\nimport {\n  UserOperationReceiptNotFoundError,\n  type UserOperationReceiptNotFoundErrorType,\n} from '../../errors/userOperation.js'\nimport type { UserOperationReceipt } from '../../types/userOperation.js'\nimport { formatUserOperationReceipt } from '../../utils/formatters/userOperationReceipt.js'\n\nexport type GetUserOperationReceiptParameters = {\n  /** The hash of the User Operation. */\n  hash: Hash\n}\n\nexport type GetUserOperationReceiptReturnType = Prettify<UserOperationReceipt>\n\nexport type GetUserOperationReceiptErrorType =\n  | RequestErrorType\n  | UserOperationReceiptNotFoundErrorType\n  | ErrorType\n\n/**\n * Returns the User Operation Receipt given a User Operation hash.\n *\n * - Docs: https://viem.sh/docs/actions/bundler/getUserOperationReceipt\n *\n * @param client - Client to use\n * @param parameters - {@link GetUserOperationReceiptParameters}\n * @returns The receipt. {@link GetUserOperationReceiptReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getUserOperationReceipt } from 'viem/actions\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await getUserOperationReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getUserOperationReceipt(\n  client: Client<Transport>,\n  { hash }: GetUserOperationReceiptParameters,\n) {\n  const receipt = await client.request(\n    {\n      method: 'eth_getUserOperationReceipt',\n      params: [hash],\n    },\n    { dedupe: true },\n  )\n\n  if (!receipt) throw new UserOperationReceiptNotFoundError({ hash })\n\n  return formatUserOperationReceipt(receipt)\n}\n"],"names":[],"mappings":";;;AAMA,OAAO,EACL,iCAAiC,GAElC,MAAM,+BAA+B,CAAA;AAEtC,OAAO,EAAE,0BAA0B,EAAE,MAAM,gDAAgD,CAAA;;;AAqCpF,KAAK,UAAU,uBAAuB,CAC3C,MAAyB,EACzB,EAAE,IAAI,EAAqC;IAE3C,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,OAAO,CAClC;QACE,MAAM,EAAE,6BAA6B;QACrC,MAAM,EAAE;YAAC,IAAI;SAAC;KACf,EACD;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CACjB,CAAA;IAED,IAAI,CAAC,OAAO,EAAE,MAAM,yLAAI,oCAAiC,CAAC;QAAE,IAAI;IAAA,CAAE,CAAC,CAAA;IAEnE,oNAAO,6BAAA,AAA0B,EAAC,OAAO,CAAC,CAAA;AAC5C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1930, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1936, "column": 0}, "map": {"version":3,"file":"sendUserOperation.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/actions/bundler/sendUserOperation.ts"],"sourcesContent":["import type { Address, Narrow } from 'abitype'\nimport { parseAccount } from '../../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../../errors/account.js'\nimport type { BaseError } from '../../../errors/base.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Calls } from '../../../types/calls.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { Hex } from '../../../types/misc.js'\nimport type { Assign, MaybeRequired, OneOf } from '../../../types/utils.js'\nimport type { RequestErrorType } from '../../../utils/buildRequest.js'\nimport { getAction } from '../../../utils/getAction.js'\nimport type { SmartAccount } from '../../accounts/types.js'\nimport type { PaymasterActions } from '../../clients/decorators/paymaster.js'\nimport type {\n  DeriveSmartAccount,\n  GetSmartAccountParameter,\n} from '../../types/account.js'\nimport type {\n  DeriveEntryPointVersion,\n  EntryPointVersion,\n} from '../../types/entryPointVersion.js'\nimport type {\n  UserOperation,\n  UserOperationRequest,\n} from '../../types/userOperation.js'\nimport { getUserOperationError } from '../../utils/errors/getUserOperationError.js'\nimport {\n  type FormatUserOperationRequestErrorType,\n  formatUserOperationRequest,\n} from '../../utils/formatters/userOperationRequest.js'\nimport {\n  type PrepareUserOperationErrorType,\n  type PrepareUserOperationParameters,\n  prepareUserOperation,\n} from './prepareUserOperation.js'\n\nexport type SendUserOperationParameters<\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n  accountOverride extends SmartAccount | undefined = SmartAccount | undefined,\n  calls extends readonly unknown[] = readonly unknown[],\n  //\n  _derivedAccount extends SmartAccount | undefined = DeriveSmartAccount<\n    account,\n    accountOverride\n  >,\n  _derivedVersion extends\n    EntryPointVersion = DeriveEntryPointVersion<_derivedAccount>,\n> = GetSmartAccountParameter<account, accountOverride, false> &\n  (\n    | UserOperation // Accept a full-formed User Operation.\n    | Assign<\n        // Accept a partially-formed User Operation (UserOperationRequest) to be filled.\n        UserOperationRequest<_derivedVersion>,\n        OneOf<{ calls: Calls<Narrow<calls>> } | { callData: Hex }> & {\n          paymaster?:\n            | Address\n            | true\n            | {\n                /** Retrieves paymaster-related User Operation properties to be used for sending the User Operation. */\n                getPaymasterData?:\n                  | PaymasterActions['getPaymasterData']\n                  | undefined\n                /** Retrieves paymaster-related User Operation properties to be used for gas estimation. */\n                getPaymasterStubData?:\n                  | PaymasterActions['getPaymasterStubData']\n                  | undefined\n              }\n            | undefined\n          /** Paymaster context to pass to `getPaymasterData` and `getPaymasterStubData` calls. */\n          paymasterContext?: unknown | undefined\n        }\n      >\n  ) &\n  // Allow the EntryPoint address to be overridden, if no Account is provided, it will need to be required.\n  MaybeRequired<\n    { entryPointAddress?: Address },\n    _derivedAccount extends undefined ? true : false\n  >\nexport type SendUserOperationReturnType = Hex\n\nexport type SendUserOperationErrorType =\n  | FormatUserOperationRequestErrorType\n  | PrepareUserOperationErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Broadcasts a User Operation to the Bundler.\n *\n * - Docs: https://viem.sh/actions/bundler/sendUserOperation\n *\n * @param client - Client to use\n * @param parameters - {@link SendUserOperationParameters}\n * @returns The User Operation hash. {@link SendUserOperationReturnType}\n *\n * @example\n * import { createBundlerClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { toSmartAccount } from 'viem/accounts'\n * import { sendUserOperation } from 'viem/actions'\n *\n * const account = await toSmartAccount({ ... })\n *\n * const bundlerClient = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const values = await sendUserOperation(bundlerClient, {\n *   account,\n *   calls: [{ to: '0x...', value: parseEther('1') }],\n * })\n */\nexport async function sendUserOperation<\n  const calls extends readonly unknown[],\n  account extends SmartAccount | undefined,\n  accountOverride extends SmartAccount | undefined = undefined,\n>(\n  client: Client<Transport, Chain | undefined, account>,\n  parameters: SendUserOperationParameters<account, accountOverride, calls>,\n) {\n  const { account: account_ = client.account, entryPointAddress } = parameters\n\n  if (!account_ && !parameters.sender) throw new AccountNotFoundError()\n  const account = account_ ? parseAccount(account_) : undefined\n\n  const request = account\n    ? await getAction(\n        client,\n        prepareUserOperation,\n        'prepareUserOperation',\n      )(parameters as unknown as PrepareUserOperationParameters)\n    : parameters\n\n  const signature = (parameters.signature ||\n    (await account?.signUserOperation(request as UserOperation)))!\n\n  const rpcParameters = formatUserOperationRequest({\n    ...request,\n    signature,\n  } as UserOperation)\n\n  try {\n    return await client.request(\n      {\n        method: 'eth_sendUserOperation',\n        params: [\n          rpcParameters,\n          (entryPointAddress ?? account?.entryPoint.address)!,\n        ],\n      },\n      { retryCount: 0 },\n    )\n  } catch (error) {\n    const calls = (parameters as any).calls\n    throw getUserOperationError(error as BaseError, {\n      ...(request as UserOperation),\n      ...(calls ? { calls } : {}),\n      signature,\n    })\n  }\n}\n"],"names":[],"mappings":";;;AAIA,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAA;AAHjE,OAAO,EAAE,YAAY,EAAE,MAAM,yCAAyC,CAAA;AAWtE,OAAO,EAAE,SAAS,EAAE,MAAM,6BAA6B,CAAA;AAoBvD,OAAO,EAGL,oBAAoB,GACrB,MAAM,2BAA2B,CAAA;AARlC,OAAO,EAEL,0BAA0B,GAC3B,MAAM,gDAAgD,CAAA;AAJvD,OAAO,EAAE,qBAAqB,EAAE,MAAM,6CAA6C,CAAA;;;;;;;AAwF5E,KAAK,UAAU,iBAAiB,CAKrC,MAAqD,EACrD,UAAwE;IAExE,MAAM,EAAE,OAAO,EAAE,QAAQ,GAAG,MAAM,CAAC,OAAO,EAAE,iBAAiB,EAAE,GAAG,UAAU,CAAA;IAE5E,IAAI,CAAC,QAAQ,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,yJAAI,uBAAoB,EAAE,CAAA;IACrE,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,EAAC,uLAAA,AAAY,EAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;IAE7D,MAAM,OAAO,GAAG,OAAO,GACnB,gKAAM,YAAA,AAAS,EACb,MAAM,0MACN,uBAAoB,EACpB,sBAAsB,CACvB,CAAC,UAAuD,CAAC,GAC1D,UAAU,CAAA;IAEd,MAAM,SAAS,GAAG,AAAC,UAAU,CAAC,SAAS,IACpC,MAAM,OAAO,EAAE,iBAAiB,CAAC,OAAwB,CAAC,CAAC,CAAE,CAAA;IAEhE,MAAM,aAAa,IAAG,yOAAA,AAA0B,EAAC;QAC/C,GAAG,OAAO;QACV,SAAS;KACO,CAAC,CAAA;IAEnB,IAAI,CAAC;QACH,OAAO,MAAM,MAAM,CAAC,OAAO,CACzB;YACE,MAAM,EAAE,uBAAuB;YAC/B,MAAM,EAAE;gBACN,aAAa;gBACZ,iBAAiB,IAAI,OAAO,EAAE,UAAU,CAAC,OAAO,CAAE;aACpD;SACF,EACD;YAAE,UAAU,EAAE,CAAC;QAAA,CAAE,CAClB,CAAA;IACH,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC;QACf,MAAM,KAAK,GAAI,UAAkB,CAAC,KAAK,CAAA;QACvC,gNAAM,wBAAA,AAAqB,EAAC,KAAkB,EAAE;YAC9C,GAAI,OAAyB;YAC7B,GAAG,AAAC,KAAK,CAAC,CAAC,CAAC;gBAAE,KAAK;YAAA,CAAE,CAAC,CAAC,CAAC,CAAA,CAAE,CAAC;YAC3B,SAAS;SACV,CAAC,CAAA;IACJ,CAAC;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1982, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1988, "column": 0}, "map": {"version":3,"file":"waitForUserOperationReceipt.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/actions/bundler/waitForUserOperationReceipt.ts"],"sourcesContent":["import type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Hash } from '../../../types/misc.js'\nimport type { Prettify } from '../../../types/utils.js'\nimport { getAction } from '../../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../../utils/observe.js'\nimport { type PollErrorType, poll } from '../../../utils/poll.js'\nimport { stringify } from '../../../utils/stringify.js'\nimport {\n  WaitForUserOperationReceiptTimeoutError,\n  type WaitForUserOperationReceiptTimeoutErrorType,\n} from '../../errors/userOperation.js'\nimport type { UserOperationReceipt } from '../../types/userOperation.js'\nimport {\n  type GetUserOperationReceiptErrorType,\n  getUserOperationReceipt,\n} from './getUserOperationReceipt.js'\n\nexport type WaitForUserOperationReceiptParameters = {\n  /** The hash of the User Operation. */\n  hash: Hash\n  /**\n   * Polling frequency (in ms). Defaults to the client's pollingInterval config.\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number | undefined\n  /**\n   * The number of times to retry.\n   * @default 6\n   */\n  retryCount?: number | undefined\n  /** Optional timeout (in ms) to wait before stopping polling. */\n  timeout?: number | undefined\n}\n\nexport type WaitForUserOperationReceiptReturnType =\n  Prettify<UserOperationReceipt>\n\nexport type WaitForUserOperationReceiptErrorType =\n  | WaitForUserOperationReceiptTimeoutErrorType\n  | PollErrorType\n  | ObserveErrorType\n  | ErrorType\n\n/**\n * Waits for the User Operation to be included on a [Block](https://viem.sh/docs/glossary/terms#block) (one confirmation), and then returns the User Operation receipt.\n *\n * - Docs: https://viem.sh/docs/actions/bundler/waitForUserOperationReceipt\n *\n * @param client - Client to use\n * @param parameters - {@link WaitForUserOperationReceiptParameters}\n * @returns The receipt. {@link WaitForUserOperationReceiptReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { waitForUserOperationReceipt } from 'viem/actions'\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await waitForUserOperationReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport function waitForUserOperationReceipt(\n  client: Client<Transport>,\n  parameters: WaitForUserOperationReceiptParameters,\n): Promise<WaitForUserOperationReceiptReturnType> {\n  const {\n    hash,\n    pollingInterval = client.pollingInterval,\n    retryCount,\n    timeout = 120_000,\n  } = parameters\n\n  let count = 0\n  const observerId = stringify([\n    'waitForUserOperationReceipt',\n    client.uid,\n    hash,\n  ])\n\n  return new Promise((resolve, reject) => {\n    const unobserve = observe(observerId, { resolve, reject }, (emit) => {\n      const done = (fn: () => void) => {\n        unpoll()\n        fn()\n        unobserve()\n      }\n\n      const unpoll = poll(\n        async () => {\n          if (retryCount && count >= retryCount)\n            done(() =>\n              emit.reject(\n                new WaitForUserOperationReceiptTimeoutError({ hash }),\n              ),\n            )\n\n          try {\n            const receipt = await getAction(\n              client,\n              getUserOperationReceipt,\n              'getUserOperationReceipt',\n            )({ hash })\n            done(() => emit.resolve(receipt))\n          } catch (err) {\n            const error = err as GetUserOperationReceiptErrorType\n            if (error.name !== 'UserOperationReceiptNotFoundError')\n              done(() => emit.reject(error))\n          }\n\n          count++\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      if (timeout)\n        setTimeout(\n          () =>\n            done(() =>\n              emit.reject(\n                new WaitForUserOperationReceiptTimeoutError({ hash }),\n              ),\n            ),\n          timeout,\n        )\n\n      return unpoll\n    })\n  })\n}\n"],"names":[],"mappings":";;;AAQA,OAAO,EAAE,SAAS,EAAE,MAAM,6BAA6B,CAAA;AAFvD,OAAO,EAAyB,OAAO,EAAE,MAAM,2BAA2B,CAAA;AAC1E,OAAO,EAAsB,IAAI,EAAE,MAAM,wBAAwB,CAAA;AAEjE,OAAO,EACL,uCAAuC,GAExC,MAAM,+BAA+B,CAAA;AAPtC,OAAO,EAAE,SAAS,EAAE,MAAM,6BAA6B,CAAA;AASvD,OAAO,EAEL,uBAAuB,GACxB,MAAM,8BAA8B,CAAA;;;;;;;AAmD/B,SAAU,2BAA2B,CACzC,MAAyB,EACzB,UAAiD;IAEjD,MAAM,EACJ,IAAI,EACJ,eAAe,GAAG,MAAM,CAAC,eAAe,EACxC,UAAU,EACV,OAAO,GAAG,OAAO,EAClB,GAAG,UAAU,CAAA;IAEd,IAAI,KAAK,GAAG,CAAC,CAAA;IACb,MAAM,UAAU,6JAAG,YAAA,AAAS,EAAC;QAC3B,6BAA6B;QAC7B,MAAM,CAAC,GAAG;QACV,IAAI;KACL,CAAC,CAAA;IAEF,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,MAAM,SAAS,GAAG,kKAAA,AAAO,EAAC,UAAU,EAAE;YAAE,OAAO;YAAE,MAAM;QAAA,CAAE,EAAE,CAAC,IAAI,EAAE,EAAE;YAClE,MAAM,IAAI,GAAG,CAAC,EAAc,EAAE,EAAE;gBAC9B,MAAM,EAAE,CAAA;gBACR,EAAE,EAAE,CAAA;gBACJ,SAAS,EAAE,CAAA;YACb,CAAC,CAAA;YAED,MAAM,MAAM,wJAAG,OAAA,AAAI,EACjB,KAAK,IAAI,EAAE;gBACT,IAAI,UAAU,IAAI,KAAK,IAAI,UAAU,EACnC,IAAI,CAAC,GAAG,CACN,CADQ,GACJ,CAAC,MAAM,CACT,wLAAI,2CAAuC,CAAC;wBAAE,IAAI;oBAAA,CAAE,CAAC,CACtD,CACF,CAAA;gBAEH,IAAI,CAAC;oBACH,MAAM,OAAO,GAAG,gKAAM,YAAA,AAAS,EAC7B,MAAM,4MACN,2BAAuB,EACvB,yBAAyB,CAC1B,CAAC;wBAAE,IAAI;oBAAA,CAAE,CAAC,CAAA;oBACX,IAAI,CAAC,GAAG,CAAG,CAAD,GAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAA;gBACnC,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC;oBACb,MAAM,KAAK,GAAG,GAAuC,CAAA;oBACrD,IAAI,KAAK,CAAC,IAAI,KAAK,mCAAmC,EACpD,IAAI,CAAC,GAAG,CAAG,CAAD,GAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;gBAClC,CAAC;gBAED,KAAK,EAAE,CAAA;YACT,CAAC,EACD;gBACE,WAAW,EAAE,IAAI;gBACjB,QAAQ,EAAE,eAAe;aAC1B,CACF,CAAA;YAED,IAAI,OAAO,EACT,UAAU,CACR,GAAG,CACD,CADG,GACC,CAAC,GAAG,CACN,CADQ,GACJ,CAAC,MAAM,CACT,yLAAI,0CAAuC,CAAC;wBAAE,IAAI;oBAAA,CAAE,CAAC,CACtD,CACF,EACH,OAAO,CACR,CAAA;YAEH,OAAO,MAAM,CAAA;QACf,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2046, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2052, "column": 0}, "map": {"version":3,"file":"bundler.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/clients/decorators/bundler.ts"],"sourcesContent":["import {\n  type GetChainIdReturnType,\n  getChainId,\n} from '../../../actions/public/getChainId.js'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { SmartAccount } from '../../accounts/types.js'\nimport {\n  type EstimateUserOperationGasParameters,\n  type EstimateUserOperationGasReturnType,\n  estimateUserOperationGas,\n} from '../../actions/bundler/estimateUserOperationGas.js'\nimport {\n  type GetSupportedEntryPointsReturnType,\n  getSupportedEntryPoints,\n} from '../../actions/bundler/getSupportedEntryPoints.js'\nimport {\n  type GetUserOperationParameters,\n  type GetUserOperationReturnType,\n  getUserOperation,\n} from '../../actions/bundler/getUserOperation.js'\nimport {\n  type GetUserOperationReceiptParameters,\n  type GetUserOperationReceiptReturnType,\n  getUserOperationReceipt,\n} from '../../actions/bundler/getUserOperationReceipt.js'\nimport {\n  type PrepareUserOperationParameters,\n  type PrepareUserOperationRequest,\n  type PrepareUserOperationReturnType,\n  prepareUserOperation,\n} from '../../actions/bundler/prepareUserOperation.js'\nimport {\n  type SendUserOperationParameters,\n  type SendUserOperationReturnType,\n  sendUserOperation,\n} from '../../actions/bundler/sendUserOperation.js'\nimport {\n  type WaitForUserOperationReceiptParameters,\n  type WaitForUserOperationReceiptReturnType,\n  waitForUserOperationReceipt,\n} from '../../actions/bundler/waitForUserOperationReceipt.js'\n\nexport type BundlerActions<\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n> = {\n  /**\n   * Returns an estimate of gas values necessary to execute the User Operation.\n   *\n   * - Docs: https://viem.sh/actions/bundler/estimateUserOperationGas\n   *\n   * @param client - Client to use\n   * @param parameters - {@link EstimateUserOperationGasParameters}\n   * @returns The gas estimate (in wei). {@link EstimateUserOperationGasReturnType}\n   *\n   * @example\n   * import { createBundlerClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { toSmartAccount } from 'viem/accounts'\n   *\n   * const account = await toSmartAccount({ ... })\n   *\n   * const bundlerClient = createBundlerClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const values = await bundlerClient.estimateUserOperationGas({\n   *   account,\n   *   calls: [{ to: '0x...', value: parseEther('1') }],\n   * })\n   */\n  estimateUserOperationGas: <\n    const calls extends readonly unknown[],\n    accountOverride extends SmartAccount | undefined = undefined,\n  >(\n    parameters: EstimateUserOperationGasParameters<\n      account,\n      accountOverride,\n      calls\n    >,\n  ) => Promise<EstimateUserOperationGasReturnType<account, accountOverride>>\n  /**\n   * Returns the chain ID associated with the bundler.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getChainId\n   * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n   *\n   * @returns The current chain ID. {@link GetChainIdReturnType}\n   *\n   * @example\n   * import { http } from 'viem'\n   * import { createBundlerClient, mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const chainId = await client.getChainId()\n   * // 1\n   */\n  getChainId: () => Promise<GetChainIdReturnType>\n  /**\n   * Returns the EntryPoints that the bundler supports.\n   *\n   * - Docs: https://viem.sh/actions/bundler/getSupportedEntryPoints\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetSupportedEntryPointsParameters}\n   * @returns Supported Entry Points. {@link GetSupportedEntryPointsReturnType}\n   *\n   * @example\n   * import { createBundlerClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const bundlerClient = createBundlerClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const addresses = await bundlerClient.getSupportedEntryPoints()\n   */\n  getSupportedEntryPoints: () => Promise<GetSupportedEntryPointsReturnType>\n  /**\n   * Returns the information about a User Operation given a hash.\n   *\n   * - Docs: https://viem.sh/docs/actions/bundler/getUserOperation\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetUserOperationParameters}\n   * @returns The receipt. {@link GetUserOperationReturnType}\n   *\n   * @example\n   * import { createBundlerClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createBundlerClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const receipt = await client.getUserOperation({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getUserOperation: (\n    parameters: GetUserOperationParameters,\n  ) => Promise<GetUserOperationReturnType>\n  /**\n   * Returns the User Operation Receipt given a User Operation hash.\n   *\n   * - Docs: https://viem.sh/docs/actions/bundler/getUserOperationReceipt\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetUserOperationReceiptParameters}\n   * @returns The receipt. {@link GetUserOperationReceiptReturnType}\n   *\n   * @example\n   * import { createBundlerClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createBundlerClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const receipt = await client.getUserOperationReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getUserOperationReceipt: (\n    parameters: GetUserOperationReceiptParameters,\n  ) => Promise<GetUserOperationReceiptReturnType>\n  /**\n   * Prepares a User Operation and fills in missing properties.\n   *\n   * - Docs: https://viem.sh/actions/bundler/prepareUserOperation\n   *\n   * @param args - {@link PrepareUserOperationParameters}\n   * @returns The User Operation. {@link PrepareUserOperationReturnType}\n   *\n   * @example\n   * import { createBundlerClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { toSmartAccount } from 'viem/accounts'\n   *\n   * const account = await toSmartAccount({ ... })\n   *\n   * const client = createBundlerClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const request = await client.prepareUserOperation({\n   *   account,\n   *   calls: [{ to: '0x...', value: parseEther('1') }],\n   * })\n   */\n  prepareUserOperation: <\n    const calls extends readonly unknown[],\n    const request extends PrepareUserOperationRequest<\n      account,\n      accountOverride,\n      calls\n    >,\n    accountOverride extends SmartAccount | undefined = undefined,\n  >(\n    parameters: PrepareUserOperationParameters<\n      account,\n      accountOverride,\n      calls,\n      request\n    >,\n  ) => Promise<\n    PrepareUserOperationReturnType<account, accountOverride, calls, request>\n  >\n  /**\n   * Broadcasts a User Operation to the Bundler.\n   *\n   * - Docs: https://viem.sh/actions/bundler/sendUserOperation\n   *\n   * @param client - Client to use\n   * @param parameters - {@link SendUserOperationParameters}\n   * @returns The User Operation hash. {@link SendUserOperationReturnType}\n   *\n   * @example\n   * import { createBundlerClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { toSmartAccount } from 'viem/accounts'\n   *\n   * const account = toSmartAccount({ ... })\n   *\n   * const bundlerClient = createBundlerClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const values = await bundlerClient.sendUserOperation({\n   *   account,\n   *   calls: [{ to: '0x...', value: parseEther('1') }],\n   * })\n   */\n  sendUserOperation: <\n    const calls extends readonly unknown[],\n    accountOverride extends SmartAccount | undefined = undefined,\n  >(\n    parameters: SendUserOperationParameters<account, accountOverride, calls>,\n  ) => Promise<SendUserOperationReturnType>\n  /**\n   * Waits for the User Operation to be included on a [Block](https://viem.sh/docs/glossary/terms#block) (one confirmation), and then returns the User Operation receipt.\n   *\n   * - Docs: https://viem.sh/docs/actions/bundler/waitForUserOperationReceipt\n   *\n   * @param client - Client to use\n   * @param parameters - {@link WaitForUserOperationReceiptParameters}\n   * @returns The receipt. {@link WaitForUserOperationReceiptReturnType}\n   *\n   * @example\n   * import { createBundlerClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createBundlerClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const receipt = await client.waitForUserOperationReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  waitForUserOperationReceipt: (\n    parameters: WaitForUserOperationReceiptParameters,\n  ) => Promise<WaitForUserOperationReceiptReturnType>\n}\n\nexport function bundlerActions<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n>(client: Client<transport, chain, account>): BundlerActions<account> {\n  return {\n    estimateUserOperationGas: (parameters) =>\n      estimateUserOperationGas(client, parameters),\n    getChainId: () => getChainId(client),\n    getSupportedEntryPoints: () => getSupportedEntryPoints(client),\n    getUserOperation: (parameters) => getUserOperation(client, parameters),\n    getUserOperationReceipt: (parameters) =>\n      getUserOperationReceipt(client, parameters),\n    prepareUserOperation: (parameters) =>\n      prepareUserOperation(client, parameters),\n    sendUserOperation: (parameters) => sendUserOperation(client, parameters),\n    waitForUserOperationReceipt: (parameters) =>\n      waitForUserOperationReceipt(client, parameters),\n  }\n}\n"],"names":[],"mappings":";;;AAQA,OAAO,EAGL,wBAAwB,GACzB,MAAM,mDAAmD,CAAA;AAZ1D,OAAO,EAEL,UAAU,GACX,MAAM,uCAAuC,CAAA;AAU9C,OAAO,EAEL,uBAAuB,GACxB,MAAM,kDAAkD,CAAA;AACzD,OAAO,EAGL,gBAAgB,GACjB,MAAM,2CAA2C,CAAA;AAClD,OAAO,EAGL,uBAAuB,GACxB,MAAM,kDAAkD,CAAA;AACzD,OAAO,EAIL,oBAAoB,GACrB,MAAM,+CAA+C,CAAA;AACtD,OAAO,EAGL,iBAAiB,GAClB,MAAM,4CAA4C,CAAA;AACnD,OAAO,EAGL,2BAA2B,GAC5B,MAAM,sDAAsD,CAAA;;;;;;;;;AA0OvD,SAAU,cAAc,CAI5B,MAAyC;IACzC,OAAO;QACL,wBAAwB,EAAE,CAAC,UAAU,EAAE,EAAE,+MACvC,2BAAA,AAAwB,EAAC,MAAM,EAAE,UAAU,CAAC;QAC9C,UAAU,EAAE,GAAG,CAAG,CAAD,mLAAC,AAAU,EAAC,MAAM,CAAC;QACpC,uBAAuB,EAAE,GAAG,EAAE,8MAAC,0BAAA,AAAuB,EAAC,MAAM,CAAC;QAC9D,gBAAgB,EAAE,CAAC,UAAU,EAAE,EAAE,uMAAC,mBAAA,AAAgB,EAAC,MAAM,EAAE,UAAU,CAAC;QACtE,uBAAuB,EAAE,CAAC,UAAU,EAAE,EAAE,8MACtC,0BAAA,AAAuB,EAAC,MAAM,EAAE,UAAU,CAAC;QAC7C,oBAAoB,EAAE,CAAC,UAAU,EAAE,EAAE,2MACnC,uBAAoB,AAApB,EAAqB,MAAM,EAAE,UAAU,CAAC;QAC1C,iBAAiB,EAAE,CAAC,UAAU,EAAE,EAAE,wMAAC,oBAAA,AAAiB,EAAC,MAAM,EAAE,UAAU,CAAC;QACxE,2BAA2B,EAAE,CAAC,UAAU,EAAE,EAAE,kNAC1C,8BAAA,AAA2B,EAAC,MAAM,EAAE,UAAU,CAAC;KAClD,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2083, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2089, "column": 0}, "map": {"version":3,"file":"createBundlerClient.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/clients/createBundlerClient.ts"],"sourcesContent":["import type { EstimateFeesPerGasReturnType } from '../../actions/public/estimateFeesPerGas.js'\nimport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  createClient,\n} from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RpcSchema } from '../../types/eip1193.js'\nimport type { BundlerRpcSchema } from '../../types/eip1193.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { SmartAccount } from '../accounts/types.js'\nimport type { UserOperationRequest } from '../types/userOperation.js'\nimport { type BundlerActions, bundlerActions } from './decorators/bundler.js'\nimport type { PaymasterActions } from './decorators/paymaster.js'\n\nexport type BundlerClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n  client extends Client | undefined = Client | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain, account, rpcSchema>,\n    | 'account'\n    | 'cacheTime'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'rpcSchema'\n    | 'transport'\n  >\n> & {\n  /** Client that points to an Execution RPC URL. */\n  client?: client | Client | undefined\n  /** Paymaster configuration. */\n  paymaster?:\n    | true\n    | {\n        /** Retrieves paymaster-related User Operation properties to be used for sending the User Operation. */\n        getPaymasterData?: PaymasterActions['getPaymasterData'] | undefined\n        /** Retrieves paymaster-related User Operation properties to be used for gas estimation. */\n        getPaymasterStubData?:\n          | PaymasterActions['getPaymasterStubData']\n          | undefined\n      }\n    | undefined\n  /** Paymaster context to pass to `getPaymasterData` and `getPaymasterStubData` calls. */\n  paymasterContext?: unknown\n  /** User Operation configuration. */\n  userOperation?:\n    | {\n        /** Prepares fee properties for the User Operation request. */\n        estimateFeesPerGas?:\n          | ((parameters: {\n              account: account | SmartAccount\n              bundlerClient: Client\n              userOperation: UserOperationRequest\n            }) => Promise<EstimateFeesPerGasReturnType<'eip1559'>>)\n          | undefined\n      }\n    | undefined\n}\n\nexport type BundlerClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n  client extends Client | undefined = Client | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Client<\n    transport,\n    chain extends Chain\n      ? chain\n      : client extends Client<any, infer chain>\n        ? chain\n        : undefined,\n    account,\n    rpcSchema extends RpcSchema\n      ? [...BundlerRpcSchema, ...rpcSchema]\n      : BundlerRpcSchema,\n    BundlerActions<account>\n  >\n> & {\n  client: client\n  paymaster: BundlerClientConfig['paymaster'] | undefined\n  paymasterContext: BundlerClientConfig['paymasterContext'] | undefined\n  userOperation: BundlerClientConfig['userOperation'] | undefined\n}\n\nexport type CreateBundlerClientErrorType = CreateClientErrorType | ErrorType\n\n/**\n * Creates a Bundler Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\n *\n * - Docs: https://viem.sh/account-abstraction/clients/bundler\n *\n * @param config - {@link BundlerClientConfig}\n * @returns A Bundler Client. {@link BundlerClient}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { createBundlerClient } from 'viem/account-abstraction'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const bundlerClient = createBundlerClient({\n *   client,\n *   transport: http('https://public.pimlico.io/v2/1/rpc'),\n * })\n */\nexport function createBundlerClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  account extends SmartAccount | undefined = undefined,\n  client extends Client | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n>(\n  parameters: BundlerClientConfig<transport, chain, account, client, rpcSchema>,\n): BundlerClient<transport, chain, account, client, rpcSchema>\n\nexport function createBundlerClient(\n  parameters: BundlerClientConfig,\n): BundlerClient {\n  const {\n    client: client_,\n    key = 'bundler',\n    name = 'Bundler Client',\n    paymaster,\n    paymasterContext,\n    transport,\n    userOperation,\n  } = parameters\n  const client = Object.assign(\n    createClient({\n      ...parameters,\n      chain: parameters.chain ?? client_?.chain,\n      key,\n      name,\n      transport,\n      type: 'bundlerClient',\n    }),\n    { client: client_, paymaster, paymasterContext, userOperation },\n  )\n  return client.extend(bundlerActions) as any\n}\n"],"names":[],"mappings":";;;AACA,OAAO,EAIL,YAAY,GACb,MAAM,+BAA+B,CAAA;AAStC,OAAO,EAAuB,cAAc,EAAE,MAAM,yBAAyB,CAAA;;;AAmHvE,SAAU,mBAAmB,CACjC,UAA+B;IAE/B,MAAM,EACJ,MAAM,EAAE,OAAO,EACf,GAAG,GAAG,SAAS,EACf,IAAI,GAAG,gBAAgB,EACvB,SAAS,EACT,gBAAgB,EAChB,SAAS,EACT,aAAa,EACd,GAAG,UAAU,CAAA;IACd,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,gKAC1B,eAAA,AAAY,EAAC;QACX,GAAG,UAAU;QACb,KAAK,EAAE,UAAU,CAAC,KAAK,IAAI,OAAO,EAAE,KAAK;QACzC,GAAG;QACH,IAAI;QACJ,SAAS;QACT,IAAI,EAAE,eAAe;KACtB,CAAC,EACF;QAAE,MAAM,EAAE,OAAO;QAAE,SAAS;QAAE,gBAAgB;QAAE,aAAa;IAAA,CAAE,CAChE,CAAA;IACD,OAAO,MAAM,CAAC,MAAM,+LAAC,iBAAc,CAAQ,CAAA;AAC7C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2119, "column": 0}, "map": {"version":3,"file":"toPackedUserOperation.js","sources":["file:///Users/yogendrasankhla/Desktop/abstractsdksl/node_modules/viem/account-abstraction/utils/userOperation/toPackedUserOperation.ts"],"sourcesContent":["import { concat } from '../../../utils/data/concat.js'\nimport { pad } from '../../../utils/data/pad.js'\nimport { numberToHex } from '../../../utils/index.js'\nimport type {\n  PackedUserOperation,\n  UserOperation,\n} from '../../types/userOperation.js'\n\nexport function toPackedUserOperation(\n  userOperation: UserOperation,\n): PackedUserOperation {\n  const {\n    callGasLimit,\n    callData,\n    factory,\n    factoryData,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n    paymaster,\n    paymasterData,\n    paymasterPostOpGasLimit,\n    paymasterVerificationGasLimit,\n    sender,\n    signature = '0x',\n    verificationGasLimit,\n  } = userOperation\n\n  const accountGasLimits = concat([\n    pad(numberToHex(verificationGasLimit || 0n), { size: 16 }),\n    pad(numberToHex(callGasLimit || 0n), { size: 16 }),\n  ])\n  const initCode =\n    factory && factoryData ? concat([factory, factoryData]) : '0x'\n  const gasFees = concat([\n    pad(numberToHex(maxPriorityFeePerGas || 0n), { size: 16 }),\n    pad(numberToHex(maxFeePerGas || 0n), { size: 16 }),\n  ])\n  const nonce = userOperation.nonce ?? 0n\n  const paymasterAndData = paymaster\n    ? concat([\n        paymaster,\n        pad(numberToHex(paymasterVerificationGasLimit || 0n), {\n          size: 16,\n        }),\n        pad(numberToHex(paymasterPostOpGasLimit || 0n), {\n          size: 16,\n        }),\n        paymasterData || '0x',\n      ])\n    : '0x'\n  const preVerificationGas = userOperation.preVerificationGas ?? 0n\n\n  return {\n    accountGasLimits,\n    callData,\n    initCode,\n    gasFees,\n    nonce,\n    paymasterAndData,\n    preVerificationGas,\n    sender,\n    signature,\n  }\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,+BAA+B,CAAA;AACtD,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAA;AAChD,OAAO,EAAE,WAAW,EAAE,MAAM,yBAAyB,CAAA;;;;AAM/C,SAAU,qBAAqB,CACnC,aAA4B;IAE5B,MAAM,EACJ,YAAY,EACZ,QAAQ,EACR,OAAO,EACP,WAAW,EACX,oBAAoB,EACpB,YAAY,EACZ,SAAS,EACT,aAAa,EACb,uBAAuB,EACvB,6BAA6B,EAC7B,MAAM,EACN,SAAS,GAAG,IAAI,EAChB,oBAAoB,EACrB,GAAG,aAAa,CAAA;IAEjB,MAAM,gBAAgB,GAAG,wKAAA,AAAM,EAAC;oKAC9B,MAAA,AAAG,oKAAC,cAAA,AAAW,EAAC,oBAAoB,IAAI,EAAE,CAAC,EAAE;YAAE,IAAI,EAAE,EAAE;QAAA,CAAE,CAAC;SAC1D,iKAAA,AAAG,oKAAC,cAAA,AAAW,EAAC,YAAY,IAAI,EAAE,CAAC,EAAE;YAAE,IAAI,EAAE,EAAE;QAAA,CAAE,CAAC;KACnD,CAAC,CAAA;IACF,MAAM,QAAQ,GACZ,OAAO,IAAI,WAAW,CAAC,CAAC,EAAC,uKAAA,AAAM,EAAC;QAAC,OAAO;QAAE,WAAW;KAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAA;IAChE,MAAM,OAAO,IAAG,uKAAA,AAAM,EAAC;oKACrB,MAAA,AAAG,oKAAC,cAAA,AAAW,EAAC,oBAAoB,IAAI,EAAE,CAAC,EAAE;YAAE,IAAI,EAAE,EAAE;QAAA,CAAE,CAAC;oKAC1D,MAAA,AAAG,oKAAC,cAAA,AAAW,EAAC,YAAY,IAAI,EAAE,CAAC,EAAE;YAAE,IAAI,EAAE,EAAE;QAAA,CAAE,CAAC;KACnD,CAAC,CAAA;IACF,MAAM,KAAK,GAAG,aAAa,CAAC,KAAK,IAAI,EAAE,CAAA;IACvC,MAAM,gBAAgB,GAAG,SAAS,kKAC9B,SAAA,AAAM,EAAC;QACL,SAAS;oKACT,MAAA,AAAG,oKAAC,cAAA,AAAW,EAAC,6BAA6B,IAAI,EAAE,CAAC,EAAE;YACpD,IAAI,EAAE,EAAE;SACT,CAAC;oKACF,MAAA,AAAG,oKAAC,cAAA,AAAW,EAAC,uBAAuB,IAAI,EAAE,CAAC,EAAE;YAC9C,IAAI,EAAE,EAAE;SACT,CAAC;QACF,aAAa,IAAI,IAAI;KACtB,CAAC,GACF,IAAI,CAAA;IACR,MAAM,kBAAkB,GAAG,aAAa,CAAC,kBAAkB,IAAI,EAAE,CAAA;IAEjE,OAAO;QACL,gBAAgB;QAChB,QAAQ;QACR,QAAQ;QACR,OAAO;QACP,KAAK;QACL,gBAAgB;QAChB,kBAAkB;QAClB,MAAM;QACN,SAAS;KACV,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2174, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}