(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules_636037._.js", {

"[project]/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/**
 * @license React
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
"production" !== ("TURBOPACK compile-time value", "development") && function() {
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE$2 ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_CONTEXT_TYPE:
                return (type.displayName || "Context") + ".Provider";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        try {
            testStringCoercion(value);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        if (JSCompiler_inline_result) {
            JSCompiler_inline_result = console;
            var JSCompiler_temp_const = JSCompiler_inline_result.error;
            var JSCompiler_inline_result$jscomp$0 = "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            JSCompiler_temp_const.call(JSCompiler_inline_result, "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", JSCompiler_inline_result$jscomp$0);
            return testStringCoercion(value);
        }
    }
    function disabledLog() {}
    function disableLogs() {
        if (0 === disabledDepth) {
            prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd;
            var props = {
                configurable: !0,
                enumerable: !0,
                value: disabledLog,
                writable: !0
            };
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (0 === disabledDepth) {
            var props = {
                configurable: !0,
                enumerable: !0,
                writable: !0
            };
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        }
        0 > disabledDepth && console.error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    function describeBuiltInComponentFrame(name) {
        if (void 0 === prefix) try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
            suffix = -1 < x.stack.indexOf("\n    at") ? " (<anonymous>)" : -1 < x.stack.indexOf("@") ? "@unknown:0:0" : "";
        }
        return "\n" + prefix + name + suffix;
    }
    function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (void 0 !== frame) return frame;
        reentry = !0;
        frame = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher = null;
        previousDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = null;
        disableLogs();
        try {
            var RunInRootFrame = {
                DetermineComponentFrameRoot: function() {
                    try {
                        if (construct) {
                            var Fake = function() {
                                throw Error();
                            };
                            Object.defineProperty(Fake.prototype, "props", {
                                set: function() {
                                    throw Error();
                                }
                            });
                            if ("object" === typeof Reflect && Reflect.construct) {
                                try {
                                    Reflect.construct(Fake, []);
                                } catch (x) {
                                    var control = x;
                                }
                                Reflect.construct(fn, [], Fake);
                            } else {
                                try {
                                    Fake.call();
                                } catch (x$0) {
                                    control = x$0;
                                }
                                fn.call(Fake.prototype);
                            }
                        } else {
                            try {
                                throw Error();
                            } catch (x$1) {
                                control = x$1;
                            }
                            (Fake = fn()) && "function" === typeof Fake.catch && Fake.catch(function() {});
                        }
                    } catch (sample) {
                        if (sample && control && "string" === typeof sample.stack) return [
                            sample.stack,
                            control.stack
                        ];
                    }
                    return [
                        null,
                        null
                    ];
                }
            };
            RunInRootFrame.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";
            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, "name");
            namePropDescriptor && namePropDescriptor.configurable && Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, "name", {
                value: "DetermineComponentFrameRoot"
            });
            var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];
            if (sampleStack && controlStack) {
                var sampleLines = sampleStack.split("\n"), controlLines = controlStack.split("\n");
                for(_RunInRootFrame$Deter = namePropDescriptor = 0; namePropDescriptor < sampleLines.length && !sampleLines[namePropDescriptor].includes("DetermineComponentFrameRoot");)namePropDescriptor++;
                for(; _RunInRootFrame$Deter < controlLines.length && !controlLines[_RunInRootFrame$Deter].includes("DetermineComponentFrameRoot");)_RunInRootFrame$Deter++;
                if (namePropDescriptor === sampleLines.length || _RunInRootFrame$Deter === controlLines.length) for(namePropDescriptor = sampleLines.length - 1, _RunInRootFrame$Deter = controlLines.length - 1; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter && sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter];)_RunInRootFrame$Deter--;
                for(; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter; namePropDescriptor--, _RunInRootFrame$Deter--)if (sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                    if (1 !== namePropDescriptor || 1 !== _RunInRootFrame$Deter) {
                        do if (namePropDescriptor--, _RunInRootFrame$Deter--, 0 > _RunInRootFrame$Deter || sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                            var _frame = "\n" + sampleLines[namePropDescriptor].replace(" at new ", " at ");
                            fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName));
                            "function" === typeof fn && componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                        while (1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter)
                    }
                    break;
                }
            }
        } finally{
            reentry = !1, ReactSharedInternals.H = previousDispatcher, reenableLogs(), Error.prepareStackTrace = frame;
        }
        sampleLines = (sampleLines = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(sampleLines) : "";
        "function" === typeof fn && componentFrameCache.set(fn, sampleLines);
        return sampleLines;
    }
    function describeUnknownElementTypeFrameInDEV(type) {
        if (null == type) return "";
        if ("function" === typeof type) {
            var prototype = type.prototype;
            return describeNativeComponentFrame(type, !(!prototype || !prototype.isReactComponent));
        }
        if ("string" === typeof type) return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
        }
        if ("object" === typeof type) switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return type = describeNativeComponentFrame(type.render, !1), type;
            case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type);
            case REACT_LAZY_TYPE:
                prototype = type._payload;
                type = type._init;
                try {
                    return describeUnknownElementTypeFrameInDEV(type(prototype));
                } catch (x) {}
        }
        return "";
    }
    function getOwner() {
        var dispatcher = ReactSharedInternals.A;
        return null === dispatcher ? null : dispatcher.getOwner();
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return !1;
        }
        return void 0 !== config.key;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        function warnAboutAccessingKey() {
            specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, console.error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)", displayName));
        }
        warnAboutAccessingKey.isReactWarning = !0;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: !0
        });
    }
    function elementRefGetterWithDeprecationWarning() {
        var componentName = getComponentNameFromType(this.type);
        didWarnAboutElementRef[componentName] || (didWarnAboutElementRef[componentName] = !0, console.error("Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."));
        componentName = this.props.ref;
        return void 0 !== componentName ? componentName : null;
    }
    function ReactElement(type, key, self, source, owner, props) {
        self = props.ref;
        type = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type,
            key: key,
            props: props,
            _owner: owner
        };
        null !== (void 0 !== self ? self : null) ? Object.defineProperty(type, "ref", {
            enumerable: !1,
            get: elementRefGetterWithDeprecationWarning
        }) : Object.defineProperty(type, "ref", {
            enumerable: !1,
            value: null
        });
        type._store = {};
        Object.defineProperty(type._store, "validated", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: 0
        });
        Object.defineProperty(type, "_debugInfo", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: null
        });
        Object.freeze && (Object.freeze(type.props), Object.freeze(type));
        return type;
    }
    function jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self) {
        if ("string" === typeof type || "function" === typeof type || type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_OFFSCREEN_TYPE || "object" === typeof type && null !== type && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_CLIENT_REFERENCE$1 || void 0 !== type.getModuleId)) {
            var children = config.children;
            if (void 0 !== children) if (isStaticChildren) if (isArrayImpl(children)) {
                for(isStaticChildren = 0; isStaticChildren < children.length; isStaticChildren++)validateChildKeys(children[isStaticChildren], type);
                Object.freeze && Object.freeze(children);
            } else console.error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else validateChildKeys(children, type);
        } else {
            children = "";
            if (void 0 === type || "object" === typeof type && null !== type && 0 === Object.keys(type).length) children += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            null === type ? isStaticChildren = "null" : isArrayImpl(type) ? isStaticChildren = "array" : void 0 !== type && type.$$typeof === REACT_ELEMENT_TYPE ? (isStaticChildren = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />", children = " Did you accidentally export a JSX literal instead of a component?") : isStaticChildren = typeof type;
            console.error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", isStaticChildren, children);
        }
        if (hasOwnProperty.call(config, "key")) {
            children = getComponentNameFromType(type);
            var keys = Object.keys(config).filter(function(k) {
                return "key" !== k;
            });
            isStaticChildren = 0 < keys.length ? "{key: someKey, " + keys.join(": ..., ") + ": ...}" : "{key: someKey}";
            didWarnAboutKeySpread[children + isStaticChildren] || (keys = 0 < keys.length ? "{" + keys.join(": ..., ") + ": ...}" : "{}", console.error('A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />', isStaticChildren, children, keys, children), didWarnAboutKeySpread[children + isStaticChildren] = !0);
        }
        children = null;
        void 0 !== maybeKey && (checkKeyStringCoercion(maybeKey), children = "" + maybeKey);
        hasValidKey(config) && (checkKeyStringCoercion(config.key), children = "" + config.key);
        if ("key" in config) {
            maybeKey = {};
            for(var propName in config)"key" !== propName && (maybeKey[propName] = config[propName]);
        } else maybeKey = config;
        children && defineKeyPropWarningGetter(maybeKey, "function" === typeof type ? type.displayName || type.name || "Unknown" : type);
        return ReactElement(type, children, self, source, getOwner(), maybeKey);
    }
    function validateChildKeys(node, parentType) {
        if ("object" === typeof node && node && node.$$typeof !== REACT_CLIENT_REFERENCE) {
            if (isArrayImpl(node)) for(var i = 0; i < node.length; i++){
                var child = node[i];
                isValidElement(child) && validateExplicitKey(child, parentType);
            }
            else if (isValidElement(node)) node._store && (node._store.validated = 1);
            else if (null === node || "object" !== typeof node ? i = null : (i = MAYBE_ITERATOR_SYMBOL && node[MAYBE_ITERATOR_SYMBOL] || node["@@iterator"], i = "function" === typeof i ? i : null), "function" === typeof i && i !== node.entries && (i = i.call(node), i !== node)) for(; !(node = i.next()).done;)isValidElement(node.value) && validateExplicitKey(node.value, parentType);
        }
    }
    function isValidElement(object) {
        return "object" === typeof object && null !== object && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function validateExplicitKey(element, parentType) {
        if (element._store && !element._store.validated && null == element.key && (element._store.validated = 1, parentType = getCurrentComponentErrorInfo(parentType), !ownerHasKeyUseWarning[parentType])) {
            ownerHasKeyUseWarning[parentType] = !0;
            var childOwner = "";
            element && null != element._owner && element._owner !== getOwner() && (childOwner = null, "number" === typeof element._owner.tag ? childOwner = getComponentNameFromType(element._owner.type) : "string" === typeof element._owner.name && (childOwner = element._owner.name), childOwner = " It was passed a child from " + childOwner + ".");
            var prevGetCurrentStack = ReactSharedInternals.getCurrentStack;
            ReactSharedInternals.getCurrentStack = function() {
                var stack = describeUnknownElementTypeFrameInDEV(element.type);
                prevGetCurrentStack && (stack += prevGetCurrentStack() || "");
                return stack;
            };
            console.error('Each child in a list should have a unique "key" prop.%s%s See https://react.dev/link/warning-keys for more information.', parentType, childOwner);
            ReactSharedInternals.getCurrentStack = prevGetCurrentStack;
        }
    }
    function getCurrentComponentErrorInfo(parentType) {
        var info = "", owner = getOwner();
        owner && (owner = getComponentNameFromType(owner.type)) && (info = "\n\nCheck the render method of `" + owner + "`.");
        info || (parentType = getComponentNameFromType(parentType)) && (info = "\n\nCheck the top-level render call using <" + parentType + ">.");
        return info;
    }
    var React = __turbopack_require__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"), REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, REACT_CLIENT_REFERENCE$2 = Symbol.for("react.client.reference"), ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, hasOwnProperty = Object.prototype.hasOwnProperty, assign = Object.assign, REACT_CLIENT_REFERENCE$1 = Symbol.for("react.client.reference"), isArrayImpl = Array.isArray, disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
    disabledLog.__reactDisabledLog = !0;
    var prefix, suffix, reentry = !1;
    var componentFrameCache = new ("function" === typeof WeakMap ? WeakMap : Map)();
    var REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), specialPropKeyWarningShown;
    var didWarnAboutElementRef = {};
    var didWarnAboutKeySpread = {}, ownerHasKeyUseWarning = {};
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.jsxDEV = function(type, config, maybeKey, isStaticChildren, source, self) {
        return jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self);
    };
}();
}}),
"[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use strict';
if ("TURBOPACK compile-time falsy", 0) {
    "TURBOPACK unreachable";
} else {
    module.exports = __turbopack_require__("[project]/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js [app-client] (ecmascript)");
}
}}),
"[project]/node_modules/next/dist/compiled/client-only/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
}}),
"[project]/node_modules/styled-jsx/dist/index/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
__turbopack_require__("[project]/node_modules/next/dist/compiled/client-only/index.js [app-client] (ecmascript)");
var React = __turbopack_require__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
function _interopDefaultLegacy(e) {
    return e && typeof e === 'object' && 'default' in e ? e : {
        'default': e
    };
}
var React__default = /*#__PURE__*/ _interopDefaultLegacy(React);
/*
Based on Glamor's sheet
https://github.com/threepointone/glamor/blob/667b480d31b3721a905021b26e1290ce92ca2879/src/sheet.js
*/ function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
var isProd = typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] !== "undefined" && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].env && ("TURBOPACK compile-time value", "development") === "production";
var isString = function(o) {
    return Object.prototype.toString.call(o) === "[object String]";
};
var StyleSheet = /*#__PURE__*/ function() {
    function StyleSheet(param) {
        var ref = param === void 0 ? {} : param, _name = ref.name, name = _name === void 0 ? "stylesheet" : _name, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? isProd : _optimizeForSpeed;
        invariant$1(isString(name), "`name` must be a string");
        this._name = name;
        this._deletedRulePlaceholder = "#" + name + "-deleted-rule____{}";
        invariant$1(typeof optimizeForSpeed === "boolean", "`optimizeForSpeed` must be a boolean");
        this._optimizeForSpeed = optimizeForSpeed;
        this._serverSheet = undefined;
        this._tags = [];
        this._injected = false;
        this._rulesCount = 0;
        var node = typeof window !== "undefined" && document.querySelector('meta[property="csp-nonce"]');
        this._nonce = node ? node.getAttribute("content") : null;
    }
    var _proto = StyleSheet.prototype;
    _proto.setOptimizeForSpeed = function setOptimizeForSpeed(bool) {
        invariant$1(typeof bool === "boolean", "`setOptimizeForSpeed` accepts a boolean");
        invariant$1(this._rulesCount === 0, "optimizeForSpeed cannot be when rules have already been inserted");
        this.flush();
        this._optimizeForSpeed = bool;
        this.inject();
    };
    _proto.isOptimizeForSpeed = function isOptimizeForSpeed() {
        return this._optimizeForSpeed;
    };
    _proto.inject = function inject() {
        var _this = this;
        invariant$1(!this._injected, "sheet already injected");
        this._injected = true;
        if (typeof window !== "undefined" && this._optimizeForSpeed) {
            this._tags[0] = this.makeStyleTag(this._name);
            this._optimizeForSpeed = "insertRule" in this.getSheet();
            if (!this._optimizeForSpeed) {
                if ("TURBOPACK compile-time truthy", 1) {
                    console.warn("StyleSheet: optimizeForSpeed mode not supported falling back to standard mode.");
                }
                this.flush();
                this._injected = true;
            }
            return;
        }
        this._serverSheet = {
            cssRules: [],
            insertRule: function(rule, index) {
                if (typeof index === "number") {
                    _this._serverSheet.cssRules[index] = {
                        cssText: rule
                    };
                } else {
                    _this._serverSheet.cssRules.push({
                        cssText: rule
                    });
                }
                return index;
            },
            deleteRule: function(index) {
                _this._serverSheet.cssRules[index] = null;
            }
        };
    };
    _proto.getSheetForTag = function getSheetForTag(tag) {
        if (tag.sheet) {
            return tag.sheet;
        }
        // this weirdness brought to you by firefox
        for(var i = 0; i < document.styleSheets.length; i++){
            if (document.styleSheets[i].ownerNode === tag) {
                return document.styleSheets[i];
            }
        }
    };
    _proto.getSheet = function getSheet() {
        return this.getSheetForTag(this._tags[this._tags.length - 1]);
    };
    _proto.insertRule = function insertRule(rule, index) {
        invariant$1(isString(rule), "`insertRule` accepts only strings");
        if (typeof window === "undefined") {
            if (typeof index !== "number") {
                index = this._serverSheet.cssRules.length;
            }
            this._serverSheet.insertRule(rule, index);
            return this._rulesCount++;
        }
        if (this._optimizeForSpeed) {
            var sheet = this.getSheet();
            if (typeof index !== "number") {
                index = sheet.cssRules.length;
            }
            // this weirdness for perf, and chrome's weird bug
            // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule
            try {
                sheet.insertRule(rule, index);
            } catch (error) {
                if ("TURBOPACK compile-time truthy", 1) {
                    console.warn("StyleSheet: illegal rule: \n\n" + rule + "\n\nSee https://stackoverflow.com/q/20007992 for more info");
                }
                return -1;
            }
        } else {
            var insertionPoint = this._tags[index];
            this._tags.push(this.makeStyleTag(this._name, rule, insertionPoint));
        }
        return this._rulesCount++;
    };
    _proto.replaceRule = function replaceRule(index, rule) {
        if (this._optimizeForSpeed || typeof window === "undefined") {
            var sheet = typeof window !== "undefined" ? this.getSheet() : this._serverSheet;
            if (!rule.trim()) {
                rule = this._deletedRulePlaceholder;
            }
            if (!sheet.cssRules[index]) {
                // @TBD Should we throw an error?
                return index;
            }
            sheet.deleteRule(index);
            try {
                sheet.insertRule(rule, index);
            } catch (error) {
                if ("TURBOPACK compile-time truthy", 1) {
                    console.warn("StyleSheet: illegal rule: \n\n" + rule + "\n\nSee https://stackoverflow.com/q/20007992 for more info");
                }
                // In order to preserve the indices we insert a deleteRulePlaceholder
                sheet.insertRule(this._deletedRulePlaceholder, index);
            }
        } else {
            var tag = this._tags[index];
            invariant$1(tag, "old rule at index `" + index + "` not found");
            tag.textContent = rule;
        }
        return index;
    };
    _proto.deleteRule = function deleteRule(index) {
        if (typeof window === "undefined") {
            this._serverSheet.deleteRule(index);
            return;
        }
        if (this._optimizeForSpeed) {
            this.replaceRule(index, "");
        } else {
            var tag = this._tags[index];
            invariant$1(tag, "rule at index `" + index + "` not found");
            tag.parentNode.removeChild(tag);
            this._tags[index] = null;
        }
    };
    _proto.flush = function flush() {
        this._injected = false;
        this._rulesCount = 0;
        if (typeof window !== "undefined") {
            this._tags.forEach(function(tag) {
                return tag && tag.parentNode.removeChild(tag);
            });
            this._tags = [];
        } else {
            // simpler on server
            this._serverSheet.cssRules = [];
        }
    };
    _proto.cssRules = function cssRules() {
        var _this = this;
        if (typeof window === "undefined") {
            return this._serverSheet.cssRules;
        }
        return this._tags.reduce(function(rules, tag) {
            if (tag) {
                rules = rules.concat(Array.prototype.map.call(_this.getSheetForTag(tag).cssRules, function(rule) {
                    return rule.cssText === _this._deletedRulePlaceholder ? null : rule;
                }));
            } else {
                rules.push(null);
            }
            return rules;
        }, []);
    };
    _proto.makeStyleTag = function makeStyleTag(name, cssString, relativeToTag) {
        if (cssString) {
            invariant$1(isString(cssString), "makeStyleTag accepts only strings as second parameter");
        }
        var tag = document.createElement("style");
        if (this._nonce) tag.setAttribute("nonce", this._nonce);
        tag.type = "text/css";
        tag.setAttribute("data-" + name, "");
        if (cssString) {
            tag.appendChild(document.createTextNode(cssString));
        }
        var head = document.head || document.getElementsByTagName("head")[0];
        if (relativeToTag) {
            head.insertBefore(tag, relativeToTag);
        } else {
            head.appendChild(tag);
        }
        return tag;
    };
    _createClass(StyleSheet, [
        {
            key: "length",
            get: function get() {
                return this._rulesCount;
            }
        }
    ]);
    return StyleSheet;
}();
function invariant$1(condition, message) {
    if (!condition) {
        throw new Error("StyleSheet: " + message + ".");
    }
}
function hash(str) {
    var _$hash = 5381, i = str.length;
    while(i){
        _$hash = _$hash * 33 ^ str.charCodeAt(--i);
    }
    /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed
   * integers. Since we want the results to be always positive, convert the
   * signed int to an unsigned by doing an unsigned bitshift. */ return _$hash >>> 0;
}
var stringHash = hash;
var sanitize = function(rule) {
    return rule.replace(/\/style/gi, "\\/style");
};
var cache = {};
/**
 * computeId
 *
 * Compute and memoize a jsx id from a basedId and optionally props.
 */ function computeId(baseId, props) {
    if (!props) {
        return "jsx-" + baseId;
    }
    var propsToString = String(props);
    var key = baseId + propsToString;
    if (!cache[key]) {
        cache[key] = "jsx-" + stringHash(baseId + "-" + propsToString);
    }
    return cache[key];
}
/**
 * computeSelector
 *
 * Compute and memoize dynamic selectors.
 */ function computeSelector(id, css) {
    var selectoPlaceholderRegexp = /__jsx-style-dynamic-selector/g;
    // Sanitize SSR-ed CSS.
    // Client side code doesn't need to be sanitized since we use
    // document.createTextNode (dev) and the CSSOM api sheet.insertRule (prod).
    if (typeof window === "undefined") {
        css = sanitize(css);
    }
    var idcss = id + css;
    if (!cache[idcss]) {
        cache[idcss] = css.replace(selectoPlaceholderRegexp, id);
    }
    return cache[idcss];
}
function mapRulesToStyle(cssRules, options) {
    if (options === void 0) options = {};
    return cssRules.map(function(args) {
        var id = args[0];
        var css = args[1];
        return /*#__PURE__*/ React__default["default"].createElement("style", {
            id: "__" + id,
            // Avoid warnings upon render with a key
            key: "__" + id,
            nonce: options.nonce ? options.nonce : undefined,
            dangerouslySetInnerHTML: {
                __html: css
            }
        });
    });
}
var StyleSheetRegistry = /*#__PURE__*/ function() {
    function StyleSheetRegistry(param) {
        var ref = param === void 0 ? {} : param, _styleSheet = ref.styleSheet, styleSheet = _styleSheet === void 0 ? null : _styleSheet, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? false : _optimizeForSpeed;
        this._sheet = styleSheet || new StyleSheet({
            name: "styled-jsx",
            optimizeForSpeed: optimizeForSpeed
        });
        this._sheet.inject();
        if (styleSheet && typeof optimizeForSpeed === "boolean") {
            this._sheet.setOptimizeForSpeed(optimizeForSpeed);
            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();
        }
        this._fromServer = undefined;
        this._indices = {};
        this._instancesCounts = {};
    }
    var _proto = StyleSheetRegistry.prototype;
    _proto.add = function add(props) {
        var _this = this;
        if (undefined === this._optimizeForSpeed) {
            this._optimizeForSpeed = Array.isArray(props.children);
            this._sheet.setOptimizeForSpeed(this._optimizeForSpeed);
            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();
        }
        if (typeof window !== "undefined" && !this._fromServer) {
            this._fromServer = this.selectFromServer();
            this._instancesCounts = Object.keys(this._fromServer).reduce(function(acc, tagName) {
                acc[tagName] = 0;
                return acc;
            }, {});
        }
        var ref = this.getIdAndRules(props), styleId = ref.styleId, rules = ref.rules;
        // Deduping: just increase the instances count.
        if (styleId in this._instancesCounts) {
            this._instancesCounts[styleId] += 1;
            return;
        }
        var indices = rules.map(function(rule) {
            return _this._sheet.insertRule(rule);
        }) // Filter out invalid rules
        .filter(function(index) {
            return index !== -1;
        });
        this._indices[styleId] = indices;
        this._instancesCounts[styleId] = 1;
    };
    _proto.remove = function remove(props) {
        var _this = this;
        var styleId = this.getIdAndRules(props).styleId;
        invariant(styleId in this._instancesCounts, "styleId: `" + styleId + "` not found");
        this._instancesCounts[styleId] -= 1;
        if (this._instancesCounts[styleId] < 1) {
            var tagFromServer = this._fromServer && this._fromServer[styleId];
            if (tagFromServer) {
                tagFromServer.parentNode.removeChild(tagFromServer);
                delete this._fromServer[styleId];
            } else {
                this._indices[styleId].forEach(function(index) {
                    return _this._sheet.deleteRule(index);
                });
                delete this._indices[styleId];
            }
            delete this._instancesCounts[styleId];
        }
    };
    _proto.update = function update(props, nextProps) {
        this.add(nextProps);
        this.remove(props);
    };
    _proto.flush = function flush() {
        this._sheet.flush();
        this._sheet.inject();
        this._fromServer = undefined;
        this._indices = {};
        this._instancesCounts = {};
    };
    _proto.cssRules = function cssRules() {
        var _this = this;
        var fromServer = this._fromServer ? Object.keys(this._fromServer).map(function(styleId) {
            return [
                styleId,
                _this._fromServer[styleId]
            ];
        }) : [];
        var cssRules = this._sheet.cssRules();
        return fromServer.concat(Object.keys(this._indices).map(function(styleId) {
            return [
                styleId,
                _this._indices[styleId].map(function(index) {
                    return cssRules[index].cssText;
                }).join(_this._optimizeForSpeed ? "" : "\n")
            ];
        }) // filter out empty rules
        .filter(function(rule) {
            return Boolean(rule[1]);
        }));
    };
    _proto.styles = function styles(options) {
        return mapRulesToStyle(this.cssRules(), options);
    };
    _proto.getIdAndRules = function getIdAndRules(props) {
        var css = props.children, dynamic = props.dynamic, id = props.id;
        if (dynamic) {
            var styleId = computeId(id, dynamic);
            return {
                styleId: styleId,
                rules: Array.isArray(css) ? css.map(function(rule) {
                    return computeSelector(styleId, rule);
                }) : [
                    computeSelector(styleId, css)
                ]
            };
        }
        return {
            styleId: computeId(id),
            rules: Array.isArray(css) ? css : [
                css
            ]
        };
    };
    /**
   * selectFromServer
   *
   * Collects style tags from the document with id __jsx-XXX
   */ _proto.selectFromServer = function selectFromServer() {
        var elements = Array.prototype.slice.call(document.querySelectorAll('[id^="__jsx-"]'));
        return elements.reduce(function(acc, element) {
            var id = element.id.slice(2);
            acc[id] = element;
            return acc;
        }, {});
    };
    return StyleSheetRegistry;
}();
function invariant(condition, message) {
    if (!condition) {
        throw new Error("StyleSheetRegistry: " + message + ".");
    }
}
var StyleSheetContext = /*#__PURE__*/ React.createContext(null);
StyleSheetContext.displayName = "StyleSheetContext";
function createStyleRegistry() {
    return new StyleSheetRegistry();
}
function StyleRegistry(param) {
    var configuredRegistry = param.registry, children = param.children;
    var rootRegistry = React.useContext(StyleSheetContext);
    var ref = React.useState({
        "StyleRegistry.useState[ref]": function() {
            return rootRegistry || configuredRegistry || createStyleRegistry();
        }
    }["StyleRegistry.useState[ref]"]), registry = ref[0];
    return /*#__PURE__*/ React__default["default"].createElement(StyleSheetContext.Provider, {
        value: registry
    }, children);
}
function useStyleRegistry() {
    return React.useContext(StyleSheetContext);
}
// Opt-into the new `useInsertionEffect` API in React 18, fallback to `useLayoutEffect`.
// https://github.com/reactwg/react-18/discussions/110
var useInsertionEffect = React__default["default"].useInsertionEffect || React__default["default"].useLayoutEffect;
var defaultRegistry = typeof window !== "undefined" ? createStyleRegistry() : undefined;
function JSXStyle(props) {
    var registry = defaultRegistry ? defaultRegistry : useStyleRegistry();
    // If `registry` does not exist, we do nothing here.
    if (!registry) {
        return null;
    }
    if (typeof window === "undefined") {
        registry.add(props);
        return null;
    }
    useInsertionEffect({
        "JSXStyle.useInsertionEffect": function() {
            registry.add(props);
            return ({
                "JSXStyle.useInsertionEffect": function() {
                    registry.remove(props);
                }
            })["JSXStyle.useInsertionEffect"];
        // props.children can be string[], will be striped since id is identical
        }
    }["JSXStyle.useInsertionEffect"], [
        props.id,
        String(props.dynamic)
    ]);
    return null;
}
JSXStyle.dynamic = function(info) {
    return info.map(function(tagInfo) {
        var baseId = tagInfo[0];
        var props = tagInfo[1];
        return computeId(baseId, props);
    }).join(" ");
};
exports.StyleRegistry = StyleRegistry;
exports.createStyleRegistry = createStyleRegistry;
exports.style = JSXStyle;
exports.useStyleRegistry = useStyleRegistry;
}}),
"[project]/node_modules/styled-jsx/style.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
module.exports = __turbopack_require__("[project]/node_modules/styled-jsx/dist/index/index.js [app-client] (ecmascript)").style;
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/registry/constants.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MOCK_ATTESTER_ADDRESS": (()=>MOCK_ATTESTER_ADDRESS),
    "REGISTRY_ADDRESS": (()=>REGISTRY_ADDRESS),
    "RHINESTONE_ATTESTER_ADDRESS": (()=>RHINESTONE_ATTESTER_ADDRESS)
});
const REGISTRY_ADDRESS = '0x000000000069E2a187AEFFb852bF3cCdC95151B2';
const RHINESTONE_ATTESTER_ADDRESS = '0x000000333034E9f539ce08819E12c1b8Cb29084d';
const MOCK_ATTESTER_ADDRESS = '0xA4C777199658a41688E9488c4EcbD7a2925Cc23A'; //# sourceMappingURL=constants.js.map
}}),
"[project]/node_modules/@biconomy/abstractjs/dist/_esm/constants/abi/ERC7484RegistryAbi.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ERC7484RegistryAbi": (()=>ERC7484RegistryAbi)
});
const ERC7484RegistryAbi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "smartAccount",
                type: "address"
            }
        ],
        name: "findTrustedAttesters",
        outputs: [
            {
                internalType: "address[]",
                name: "attesters",
                type: "address[]"
            }
        ],
        stateMutability: "view",
        type: "function"
    }
]; //# sourceMappingURL=ERC7484RegistryAbi.js.map
}}),
"[project]/node_modules/viem/_esm/utils/data/isHex.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "isHex": (()=>isHex)
});
function isHex(value, { strict = true } = {}) {
    if (!value) return false;
    if (typeof value !== 'string') return false;
    return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x');
} //# sourceMappingURL=isHex.js.map
}}),
"[project]/node_modules/viem/_esm/utils/data/size.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "size": (()=>size)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$isHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/isHex.js [app-client] (ecmascript)");
;
function size(value) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$isHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isHex"])(value, {
        strict: false
    })) return Math.ceil((value.length - 2) / 2);
    return value.length;
} //# sourceMappingURL=size.js.map
}}),
"[project]/node_modules/viem/_esm/errors/version.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "version": (()=>version)
});
const version = '2.23.1'; //# sourceMappingURL=version.js.map
}}),
"[project]/node_modules/viem/_esm/errors/base.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "BaseError": (()=>BaseError),
    "setErrorConfig": (()=>setErrorConfig)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/version.js [app-client] (ecmascript)");
;
let errorConfig = {
    getDocsUrl: ({ docsBaseUrl, docsPath = '', docsSlug })=>docsPath ? `${docsBaseUrl ?? 'https://viem.sh'}${docsPath}${docsSlug ? `#${docsSlug}` : ''}` : undefined,
    version: `viem@${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["version"]}`
};
function setErrorConfig(config) {
    errorConfig = config;
}
class BaseError extends Error {
    constructor(shortMessage, args = {}){
        const details = (()=>{
            if (args.cause instanceof BaseError) return args.cause.details;
            if (args.cause?.message) return args.cause.message;
            return args.details;
        })();
        const docsPath = (()=>{
            if (args.cause instanceof BaseError) return args.cause.docsPath || args.docsPath;
            return args.docsPath;
        })();
        const docsUrl = errorConfig.getDocsUrl?.({
            ...args,
            docsPath
        });
        const message = [
            shortMessage || 'An error occurred.',
            '',
            ...args.metaMessages ? [
                ...args.metaMessages,
                ''
            ] : [],
            ...docsUrl ? [
                `Docs: ${docsUrl}`
            ] : [],
            ...details ? [
                `Details: ${details}`
            ] : [],
            ...errorConfig.version ? [
                `Version: ${errorConfig.version}`
            ] : []
        ].join('\n');
        super(message, args.cause ? {
            cause: args.cause
        } : undefined);
        Object.defineProperty(this, "details", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "docsPath", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "metaMessages", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "shortMessage", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "version", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'BaseError'
        });
        this.details = details;
        this.docsPath = docsPath;
        this.metaMessages = args.metaMessages;
        this.name = args.name ?? this.name;
        this.shortMessage = shortMessage;
        this.version = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["version"];
    }
    walk(fn) {
        return walk(this, fn);
    }
}
function walk(err, fn) {
    if (fn?.(err)) return err;
    if (err && typeof err === 'object' && 'cause' in err && err.cause !== undefined) return walk(err.cause, fn);
    return fn ? null : err;
} //# sourceMappingURL=base.js.map
}}),
"[project]/node_modules/viem/_esm/errors/data.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "InvalidBytesLengthError": (()=>InvalidBytesLengthError),
    "SizeExceedsPaddingSizeError": (()=>SizeExceedsPaddingSizeError),
    "SliceOffsetOutOfBoundsError": (()=>SliceOffsetOutOfBoundsError)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/base.js [app-client] (ecmascript)");
;
class SliceOffsetOutOfBoundsError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ offset, position, size }){
        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset "${offset}" is out-of-bounds (size: ${size}).`, {
            name: 'SliceOffsetOutOfBoundsError'
        });
    }
}
class SizeExceedsPaddingSizeError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ size, targetSize, type }){
        super(`${type.charAt(0).toUpperCase()}${type.slice(1).toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`, {
            name: 'SizeExceedsPaddingSizeError'
        });
    }
}
class InvalidBytesLengthError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ size, targetSize, type }){
        super(`${type.charAt(0).toUpperCase()}${type.slice(1).toLowerCase()} is expected to be ${targetSize} ${type} long, but is ${size} ${type} long.`, {
            name: 'InvalidBytesLengthError'
        });
    }
} //# sourceMappingURL=data.js.map
}}),
"[project]/node_modules/viem/_esm/utils/data/slice.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "slice": (()=>slice),
    "sliceBytes": (()=>sliceBytes),
    "sliceHex": (()=>sliceHex)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$isHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/isHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/size.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$data$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/data.js [app-client] (ecmascript)");
;
;
;
function slice(value, start, end, { strict } = {}) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$isHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isHex"])(value, {
        strict: false
    })) return sliceHex(value, start, end, {
        strict
    });
    return sliceBytes(value, start, end, {
        strict
    });
}
function assertStartOffset(value, start) {
    if (typeof start === 'number' && start > 0 && start > (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(value) - 1) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$data$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SliceOffsetOutOfBoundsError"]({
        offset: start,
        position: 'start',
        size: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(value)
    });
}
function assertEndOffset(value, start, end) {
    if (typeof start === 'number' && typeof end === 'number' && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(value) !== end - start) {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$data$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SliceOffsetOutOfBoundsError"]({
            offset: end,
            position: 'end',
            size: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(value)
        });
    }
}
function sliceBytes(value_, start, end, { strict } = {}) {
    assertStartOffset(value_, start);
    const value = value_.slice(start, end);
    if (strict) assertEndOffset(value, start, end);
    return value;
}
function sliceHex(value_, start, end, { strict } = {}) {
    assertStartOffset(value_, start);
    const value = `0x${value_.replace('0x', '').slice((start ?? 0) * 2, (end ?? value_.length) * 2)}`;
    if (strict) assertEndOffset(value, start, end);
    return value;
} //# sourceMappingURL=slice.js.map
}}),
"[project]/node_modules/@noble/hashes/esm/_assert.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/**
 * Internal assertion helpers.
 * @module
 */ /** Asserts something is positive integer. */ __turbopack_esm__({
    "abytes": (()=>abytes),
    "aexists": (()=>aexists),
    "ahash": (()=>ahash),
    "anumber": (()=>anumber),
    "aoutput": (()=>aoutput)
});
function anumber(n) {
    if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);
}
/** Is number an Uint8Array? Copied from utils for perf. */ function isBytes(a) {
    return a instanceof Uint8Array || ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array';
}
/** Asserts something is Uint8Array. */ function abytes(b, ...lengths) {
    if (!isBytes(b)) throw new Error('Uint8Array expected');
    if (lengths.length > 0 && !lengths.includes(b.length)) throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);
}
/** Asserts something is hash */ function ahash(h) {
    if (typeof h !== 'function' || typeof h.create !== 'function') throw new Error('Hash should be wrapped by utils.wrapConstructor');
    anumber(h.outputLen);
    anumber(h.blockLen);
}
/** Asserts a hash instance has not been destroyed / finished */ function aexists(instance, checkFinished = true) {
    if (instance.destroyed) throw new Error('Hash instance has been destroyed');
    if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');
}
/** Asserts output is properly-sized byte array */ function aoutput(out, instance) {
    abytes(out);
    const min = instance.outputLen;
    if (out.length < min) {
        throw new Error('digestInto() expects output buffer of length at least ' + min);
    }
}
;
 //# sourceMappingURL=_assert.js.map
}}),
"[project]/node_modules/@noble/hashes/esm/crypto.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "crypto": (()=>crypto)
});
const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined; //# sourceMappingURL=crypto.js.map
}}),
"[project]/node_modules/@noble/hashes/esm/utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/**
 * Utilities for hex, bytes, CSPRNG.
 * @module
 */ /*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */ // We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.
// node.js versions earlier than v19 don't declare it in global scope.
// For node.js, package.json#exports field mapping rewrites import
// from `crypto` to `cryptoNode`, which imports native module.
// Makes the utils un-importable in browsers without a bundler.
// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.
__turbopack_esm__({
    "Hash": (()=>Hash),
    "asyncLoop": (()=>asyncLoop),
    "byteSwap": (()=>byteSwap),
    "byteSwap32": (()=>byteSwap32),
    "byteSwapIfBE": (()=>byteSwapIfBE),
    "bytesToHex": (()=>bytesToHex),
    "checkOpts": (()=>checkOpts),
    "concatBytes": (()=>concatBytes),
    "createView": (()=>createView),
    "hexToBytes": (()=>hexToBytes),
    "isBytes": (()=>isBytes),
    "isLE": (()=>isLE),
    "nextTick": (()=>nextTick),
    "randomBytes": (()=>randomBytes),
    "rotl": (()=>rotl),
    "rotr": (()=>rotr),
    "toBytes": (()=>toBytes),
    "u32": (()=>u32),
    "u8": (()=>u8),
    "utf8ToBytes": (()=>utf8ToBytes),
    "wrapConstructor": (()=>wrapConstructor),
    "wrapConstructorWithOpts": (()=>wrapConstructorWithOpts),
    "wrapXOFConstructorWithOpts": (()=>wrapXOFConstructorWithOpts)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$_assert$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@noble/hashes/esm/_assert.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$crypto$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@noble/hashes/esm/crypto.js [app-client] (ecmascript)");
;
;
function isBytes(a) {
    return a instanceof Uint8Array || ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array';
}
function u8(arr) {
    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);
}
function u32(arr) {
    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
}
function createView(arr) {
    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);
}
function rotr(word, shift) {
    return word << 32 - shift | word >>> shift;
}
function rotl(word, shift) {
    return word << shift | word >>> 32 - shift >>> 0;
}
const isLE = /* @__PURE__ */ (()=>new Uint8Array(new Uint32Array([
        0x11223344
    ]).buffer)[0] === 0x44)();
function byteSwap(word) {
    return word << 24 & 0xff000000 | word << 8 & 0xff0000 | word >>> 8 & 0xff00 | word >>> 24 & 0xff;
}
const byteSwapIfBE = isLE ? (n)=>n : (n)=>byteSwap(n);
function byteSwap32(arr) {
    for(let i = 0; i < arr.length; i++){
        arr[i] = byteSwap(arr[i]);
    }
}
// Array where index 0xf0 (240) is mapped to string 'f0'
const hexes = /* @__PURE__ */ Array.from({
    length: 256
}, (_, i)=>i.toString(16).padStart(2, '0'));
function bytesToHex(bytes) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$_assert$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abytes"])(bytes);
    // pre-caching improves the speed 6x
    let hex = '';
    for(let i = 0; i < bytes.length; i++){
        hex += hexes[bytes[i]];
    }
    return hex;
}
// We use optimized technique to convert hex string to byte array
const asciis = {
    _0: 48,
    _9: 57,
    A: 65,
    F: 70,
    a: 97,
    f: 102
};
function asciiToBase16(ch) {
    if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48
    if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)
    if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)
    return;
}
function hexToBytes(hex) {
    if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);
    const hl = hex.length;
    const al = hl / 2;
    if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);
    const array = new Uint8Array(al);
    for(let ai = 0, hi = 0; ai < al; ai++, hi += 2){
        const n1 = asciiToBase16(hex.charCodeAt(hi));
        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));
        if (n1 === undefined || n2 === undefined) {
            const char = hex[hi] + hex[hi + 1];
            throw new Error('hex string expected, got non-hex character "' + char + '" at index ' + hi);
        }
        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163
    }
    return array;
}
const nextTick = async ()=>{};
async function asyncLoop(iters, tick, cb) {
    let ts = Date.now();
    for(let i = 0; i < iters; i++){
        cb(i);
        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too
        const diff = Date.now() - ts;
        if (diff >= 0 && diff < tick) continue;
        await nextTick();
        ts += diff;
    }
}
function utf8ToBytes(str) {
    if (typeof str !== 'string') throw new Error('utf8ToBytes expected string, got ' + typeof str);
    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809
}
function toBytes(data) {
    if (typeof data === 'string') data = utf8ToBytes(data);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$_assert$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abytes"])(data);
    return data;
}
function concatBytes(...arrays) {
    let sum = 0;
    for(let i = 0; i < arrays.length; i++){
        const a = arrays[i];
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$_assert$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abytes"])(a);
        sum += a.length;
    }
    const res = new Uint8Array(sum);
    for(let i = 0, pad = 0; i < arrays.length; i++){
        const a = arrays[i];
        res.set(a, pad);
        pad += a.length;
    }
    return res;
}
class Hash {
    // Safe version that clones internal state
    clone() {
        return this._cloneInto();
    }
}
function checkOpts(defaults, opts) {
    if (opts !== undefined && ({}).toString.call(opts) !== '[object Object]') throw new Error('Options should be object or undefined');
    const merged = Object.assign(defaults, opts);
    return merged;
}
function wrapConstructor(hashCons) {
    const hashC = (msg)=>hashCons().update(toBytes(msg)).digest();
    const tmp = hashCons();
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = ()=>hashCons();
    return hashC;
}
function wrapConstructorWithOpts(hashCons) {
    const hashC = (msg, opts)=>hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts)=>hashCons(opts);
    return hashC;
}
function wrapXOFConstructorWithOpts(hashCons) {
    const hashC = (msg, opts)=>hashCons(opts).update(toBytes(msg)).digest();
    const tmp = hashCons({});
    hashC.outputLen = tmp.outputLen;
    hashC.blockLen = tmp.blockLen;
    hashC.create = (opts)=>hashCons(opts);
    return hashC;
}
function randomBytes(bytesLength = 32) {
    if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$crypto$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["crypto"] && typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$crypto$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["crypto"].getRandomValues === 'function') {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$crypto$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["crypto"].getRandomValues(new Uint8Array(bytesLength));
    }
    // Legacy Node.js compatibility
    if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$crypto$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["crypto"] && typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$crypto$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["crypto"].randomBytes === 'function') {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$crypto$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["crypto"].randomBytes(bytesLength);
    }
    throw new Error('crypto.getRandomValues must be defined');
} //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/@noble/hashes/esm/_u64.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/**
 * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.
 * @todo re-check https://issues.chromium.org/issues/42212588
 * @module
 */ __turbopack_esm__({
    "add": (()=>add),
    "add3H": (()=>add3H),
    "add3L": (()=>add3L),
    "add4H": (()=>add4H),
    "add4L": (()=>add4L),
    "add5H": (()=>add5H),
    "add5L": (()=>add5L),
    "default": (()=>__TURBOPACK__default__export__),
    "fromBig": (()=>fromBig),
    "rotlBH": (()=>rotlBH),
    "rotlBL": (()=>rotlBL),
    "rotlSH": (()=>rotlSH),
    "rotlSL": (()=>rotlSL),
    "rotr32H": (()=>rotr32H),
    "rotr32L": (()=>rotr32L),
    "rotrBH": (()=>rotrBH),
    "rotrBL": (()=>rotrBL),
    "rotrSH": (()=>rotrSH),
    "rotrSL": (()=>rotrSL),
    "shrSH": (()=>shrSH),
    "shrSL": (()=>shrSL),
    "split": (()=>split),
    "toBig": (()=>toBig)
});
const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);
const _32n = /* @__PURE__ */ BigInt(32);
function fromBig(n, le = false) {
    if (le) return {
        h: Number(n & U32_MASK64),
        l: Number(n >> _32n & U32_MASK64)
    };
    return {
        h: Number(n >> _32n & U32_MASK64) | 0,
        l: Number(n & U32_MASK64) | 0
    };
}
function split(lst, le = false) {
    let Ah = new Uint32Array(lst.length);
    let Al = new Uint32Array(lst.length);
    for(let i = 0; i < lst.length; i++){
        const { h, l } = fromBig(lst[i], le);
        [Ah[i], Al[i]] = [
            h,
            l
        ];
    }
    return [
        Ah,
        Al
    ];
}
const toBig = (h, l)=>BigInt(h >>> 0) << _32n | BigInt(l >>> 0);
// for Shift in [0, 32)
const shrSH = (h, _l, s)=>h >>> s;
const shrSL = (h, l, s)=>h << 32 - s | l >>> s;
// Right rotate for Shift in [1, 32)
const rotrSH = (h, l, s)=>h >>> s | l << 32 - s;
const rotrSL = (h, l, s)=>h << 32 - s | l >>> s;
// Right rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotrBH = (h, l, s)=>h << 64 - s | l >>> s - 32;
const rotrBL = (h, l, s)=>h >>> s - 32 | l << 64 - s;
// Right rotate for shift===32 (just swaps l&h)
const rotr32H = (_h, l)=>l;
const rotr32L = (h, _l)=>h;
// Left rotate for Shift in [1, 32)
const rotlSH = (h, l, s)=>h << s | l >>> 32 - s;
const rotlSL = (h, l, s)=>l << s | h >>> 32 - s;
// Left rotate for Shift in (32, 64), NOTE: 32 is special case.
const rotlBH = (h, l, s)=>l << s - 32 | h >>> 64 - s;
const rotlBL = (h, l, s)=>h << s - 32 | l >>> 64 - s;
// JS uses 32-bit signed integers for bitwise operations which means we cannot
// simple take carry out of low bit sum by shift, we need to use division.
function add(Ah, Al, Bh, Bl) {
    const l = (Al >>> 0) + (Bl >>> 0);
    return {
        h: Ah + Bh + (l / 2 ** 32 | 0) | 0,
        l: l | 0
    };
}
// Addition with more than 2 elements
const add3L = (Al, Bl, Cl)=>(Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);
const add3H = (low, Ah, Bh, Ch)=>Ah + Bh + Ch + (low / 2 ** 32 | 0) | 0;
const add4L = (Al, Bl, Cl, Dl)=>(Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);
const add4H = (low, Ah, Bh, Ch, Dh)=>Ah + Bh + Ch + Dh + (low / 2 ** 32 | 0) | 0;
const add5L = (Al, Bl, Cl, Dl, El)=>(Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);
const add5H = (low, Ah, Bh, Ch, Dh, Eh)=>Ah + Bh + Ch + Dh + Eh + (low / 2 ** 32 | 0) | 0;
;
// prettier-ignore
const u64 = {
    fromBig,
    split,
    toBig,
    shrSH,
    shrSL,
    rotrSH,
    rotrSL,
    rotrBH,
    rotrBL,
    rotr32H,
    rotr32L,
    rotlSH,
    rotlSL,
    rotlBH,
    rotlBL,
    add,
    add3L,
    add3H,
    add4L,
    add4H,
    add5H,
    add5L
};
const __TURBOPACK__default__export__ = u64;
 //# sourceMappingURL=_u64.js.map
}}),
"[project]/node_modules/@noble/hashes/esm/sha3.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/**
 * SHA3 (keccak) hash function, based on a new "Sponge function" design.
 * Different from older hashes, the internal state is bigger than output size.
 *
 * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),
 * [Website](https://keccak.team/keccak.html),
 * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).
 *
 * Check out `sha3-addons` module for cSHAKE, k12, and others.
 * @module
 */ __turbopack_esm__({
    "Keccak": (()=>Keccak),
    "keccakP": (()=>keccakP),
    "keccak_224": (()=>keccak_224),
    "keccak_256": (()=>keccak_256),
    "keccak_384": (()=>keccak_384),
    "keccak_512": (()=>keccak_512),
    "sha3_224": (()=>sha3_224),
    "sha3_256": (()=>sha3_256),
    "sha3_384": (()=>sha3_384),
    "sha3_512": (()=>sha3_512),
    "shake128": (()=>shake128),
    "shake256": (()=>shake256)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$_assert$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@noble/hashes/esm/_assert.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@noble/hashes/esm/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$_u64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@noble/hashes/esm/_u64.js [app-client] (ecmascript)");
;
;
;
// Various per round constants calculations
const SHA3_PI = [];
const SHA3_ROTL = [];
const _SHA3_IOTA = [];
const _0n = /* @__PURE__ */ BigInt(0);
const _1n = /* @__PURE__ */ BigInt(1);
const _2n = /* @__PURE__ */ BigInt(2);
const _7n = /* @__PURE__ */ BigInt(7);
const _256n = /* @__PURE__ */ BigInt(256);
const _0x71n = /* @__PURE__ */ BigInt(0x71);
for(let round = 0, R = _1n, x = 1, y = 0; round < 24; round++){
    // Pi
    [x, y] = [
        y,
        (2 * x + 3 * y) % 5
    ];
    SHA3_PI.push(2 * (5 * y + x));
    // Rotational
    SHA3_ROTL.push((round + 1) * (round + 2) / 2 % 64);
    // Iota
    let t = _0n;
    for(let j = 0; j < 7; j++){
        R = (R << _1n ^ (R >> _7n) * _0x71n) % _256n;
        if (R & _2n) t ^= _1n << (_1n << /* @__PURE__ */ BigInt(j)) - _1n;
    }
    _SHA3_IOTA.push(t);
}
const [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$_u64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["split"])(_SHA3_IOTA, true);
// Left rotation (without 0, 32, 64)
const rotlH = (h, l, s)=>s > 32 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$_u64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rotlBH"])(h, l, s) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$_u64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rotlSH"])(h, l, s);
const rotlL = (h, l, s)=>s > 32 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$_u64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rotlBL"])(h, l, s) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$_u64$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rotlSL"])(h, l, s);
function keccakP(s, rounds = 24) {
    const B = new Uint32Array(5 * 2);
    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)
    for(let round = 24 - rounds; round < 24; round++){
        // Theta θ
        for(let x = 0; x < 10; x++)B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];
        for(let x = 0; x < 10; x += 2){
            const idx1 = (x + 8) % 10;
            const idx0 = (x + 2) % 10;
            const B0 = B[idx0];
            const B1 = B[idx0 + 1];
            const Th = rotlH(B0, B1, 1) ^ B[idx1];
            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];
            for(let y = 0; y < 50; y += 10){
                s[x + y] ^= Th;
                s[x + y + 1] ^= Tl;
            }
        }
        // Rho (ρ) and Pi (π)
        let curH = s[2];
        let curL = s[3];
        for(let t = 0; t < 24; t++){
            const shift = SHA3_ROTL[t];
            const Th = rotlH(curH, curL, shift);
            const Tl = rotlL(curH, curL, shift);
            const PI = SHA3_PI[t];
            curH = s[PI];
            curL = s[PI + 1];
            s[PI] = Th;
            s[PI + 1] = Tl;
        }
        // Chi (χ)
        for(let y = 0; y < 50; y += 10){
            for(let x = 0; x < 10; x++)B[x] = s[y + x];
            for(let x = 0; x < 10; x++)s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];
        }
        // Iota (ι)
        s[0] ^= SHA3_IOTA_H[round];
        s[1] ^= SHA3_IOTA_L[round];
    }
    B.fill(0);
}
class Keccak extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Hash"] {
    // NOTE: we accept arguments in bytes instead of bits here.
    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24){
        super();
        this.blockLen = blockLen;
        this.suffix = suffix;
        this.outputLen = outputLen;
        this.enableXOF = enableXOF;
        this.rounds = rounds;
        this.pos = 0;
        this.posOut = 0;
        this.finished = false;
        this.destroyed = false;
        // Can be passed from user as dkLen
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$_assert$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["anumber"])(outputLen);
        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes
        // 0 < blockLen < 200
        if (0 >= this.blockLen || this.blockLen >= 200) throw new Error('Sha3 supports only keccak-f1600 function');
        this.state = new Uint8Array(200);
        this.state32 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["u32"])(this.state);
    }
    keccak() {
        if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isLE"]) (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["byteSwap32"])(this.state32);
        keccakP(this.state32, this.rounds);
        if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isLE"]) (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["byteSwap32"])(this.state32);
        this.posOut = 0;
        this.pos = 0;
    }
    update(data) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$_assert$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["aexists"])(this);
        const { blockLen, state } = this;
        data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBytes"])(data);
        const len = data.length;
        for(let pos = 0; pos < len;){
            const take = Math.min(blockLen - this.pos, len - pos);
            for(let i = 0; i < take; i++)state[this.pos++] ^= data[pos++];
            if (this.pos === blockLen) this.keccak();
        }
        return this;
    }
    finish() {
        if (this.finished) return;
        this.finished = true;
        const { state, suffix, pos, blockLen } = this;
        // Do the padding
        state[pos] ^= suffix;
        if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();
        state[blockLen - 1] ^= 0x80;
        this.keccak();
    }
    writeInto(out) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$_assert$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["aexists"])(this, false);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$_assert$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abytes"])(out);
        this.finish();
        const bufferOut = this.state;
        const { blockLen } = this;
        for(let pos = 0, len = out.length; pos < len;){
            if (this.posOut >= blockLen) this.keccak();
            const take = Math.min(blockLen - this.posOut, len - pos);
            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);
            this.posOut += take;
            pos += take;
        }
        return out;
    }
    xofInto(out) {
        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF
        if (!this.enableXOF) throw new Error('XOF is not possible for this instance');
        return this.writeInto(out);
    }
    xof(bytes) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$_assert$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["anumber"])(bytes);
        return this.xofInto(new Uint8Array(bytes));
    }
    digestInto(out) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$_assert$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["aoutput"])(out, this);
        if (this.finished) throw new Error('digest() was already called');
        this.writeInto(out);
        this.destroy();
        return out;
    }
    digest() {
        return this.digestInto(new Uint8Array(this.outputLen));
    }
    destroy() {
        this.destroyed = true;
        this.state.fill(0);
    }
    _cloneInto(to) {
        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;
        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));
        to.state32.set(this.state32);
        to.pos = this.pos;
        to.posOut = this.posOut;
        to.finished = this.finished;
        to.rounds = rounds;
        // Suffix can change in cSHAKE
        to.suffix = suffix;
        to.outputLen = outputLen;
        to.enableXOF = enableXOF;
        to.destroyed = this.destroyed;
        return to;
    }
}
const gen = (suffix, blockLen, outputLen)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["wrapConstructor"])(()=>new Keccak(blockLen, suffix, outputLen));
const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);
const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);
const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);
const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);
const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);
const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);
const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);
const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);
const genShake = (suffix, blockLen, outputLen)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["wrapXOFConstructorWithOpts"])((opts = {})=>new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));
const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);
const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8); //# sourceMappingURL=sha3.js.map
}}),
"[project]/node_modules/viem/_esm/errors/encoding.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "IntegerOutOfRangeError": (()=>IntegerOutOfRangeError),
    "InvalidBytesBooleanError": (()=>InvalidBytesBooleanError),
    "InvalidHexBooleanError": (()=>InvalidHexBooleanError),
    "InvalidHexValueError": (()=>InvalidHexValueError),
    "SizeOverflowError": (()=>SizeOverflowError)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/base.js [app-client] (ecmascript)");
;
class IntegerOutOfRangeError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ max, min, signed, size, value }){
        super(`Number "${value}" is not in safe ${size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''}integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`, {
            name: 'IntegerOutOfRangeError'
        });
    }
}
class InvalidBytesBooleanError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(bytes){
        super(`Bytes value "${bytes}" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`, {
            name: 'InvalidBytesBooleanError'
        });
    }
}
class InvalidHexBooleanError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(hex){
        super(`Hex value "${hex}" is not a valid boolean. The hex value must be "0x0" (false) or "0x1" (true).`, {
            name: 'InvalidHexBooleanError'
        });
    }
}
class InvalidHexValueError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(value){
        super(`Hex value "${value}" is an odd length (${value.length}). It must be an even length.`, {
            name: 'InvalidHexValueError'
        });
    }
}
class SizeOverflowError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ givenSize, maxSize }){
        super(`Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`, {
            name: 'SizeOverflowError'
        });
    }
} //# sourceMappingURL=encoding.js.map
}}),
"[project]/node_modules/viem/_esm/utils/data/trim.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "trim": (()=>trim)
});
function trim(hexOrBytes, { dir = 'left' } = {}) {
    let data = typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes;
    let sliceLength = 0;
    for(let i = 0; i < data.length - 1; i++){
        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0') sliceLength++;
        else break;
    }
    data = dir === 'left' ? data.slice(sliceLength) : data.slice(0, data.length - sliceLength);
    if (typeof hexOrBytes === 'string') {
        if (data.length === 1 && dir === 'right') data = `${data}0`;
        return `0x${data.length % 2 === 1 ? `0${data}` : data}`;
    }
    return data;
} //# sourceMappingURL=trim.js.map
}}),
"[project]/node_modules/viem/_esm/utils/encoding/fromHex.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "assertSize": (()=>assertSize),
    "fromHex": (()=>fromHex),
    "hexToBigInt": (()=>hexToBigInt),
    "hexToBool": (()=>hexToBool),
    "hexToNumber": (()=>hexToNumber),
    "hexToString": (()=>hexToString)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/size.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$encoding$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/encoding.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toBytes.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$trim$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/trim.js [app-client] (ecmascript)");
;
;
;
;
function assertSize(hexOrBytes, { size }) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(hexOrBytes) > size) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$encoding$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SizeOverflowError"]({
        givenSize: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(hexOrBytes),
        maxSize: size
    });
}
function fromHex(hex, toOrOpts) {
    const opts = typeof toOrOpts === 'string' ? {
        to: toOrOpts
    } : toOrOpts;
    const to = opts.to;
    if (to === 'number') return hexToNumber(hex, opts);
    if (to === 'bigint') return hexToBigInt(hex, opts);
    if (to === 'string') return hexToString(hex, opts);
    if (to === 'boolean') return hexToBool(hex, opts);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hexToBytes"])(hex, opts);
}
function hexToBigInt(hex, opts = {}) {
    const { signed } = opts;
    if (opts.size) assertSize(hex, {
        size: opts.size
    });
    const value = BigInt(hex);
    if (!signed) return value;
    const size = (hex.length - 2) / 2;
    const max = (1n << BigInt(size) * 8n - 1n) - 1n;
    if (value <= max) return value;
    return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n;
}
function hexToBool(hex_, opts = {}) {
    let hex = hex_;
    if (opts.size) {
        assertSize(hex, {
            size: opts.size
        });
        hex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$trim$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["trim"])(hex);
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$trim$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["trim"])(hex) === '0x00') return false;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$trim$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["trim"])(hex) === '0x01') return true;
    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$encoding$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InvalidHexBooleanError"](hex);
}
function hexToNumber(hex, opts = {}) {
    return Number(hexToBigInt(hex, opts));
}
function hexToString(hex, opts = {}) {
    let bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hexToBytes"])(hex);
    if (opts.size) {
        assertSize(bytes, {
            size: opts.size
        });
        bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$trim$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["trim"])(bytes, {
            dir: 'right'
        });
    }
    return new TextDecoder().decode(bytes);
} //# sourceMappingURL=fromHex.js.map
}}),
"[project]/node_modules/viem/_esm/utils/data/pad.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "pad": (()=>pad),
    "padBytes": (()=>padBytes),
    "padHex": (()=>padHex)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$data$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/data.js [app-client] (ecmascript)");
;
function pad(hexOrBytes, { dir, size = 32 } = {}) {
    if (typeof hexOrBytes === 'string') return padHex(hexOrBytes, {
        dir,
        size
    });
    return padBytes(hexOrBytes, {
        dir,
        size
    });
}
function padHex(hex_, { dir, size = 32 } = {}) {
    if (size === null) return hex_;
    const hex = hex_.replace('0x', '');
    if (hex.length > size * 2) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$data$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SizeExceedsPaddingSizeError"]({
        size: Math.ceil(hex.length / 2),
        targetSize: size,
        type: 'hex'
    });
    return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;
}
function padBytes(bytes, { dir, size = 32 } = {}) {
    if (size === null) return bytes;
    if (bytes.length > size) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$data$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SizeExceedsPaddingSizeError"]({
        size: bytes.length,
        targetSize: size,
        type: 'bytes'
    });
    const paddedBytes = new Uint8Array(size);
    for(let i = 0; i < size; i++){
        const padEnd = dir === 'right';
        paddedBytes[padEnd ? i : size - i - 1] = bytes[padEnd ? i : bytes.length - i - 1];
    }
    return paddedBytes;
} //# sourceMappingURL=pad.js.map
}}),
"[project]/node_modules/viem/_esm/utils/encoding/toHex.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "boolToHex": (()=>boolToHex),
    "bytesToHex": (()=>bytesToHex),
    "numberToHex": (()=>numberToHex),
    "stringToHex": (()=>stringToHex),
    "toHex": (()=>toHex)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/fromHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/pad.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$encoding$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/encoding.js [app-client] (ecmascript)");
;
;
;
const hexes = /*#__PURE__*/ Array.from({
    length: 256
}, (_v, i)=>i.toString(16).padStart(2, '0'));
function toHex(value, opts = {}) {
    if (typeof value === 'number' || typeof value === 'bigint') return numberToHex(value, opts);
    if (typeof value === 'string') {
        return stringToHex(value, opts);
    }
    if (typeof value === 'boolean') return boolToHex(value, opts);
    return bytesToHex(value, opts);
}
function boolToHex(value, opts = {}) {
    const hex = `0x${Number(value)}`;
    if (typeof opts.size === 'number') {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assertSize"])(hex, {
            size: opts.size
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(hex, {
            size: opts.size
        });
    }
    return hex;
}
function bytesToHex(value, opts = {}) {
    let string = '';
    for(let i = 0; i < value.length; i++){
        string += hexes[value[i]];
    }
    const hex = `0x${string}`;
    if (typeof opts.size === 'number') {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assertSize"])(hex, {
            size: opts.size
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(hex, {
            dir: 'right',
            size: opts.size
        });
    }
    return hex;
}
function numberToHex(value_, opts = {}) {
    const { signed, size } = opts;
    const value = BigInt(value_);
    let maxValue;
    if (size) {
        if (signed) maxValue = (1n << BigInt(size) * 8n - 1n) - 1n;
        else maxValue = 2n ** (BigInt(size) * 8n) - 1n;
    } else if (typeof value_ === 'number') {
        maxValue = BigInt(Number.MAX_SAFE_INTEGER);
    }
    const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0;
    if (maxValue && value > maxValue || value < minValue) {
        const suffix = typeof value_ === 'bigint' ? 'n' : '';
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$encoding$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["IntegerOutOfRangeError"]({
            max: maxValue ? `${maxValue}${suffix}` : undefined,
            min: `${minValue}${suffix}`,
            signed,
            size,
            value: `${value_}${suffix}`
        });
    }
    const hex = `0x${(signed && value < 0 ? (1n << BigInt(size * 8)) + BigInt(value) : value).toString(16)}`;
    if (size) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(hex, {
        size
    });
    return hex;
}
const encoder = /*#__PURE__*/ new TextEncoder();
function stringToHex(value_, opts = {}) {
    const value = encoder.encode(value_);
    return bytesToHex(value, opts);
} //# sourceMappingURL=toHex.js.map
}}),
"[project]/node_modules/viem/_esm/utils/encoding/toBytes.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "boolToBytes": (()=>boolToBytes),
    "hexToBytes": (()=>hexToBytes),
    "numberToBytes": (()=>numberToBytes),
    "stringToBytes": (()=>stringToBytes),
    "toBytes": (()=>toBytes)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$isHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/isHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/fromHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/pad.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/base.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toHex.js [app-client] (ecmascript)");
;
;
;
;
;
const encoder = /*#__PURE__*/ new TextEncoder();
function toBytes(value, opts = {}) {
    if (typeof value === 'number' || typeof value === 'bigint') return numberToBytes(value, opts);
    if (typeof value === 'boolean') return boolToBytes(value, opts);
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$isHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isHex"])(value)) return hexToBytes(value, opts);
    return stringToBytes(value, opts);
}
function boolToBytes(value, opts = {}) {
    const bytes = new Uint8Array(1);
    bytes[0] = Number(value);
    if (typeof opts.size === 'number') {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assertSize"])(bytes, {
            size: opts.size
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(bytes, {
            size: opts.size
        });
    }
    return bytes;
}
// We use very optimized technique to convert hex string to byte array
const charCodeMap = {
    zero: 48,
    nine: 57,
    A: 65,
    F: 70,
    a: 97,
    f: 102
};
function charCodeToBase16(char) {
    if (char >= charCodeMap.zero && char <= charCodeMap.nine) return char - charCodeMap.zero;
    if (char >= charCodeMap.A && char <= charCodeMap.F) return char - (charCodeMap.A - 10);
    if (char >= charCodeMap.a && char <= charCodeMap.f) return char - (charCodeMap.a - 10);
    return undefined;
}
function hexToBytes(hex_, opts = {}) {
    let hex = hex_;
    if (opts.size) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assertSize"])(hex, {
            size: opts.size
        });
        hex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(hex, {
            dir: 'right',
            size: opts.size
        });
    }
    let hexString = hex.slice(2);
    if (hexString.length % 2) hexString = `0${hexString}`;
    const length = hexString.length / 2;
    const bytes = new Uint8Array(length);
    for(let index = 0, j = 0; index < length; index++){
        const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++));
        const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++));
        if (nibbleLeft === undefined || nibbleRight === undefined) {
            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"](`Invalid byte sequence ("${hexString[j - 2]}${hexString[j - 1]}" in "${hexString}").`);
        }
        bytes[index] = nibbleLeft * 16 + nibbleRight;
    }
    return bytes;
}
function numberToBytes(value, opts) {
    const hex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["numberToHex"])(value, opts);
    return hexToBytes(hex);
}
function stringToBytes(value, opts = {}) {
    const bytes = encoder.encode(value);
    if (typeof opts.size === 'number') {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assertSize"])(bytes, {
            size: opts.size
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(bytes, {
            dir: 'right',
            size: opts.size
        });
    }
    return bytes;
} //# sourceMappingURL=toBytes.js.map
}}),
"[project]/node_modules/viem/_esm/utils/hash/keccak256.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "keccak256": (()=>keccak256)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$sha3$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@noble/hashes/esm/sha3.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$isHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/isHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toBytes.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toHex.js [app-client] (ecmascript)");
;
;
;
;
function keccak256(value, to_) {
    const to = to_ || 'hex';
    const bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$sha3$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keccak_256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$isHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isHex"])(value, {
        strict: false
    }) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBytes"])(value) : value);
    if (to === 'bytes') return bytes;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])(bytes);
} //# sourceMappingURL=keccak256.js.map
}}),
"[project]/node_modules/viem/_esm/utils/hash/hashSignature.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "hashSignature": (()=>hashSignature)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/hash/keccak256.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toBytes.js [app-client] (ecmascript)");
;
;
const hash = (value)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBytes"])(value));
function hashSignature(sig) {
    return hash(sig);
} //# sourceMappingURL=hashSignature.js.map
}}),
"[project]/node_modules/abitype/dist/esm/regex.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// TODO: This looks cool. Need to check the performance of `new RegExp` versus defined inline though.
// https://twitter.com/GabrielVergnaud/status/1622906834343366657
__turbopack_esm__({
    "bytesRegex": (()=>bytesRegex),
    "execTyped": (()=>execTyped),
    "integerRegex": (()=>integerRegex),
    "isTupleRegex": (()=>isTupleRegex)
});
function execTyped(regex, string) {
    const match = regex.exec(string);
    return match?.groups;
}
const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;
const integerRegex = /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;
const isTupleRegex = /^\(.+?\).*?$/; //# sourceMappingURL=regex.js.map
}}),
"[project]/node_modules/abitype/dist/esm/human-readable/formatAbiParameter.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "formatAbiParameter": (()=>formatAbiParameter)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$abitype$2f$dist$2f$esm$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/abitype/dist/esm/regex.js [app-client] (ecmascript)");
;
// https://regexr.com/7f7rv
const tupleRegex = /^tuple(?<array>(\[(\d*)\])*)$/;
function formatAbiParameter(abiParameter) {
    let type = abiParameter.type;
    if (tupleRegex.test(abiParameter.type) && 'components' in abiParameter) {
        type = '(';
        const length = abiParameter.components.length;
        for(let i = 0; i < length; i++){
            const component = abiParameter.components[i];
            type += formatAbiParameter(component);
            if (i < length - 1) type += ', ';
        }
        const result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$abitype$2f$dist$2f$esm$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["execTyped"])(tupleRegex, abiParameter.type);
        type += `)${result?.array ?? ''}`;
        return formatAbiParameter({
            ...abiParameter,
            type
        });
    }
    // Add `indexed` to type if in `abiParameter`
    if ('indexed' in abiParameter && abiParameter.indexed) type = `${type} indexed`;
    // Return human-readable ABI parameter
    if (abiParameter.name) return `${type} ${abiParameter.name}`;
    return type;
} //# sourceMappingURL=formatAbiParameter.js.map
}}),
"[project]/node_modules/abitype/dist/esm/human-readable/formatAbiParameters.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "formatAbiParameters": (()=>formatAbiParameters)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$abitype$2f$dist$2f$esm$2f$human$2d$readable$2f$formatAbiParameter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/abitype/dist/esm/human-readable/formatAbiParameter.js [app-client] (ecmascript)");
;
function formatAbiParameters(abiParameters) {
    let params = '';
    const length = abiParameters.length;
    for(let i = 0; i < length; i++){
        const abiParameter = abiParameters[i];
        params += (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$abitype$2f$dist$2f$esm$2f$human$2d$readable$2f$formatAbiParameter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatAbiParameter"])(abiParameter);
        if (i !== length - 1) params += ', ';
    }
    return params;
} //# sourceMappingURL=formatAbiParameters.js.map
}}),
"[project]/node_modules/abitype/dist/esm/human-readable/formatAbiItem.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "formatAbiItem": (()=>formatAbiItem)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$abitype$2f$dist$2f$esm$2f$human$2d$readable$2f$formatAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/abitype/dist/esm/human-readable/formatAbiParameters.js [app-client] (ecmascript)");
;
function formatAbiItem(abiItem) {
    if (abiItem.type === 'function') return `function ${abiItem.name}(${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$abitype$2f$dist$2f$esm$2f$human$2d$readable$2f$formatAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatAbiParameters"])(abiItem.inputs)})${abiItem.stateMutability && abiItem.stateMutability !== 'nonpayable' ? ` ${abiItem.stateMutability}` : ''}${abiItem.outputs?.length ? ` returns (${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$abitype$2f$dist$2f$esm$2f$human$2d$readable$2f$formatAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatAbiParameters"])(abiItem.outputs)})` : ''}`;
    if (abiItem.type === 'event') return `event ${abiItem.name}(${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$abitype$2f$dist$2f$esm$2f$human$2d$readable$2f$formatAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatAbiParameters"])(abiItem.inputs)})`;
    if (abiItem.type === 'error') return `error ${abiItem.name}(${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$abitype$2f$dist$2f$esm$2f$human$2d$readable$2f$formatAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatAbiParameters"])(abiItem.inputs)})`;
    if (abiItem.type === 'constructor') return `constructor(${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$abitype$2f$dist$2f$esm$2f$human$2d$readable$2f$formatAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatAbiParameters"])(abiItem.inputs)})${abiItem.stateMutability === 'payable' ? ' payable' : ''}`;
    if (abiItem.type === 'fallback') return `fallback() external${abiItem.stateMutability === 'payable' ? ' payable' : ''}`;
    return 'receive() external payable';
} //# sourceMappingURL=formatAbiItem.js.map
}}),
"[project]/node_modules/viem/_esm/utils/hash/normalizeSignature.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "normalizeSignature": (()=>normalizeSignature)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/base.js [app-client] (ecmascript)");
;
function normalizeSignature(signature) {
    let active = true;
    let current = '';
    let level = 0;
    let result = '';
    let valid = false;
    for(let i = 0; i < signature.length; i++){
        const char = signature[i];
        // If the character is a separator, we want to reactivate.
        if ([
            '(',
            ')',
            ','
        ].includes(char)) active = true;
        // If the character is a "level" token, we want to increment/decrement.
        if (char === '(') level++;
        if (char === ')') level--;
        // If we aren't active, we don't want to mutate the result.
        if (!active) continue;
        // If level === 0, we are at the definition level.
        if (level === 0) {
            if (char === ' ' && [
                'event',
                'function',
                ''
            ].includes(result)) result = '';
            else {
                result += char;
                // If we are at the end of the definition, we must be finished.
                if (char === ')') {
                    valid = true;
                    break;
                }
            }
            continue;
        }
        // Ignore spaces
        if (char === ' ') {
            // If the previous character is a separator, and the current section isn't empty, we want to deactivate.
            if (signature[i - 1] !== ',' && current !== ',' && current !== ',(') {
                current = '';
                active = false;
            }
            continue;
        }
        result += char;
        current += char;
    }
    if (!valid) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"]('Unable to normalize signature.');
    return result;
} //# sourceMappingURL=normalizeSignature.js.map
}}),
"[project]/node_modules/viem/_esm/utils/hash/toSignature.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "toSignature": (()=>toSignature)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$abitype$2f$dist$2f$esm$2f$human$2d$readable$2f$formatAbiItem$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/abitype/dist/esm/human-readable/formatAbiItem.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$normalizeSignature$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/hash/normalizeSignature.js [app-client] (ecmascript)");
;
;
const toSignature = (def)=>{
    const def_ = (()=>{
        if (typeof def === 'string') return def;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$abitype$2f$dist$2f$esm$2f$human$2d$readable$2f$formatAbiItem$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatAbiItem"])(def);
    })();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$normalizeSignature$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["normalizeSignature"])(def_);
}; //# sourceMappingURL=toSignature.js.map
}}),
"[project]/node_modules/viem/_esm/utils/hash/toSignatureHash.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "toSignatureHash": (()=>toSignatureHash)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$hashSignature$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/hash/hashSignature.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$toSignature$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/hash/toSignature.js [app-client] (ecmascript)");
;
;
function toSignatureHash(fn) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$hashSignature$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hashSignature"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$toSignature$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toSignature"])(fn));
} //# sourceMappingURL=toSignatureHash.js.map
}}),
"[project]/node_modules/viem/_esm/utils/hash/toFunctionSelector.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "toFunctionSelector": (()=>toFunctionSelector)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$slice$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/slice.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$toSignatureHash$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/hash/toSignatureHash.js [app-client] (ecmascript)");
;
;
const toFunctionSelector = (fn)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$slice$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["slice"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$toSignatureHash$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toSignatureHash"])(fn), 0, 4); //# sourceMappingURL=toFunctionSelector.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/universal-action-policy/constants.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MAX_RULES": (()=>MAX_RULES),
    "UNIVERSAL_ACTION_POLICY_ADDRESS": (()=>UNIVERSAL_ACTION_POLICY_ADDRESS)
});
const UNIVERSAL_ACTION_POLICY_ADDRESS = '0x0000006DDA6c463511C4e9B05CFc34C1247fCF1F';
const MAX_RULES = 16; //# sourceMappingURL=constants.js.map
}}),
"[project]/node_modules/viem/_esm/utils/abi/formatAbiItem.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "formatAbiItem": (()=>formatAbiItem),
    "formatAbiParams": (()=>formatAbiParams)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/abi.js [app-client] (ecmascript)");
;
function formatAbiItem(abiItem, { includeName = false } = {}) {
    if (abiItem.type !== 'function' && abiItem.type !== 'event' && abiItem.type !== 'error') throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InvalidDefinitionTypeError"](abiItem.type);
    return `${abiItem.name}(${formatAbiParams(abiItem.inputs, {
        includeName
    })})`;
}
function formatAbiParams(params, { includeName = false } = {}) {
    if (!params) return '';
    return params.map((param)=>formatAbiParam(param, {
            includeName
        })).join(includeName ? ', ' : ',');
}
function formatAbiParam(param, { includeName }) {
    if (param.type.startsWith('tuple')) {
        return `(${formatAbiParams(param.components, {
            includeName
        })})${param.type.slice('tuple'.length)}`;
    }
    return param.type + (includeName && param.name ? ` ${param.name}` : '');
} //# sourceMappingURL=formatAbiItem.js.map
}}),
"[project]/node_modules/viem/_esm/errors/abi.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AbiConstructorNotFoundError": (()=>AbiConstructorNotFoundError),
    "AbiConstructorParamsNotFoundError": (()=>AbiConstructorParamsNotFoundError),
    "AbiDecodingDataSizeInvalidError": (()=>AbiDecodingDataSizeInvalidError),
    "AbiDecodingDataSizeTooSmallError": (()=>AbiDecodingDataSizeTooSmallError),
    "AbiDecodingZeroDataError": (()=>AbiDecodingZeroDataError),
    "AbiEncodingArrayLengthMismatchError": (()=>AbiEncodingArrayLengthMismatchError),
    "AbiEncodingBytesSizeMismatchError": (()=>AbiEncodingBytesSizeMismatchError),
    "AbiEncodingLengthMismatchError": (()=>AbiEncodingLengthMismatchError),
    "AbiErrorInputsNotFoundError": (()=>AbiErrorInputsNotFoundError),
    "AbiErrorNotFoundError": (()=>AbiErrorNotFoundError),
    "AbiErrorSignatureNotFoundError": (()=>AbiErrorSignatureNotFoundError),
    "AbiEventNotFoundError": (()=>AbiEventNotFoundError),
    "AbiEventSignatureEmptyTopicsError": (()=>AbiEventSignatureEmptyTopicsError),
    "AbiEventSignatureNotFoundError": (()=>AbiEventSignatureNotFoundError),
    "AbiFunctionNotFoundError": (()=>AbiFunctionNotFoundError),
    "AbiFunctionOutputsNotFoundError": (()=>AbiFunctionOutputsNotFoundError),
    "AbiFunctionSignatureNotFoundError": (()=>AbiFunctionSignatureNotFoundError),
    "AbiItemAmbiguityError": (()=>AbiItemAmbiguityError),
    "BytesSizeMismatchError": (()=>BytesSizeMismatchError),
    "DecodeLogDataMismatch": (()=>DecodeLogDataMismatch),
    "DecodeLogTopicsMismatch": (()=>DecodeLogTopicsMismatch),
    "InvalidAbiDecodingTypeError": (()=>InvalidAbiDecodingTypeError),
    "InvalidAbiEncodingTypeError": (()=>InvalidAbiEncodingTypeError),
    "InvalidArrayError": (()=>InvalidArrayError),
    "InvalidDefinitionTypeError": (()=>InvalidDefinitionTypeError),
    "UnsupportedPackedAbiType": (()=>UnsupportedPackedAbiType)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/base.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$formatAbiItem$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/formatAbiItem.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/size.js [app-client] (ecmascript)");
;
;
;
class AbiConstructorNotFoundError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ docsPath }){
        super([
            'A constructor was not found on the ABI.',
            'Make sure you are using the correct ABI and that the constructor exists on it.'
        ].join('\n'), {
            docsPath,
            name: 'AbiConstructorNotFoundError'
        });
    }
}
class AbiConstructorParamsNotFoundError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ docsPath }){
        super([
            'Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.',
            'Make sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.'
        ].join('\n'), {
            docsPath,
            name: 'AbiConstructorParamsNotFoundError'
        });
    }
}
class AbiDecodingDataSizeInvalidError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ data, size }){
        super([
            `Data size of ${size} bytes is invalid.`,
            'Size must be in increments of 32 bytes (size % 32 === 0).'
        ].join('\n'), {
            metaMessages: [
                `Data: ${data} (${size} bytes)`
            ],
            name: 'AbiDecodingDataSizeInvalidError'
        });
    }
}
class AbiDecodingDataSizeTooSmallError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ data, params, size }){
        super([
            `Data size of ${size} bytes is too small for given parameters.`
        ].join('\n'), {
            metaMessages: [
                `Params: (${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$formatAbiItem$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatAbiParams"])(params, {
                    includeName: true
                })})`,
                `Data:   ${data} (${size} bytes)`
            ],
            name: 'AbiDecodingDataSizeTooSmallError'
        });
        Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "params", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "size", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.data = data;
        this.params = params;
        this.size = size;
    }
}
class AbiDecodingZeroDataError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(){
        super('Cannot decode zero data ("0x") with ABI parameters.', {
            name: 'AbiDecodingZeroDataError'
        });
    }
}
class AbiEncodingArrayLengthMismatchError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ expectedLength, givenLength, type }){
        super([
            `ABI encoding array length mismatch for type ${type}.`,
            `Expected length: ${expectedLength}`,
            `Given length: ${givenLength}`
        ].join('\n'), {
            name: 'AbiEncodingArrayLengthMismatchError'
        });
    }
}
class AbiEncodingBytesSizeMismatchError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ expectedSize, value }){
        super(`Size of bytes "${value}" (bytes${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(value)}) does not match expected size (bytes${expectedSize}).`, {
            name: 'AbiEncodingBytesSizeMismatchError'
        });
    }
}
class AbiEncodingLengthMismatchError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ expectedLength, givenLength }){
        super([
            'ABI encoding params/values length mismatch.',
            `Expected length (params): ${expectedLength}`,
            `Given length (values): ${givenLength}`
        ].join('\n'), {
            name: 'AbiEncodingLengthMismatchError'
        });
    }
}
class AbiErrorInputsNotFoundError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(errorName, { docsPath }){
        super([
            `Arguments (\`args\`) were provided to "${errorName}", but "${errorName}" on the ABI does not contain any parameters (\`inputs\`).`,
            'Cannot encode error result without knowing what the parameter types are.',
            'Make sure you are using the correct ABI and that the inputs exist on it.'
        ].join('\n'), {
            docsPath,
            name: 'AbiErrorInputsNotFoundError'
        });
    }
}
class AbiErrorNotFoundError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(errorName, { docsPath } = {}){
        super([
            `Error ${errorName ? `"${errorName}" ` : ''}not found on ABI.`,
            'Make sure you are using the correct ABI and that the error exists on it.'
        ].join('\n'), {
            docsPath,
            name: 'AbiErrorNotFoundError'
        });
    }
}
class AbiErrorSignatureNotFoundError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(signature, { docsPath }){
        super([
            `Encoded error signature "${signature}" not found on ABI.`,
            'Make sure you are using the correct ABI and that the error exists on it.',
            `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`
        ].join('\n'), {
            docsPath,
            name: 'AbiErrorSignatureNotFoundError'
        });
        Object.defineProperty(this, "signature", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.signature = signature;
    }
}
class AbiEventSignatureEmptyTopicsError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ docsPath }){
        super('Cannot extract event signature from empty topics.', {
            docsPath,
            name: 'AbiEventSignatureEmptyTopicsError'
        });
    }
}
class AbiEventSignatureNotFoundError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(signature, { docsPath }){
        super([
            `Encoded event signature "${signature}" not found on ABI.`,
            'Make sure you are using the correct ABI and that the event exists on it.',
            `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`
        ].join('\n'), {
            docsPath,
            name: 'AbiEventSignatureNotFoundError'
        });
    }
}
class AbiEventNotFoundError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(eventName, { docsPath } = {}){
        super([
            `Event ${eventName ? `"${eventName}" ` : ''}not found on ABI.`,
            'Make sure you are using the correct ABI and that the event exists on it.'
        ].join('\n'), {
            docsPath,
            name: 'AbiEventNotFoundError'
        });
    }
}
class AbiFunctionNotFoundError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(functionName, { docsPath } = {}){
        super([
            `Function ${functionName ? `"${functionName}" ` : ''}not found on ABI.`,
            'Make sure you are using the correct ABI and that the function exists on it.'
        ].join('\n'), {
            docsPath,
            name: 'AbiFunctionNotFoundError'
        });
    }
}
class AbiFunctionOutputsNotFoundError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(functionName, { docsPath }){
        super([
            `Function "${functionName}" does not contain any \`outputs\` on ABI.`,
            'Cannot decode function result without knowing what the parameter types are.',
            'Make sure you are using the correct ABI and that the function exists on it.'
        ].join('\n'), {
            docsPath,
            name: 'AbiFunctionOutputsNotFoundError'
        });
    }
}
class AbiFunctionSignatureNotFoundError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(signature, { docsPath }){
        super([
            `Encoded function signature "${signature}" not found on ABI.`,
            'Make sure you are using the correct ABI and that the function exists on it.',
            `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`
        ].join('\n'), {
            docsPath,
            name: 'AbiFunctionSignatureNotFoundError'
        });
    }
}
class AbiItemAmbiguityError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(x, y){
        super('Found ambiguous types in overloaded ABI items.', {
            metaMessages: [
                `\`${x.type}\` in \`${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$formatAbiItem$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatAbiItem"])(x.abiItem)}\`, and`,
                `\`${y.type}\` in \`${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$formatAbiItem$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatAbiItem"])(y.abiItem)}\``,
                '',
                'These types encode differently and cannot be distinguished at runtime.',
                'Remove one of the ambiguous items in the ABI.'
            ],
            name: 'AbiItemAmbiguityError'
        });
    }
}
class BytesSizeMismatchError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ expectedSize, givenSize }){
        super(`Expected bytes${expectedSize}, got bytes${givenSize}.`, {
            name: 'BytesSizeMismatchError'
        });
    }
}
class DecodeLogDataMismatch extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ abiItem, data, params, size }){
        super([
            `Data size of ${size} bytes is too small for non-indexed event parameters.`
        ].join('\n'), {
            metaMessages: [
                `Params: (${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$formatAbiItem$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatAbiParams"])(params, {
                    includeName: true
                })})`,
                `Data:   ${data} (${size} bytes)`
            ],
            name: 'DecodeLogDataMismatch'
        });
        Object.defineProperty(this, "abiItem", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "params", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "size", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.abiItem = abiItem;
        this.data = data;
        this.params = params;
        this.size = size;
    }
}
class DecodeLogTopicsMismatch extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ abiItem, param }){
        super([
            `Expected a topic for indexed event parameter${param.name ? ` "${param.name}"` : ''} on event "${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$formatAbiItem$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatAbiItem"])(abiItem, {
                includeName: true
            })}".`
        ].join('\n'), {
            name: 'DecodeLogTopicsMismatch'
        });
        Object.defineProperty(this, "abiItem", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.abiItem = abiItem;
    }
}
class InvalidAbiEncodingTypeError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(type, { docsPath }){
        super([
            `Type "${type}" is not a valid encoding type.`,
            'Please provide a valid ABI type.'
        ].join('\n'), {
            docsPath,
            name: 'InvalidAbiEncodingType'
        });
    }
}
class InvalidAbiDecodingTypeError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(type, { docsPath }){
        super([
            `Type "${type}" is not a valid decoding type.`,
            'Please provide a valid ABI type.'
        ].join('\n'), {
            docsPath,
            name: 'InvalidAbiDecodingType'
        });
    }
}
class InvalidArrayError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(value){
        super([
            `Value "${value}" is not a valid array.`
        ].join('\n'), {
            name: 'InvalidArrayError'
        });
    }
}
class InvalidDefinitionTypeError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(type){
        super([
            `"${type}" is not a valid definition type.`,
            'Valid types: "function", "event", "error"'
        ].join('\n'), {
            name: 'InvalidDefinitionTypeError'
        });
    }
}
class UnsupportedPackedAbiType extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor(type){
        super(`Type "${type}" is not supported for packed encoding.`, {
            name: 'UnsupportedPackedAbiType'
        });
    }
} //# sourceMappingURL=abi.js.map
}}),
"[project]/node_modules/viem/_esm/utils/regex.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "arrayRegex": (()=>arrayRegex),
    "bytesRegex": (()=>bytesRegex),
    "integerRegex": (()=>integerRegex)
});
const arrayRegex = /^(.*)\[([0-9]*)\]$/;
const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;
const integerRegex = /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/; //# sourceMappingURL=regex.js.map
}}),
"[project]/node_modules/viem/_esm/utils/data/concat.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "concat": (()=>concat),
    "concatBytes": (()=>concatBytes),
    "concatHex": (()=>concatHex)
});
function concat(values) {
    if (typeof values[0] === 'string') return concatHex(values);
    return concatBytes(values);
}
function concatBytes(values) {
    let length = 0;
    for (const arr of values){
        length += arr.length;
    }
    const result = new Uint8Array(length);
    let offset = 0;
    for (const arr of values){
        result.set(arr, offset);
        offset += arr.length;
    }
    return result;
}
function concatHex(values) {
    return `0x${values.reduce((acc, x)=>acc + x.replace('0x', ''), '')}`;
} //# sourceMappingURL=concat.js.map
}}),
"[project]/node_modules/viem/_esm/utils/lru.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
/**
 * Map with a LRU (Least recently used) policy.
 *
 * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU
 */ __turbopack_esm__({
    "LruMap": (()=>LruMap)
});
class LruMap extends Map {
    constructor(size){
        super();
        Object.defineProperty(this, "maxSize", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.maxSize = size;
    }
    get(key) {
        const value = super.get(key);
        if (super.has(key) && value !== undefined) {
            this.delete(key);
            super.set(key, value);
        }
        return value;
    }
    set(key, value) {
        super.set(key, value);
        if (this.maxSize && this.size > this.maxSize) {
            const firstKey = this.keys().next().value;
            if (firstKey) this.delete(firstKey);
        }
        return this;
    }
} //# sourceMappingURL=lru.js.map
}}),
"[project]/node_modules/viem/_esm/errors/address.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "InvalidAddressError": (()=>InvalidAddressError)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/base.js [app-client] (ecmascript)");
;
class InvalidAddressError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ address }){
        super(`Address "${address}" is invalid.`, {
            metaMessages: [
                '- Address must be a hex value of 20 bytes (40 hex characters).',
                '- Address must match its checksum counterpart.'
            ],
            name: 'InvalidAddressError'
        });
    }
} //# sourceMappingURL=address.js.map
}}),
"[project]/node_modules/viem/_esm/utils/address/getAddress.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "checksumAddress": (()=>checksumAddress),
    "getAddress": (()=>getAddress)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$lru$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/lru.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/hash/keccak256.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toBytes.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$isAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/address/isAddress.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$address$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/address.js [app-client] (ecmascript)");
;
;
;
;
;
const checksumAddressCache = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$lru$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LruMap"](8192);
function checksumAddress(address_, /**
 * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the
 * wider Ethereum ecosystem, meaning it will break when validated against an application/tool
 * that relies on EIP-55 checksum encoding (checksum without chainId).
 *
 * It is highly recommended to not use this feature unless you
 * know what you are doing.
 *
 * See more: https://github.com/ethereum/EIPs/issues/1121
 */ chainId) {
    if (checksumAddressCache.has(`${address_}.${chainId}`)) return checksumAddressCache.get(`${address_}.${chainId}`);
    const hexAddress = chainId ? `${chainId}${address_.toLowerCase()}` : address_.substring(2).toLowerCase();
    const hash = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["stringToBytes"])(hexAddress), 'bytes');
    const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');
    for(let i = 0; i < 40; i += 2){
        if (hash[i >> 1] >> 4 >= 8 && address[i]) {
            address[i] = address[i].toUpperCase();
        }
        if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {
            address[i + 1] = address[i + 1].toUpperCase();
        }
    }
    const result = `0x${address.join('')}`;
    checksumAddressCache.set(`${address_}.${chainId}`, result);
    return result;
}
function getAddress(address, /**
 * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the
 * wider Ethereum ecosystem, meaning it will break when validated against an application/tool
 * that relies on EIP-55 checksum encoding (checksum without chainId).
 *
 * It is highly recommended to not use this feature unless you
 * know what you are doing.
 *
 * See more: https://github.com/ethereum/EIPs/issues/1121
 */ chainId) {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$isAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isAddress"])(address, {
        strict: false
    })) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$address$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InvalidAddressError"]({
        address
    });
    return checksumAddress(address, chainId);
} //# sourceMappingURL=getAddress.js.map
}}),
"[project]/node_modules/viem/_esm/utils/address/isAddress.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "isAddress": (()=>isAddress),
    "isAddressCache": (()=>isAddressCache)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$lru$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/lru.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$getAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/address/getAddress.js [app-client] (ecmascript)");
;
;
const addressRegex = /^0x[a-fA-F0-9]{40}$/;
const isAddressCache = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$lru$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LruMap"](8192);
function isAddress(address, options) {
    const { strict = true } = options ?? {};
    const cacheKey = `${address}.${strict}`;
    if (isAddressCache.has(cacheKey)) return isAddressCache.get(cacheKey);
    const result = (()=>{
        if (!addressRegex.test(address)) return false;
        if (address.toLowerCase() === address) return true;
        if (strict) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$getAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["checksumAddress"])(address) === address;
        return true;
    })();
    isAddressCache.set(cacheKey, result);
    return result;
} //# sourceMappingURL=isAddress.js.map
}}),
"[project]/node_modules/viem/_esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "encodeAbiParameters": (()=>encodeAbiParameters),
    "getArrayComponents": (()=>getArrayComponents)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/abi.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/regex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/size.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/concat.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$isAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/address/isAddress.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$address$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/address.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/pad.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/base.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$encoding$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/encoding.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$slice$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/slice.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
function encodeAbiParameters(params, values) {
    if (params.length !== values.length) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AbiEncodingLengthMismatchError"]({
        expectedLength: params.length,
        givenLength: values.length
    });
    // Prepare the parameters to determine dynamic types to encode.
    const preparedParams = prepareParams({
        params: params,
        values: values
    });
    const data = encodeParams(preparedParams);
    if (data.length === 0) return '0x';
    return data;
}
function prepareParams({ params, values }) {
    const preparedParams = [];
    for(let i = 0; i < params.length; i++){
        preparedParams.push(prepareParam({
            param: params[i],
            value: values[i]
        }));
    }
    return preparedParams;
}
function prepareParam({ param, value }) {
    const arrayComponents = getArrayComponents(param.type);
    if (arrayComponents) {
        const [length, type] = arrayComponents;
        return encodeArray(value, {
            length,
            param: {
                ...param,
                type
            }
        });
    }
    if (param.type === 'tuple') {
        return encodeTuple(value, {
            param: param
        });
    }
    if (param.type === 'address') {
        return encodeAddress(value);
    }
    if (param.type === 'bool') {
        return encodeBool(value);
    }
    if (param.type.startsWith('uint') || param.type.startsWith('int')) {
        const signed = param.type.startsWith('int');
        const [, , size = '256'] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integerRegex"].exec(param.type) ?? [];
        return encodeNumber(value, {
            signed,
            size: Number(size)
        });
    }
    if (param.type.startsWith('bytes')) {
        return encodeBytes(value, {
            param
        });
    }
    if (param.type === 'string') {
        return encodeString(value);
    }
    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InvalidAbiEncodingTypeError"](param.type, {
        docsPath: '/docs/contract/encodeAbiParameters'
    });
}
function encodeParams(preparedParams) {
    // 1. Compute the size of the static part of the parameters.
    let staticSize = 0;
    for(let i = 0; i < preparedParams.length; i++){
        const { dynamic, encoded } = preparedParams[i];
        if (dynamic) staticSize += 32;
        else staticSize += (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(encoded);
    }
    // 2. Split the parameters into static and dynamic parts.
    const staticParams = [];
    const dynamicParams = [];
    let dynamicSize = 0;
    for(let i = 0; i < preparedParams.length; i++){
        const { dynamic, encoded } = preparedParams[i];
        if (dynamic) {
            staticParams.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["numberToHex"])(staticSize + dynamicSize, {
                size: 32
            }));
            dynamicParams.push(encoded);
            dynamicSize += (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(encoded);
        } else {
            staticParams.push(encoded);
        }
    }
    // 3. Concatenate static and dynamic parts.
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concat"])([
        ...staticParams,
        ...dynamicParams
    ]);
}
function encodeAddress(value) {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$isAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isAddress"])(value)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$address$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InvalidAddressError"]({
        address: value
    });
    return {
        dynamic: false,
        encoded: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["padHex"])(value.toLowerCase())
    };
}
function encodeArray(value, { length, param }) {
    const dynamic = length === null;
    if (!Array.isArray(value)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InvalidArrayError"](value);
    if (!dynamic && value.length !== length) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AbiEncodingArrayLengthMismatchError"]({
        expectedLength: length,
        givenLength: value.length,
        type: `${param.type}[${length}]`
    });
    let dynamicChild = false;
    const preparedParams = [];
    for(let i = 0; i < value.length; i++){
        const preparedParam = prepareParam({
            param,
            value: value[i]
        });
        if (preparedParam.dynamic) dynamicChild = true;
        preparedParams.push(preparedParam);
    }
    if (dynamic || dynamicChild) {
        const data = encodeParams(preparedParams);
        if (dynamic) {
            const length = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["numberToHex"])(preparedParams.length, {
                size: 32
            });
            return {
                dynamic: true,
                encoded: preparedParams.length > 0 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concat"])([
                    length,
                    data
                ]) : length
            };
        }
        if (dynamicChild) return {
            dynamic: true,
            encoded: data
        };
    }
    return {
        dynamic: false,
        encoded: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concat"])(preparedParams.map(({ encoded })=>encoded))
    };
}
function encodeBytes(value, { param }) {
    const [, paramSize] = param.type.split('bytes');
    const bytesSize = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(value);
    if (!paramSize) {
        let value_ = value;
        // If the size is not divisible by 32 bytes, pad the end
        // with empty bytes to the ceiling 32 bytes.
        if (bytesSize % 32 !== 0) value_ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["padHex"])(value_, {
            dir: 'right',
            size: Math.ceil((value.length - 2) / 2 / 32) * 32
        });
        return {
            dynamic: true,
            encoded: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concat"])([
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["padHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["numberToHex"])(bytesSize, {
                    size: 32
                })),
                value_
            ])
        };
    }
    if (bytesSize !== Number.parseInt(paramSize)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AbiEncodingBytesSizeMismatchError"]({
        expectedSize: Number.parseInt(paramSize),
        value
    });
    return {
        dynamic: false,
        encoded: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["padHex"])(value, {
            dir: 'right'
        })
    };
}
function encodeBool(value) {
    if (typeof value !== 'boolean') throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"](`Invalid boolean value: "${value}" (type: ${typeof value}). Expected: \`true\` or \`false\`.`);
    return {
        dynamic: false,
        encoded: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["padHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["boolToHex"])(value))
    };
}
function encodeNumber(value, { signed, size = 256 }) {
    if (typeof size === 'number') {
        const max = 2n ** (BigInt(size) - (signed ? 1n : 0n)) - 1n;
        const min = signed ? -max - 1n : 0n;
        if (value > max || value < min) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$encoding$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["IntegerOutOfRangeError"]({
            max: max.toString(),
            min: min.toString(),
            signed,
            size: size / 8,
            value: value.toString()
        });
    }
    return {
        dynamic: false,
        encoded: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["numberToHex"])(value, {
            size: 32,
            signed
        })
    };
}
function encodeString(value) {
    const hexValue = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["stringToHex"])(value);
    const partsLength = Math.ceil((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(hexValue) / 32);
    const parts = [];
    for(let i = 0; i < partsLength; i++){
        parts.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["padHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$slice$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["slice"])(hexValue, i * 32, (i + 1) * 32), {
            dir: 'right'
        }));
    }
    return {
        dynamic: true,
        encoded: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concat"])([
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["padHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["numberToHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(hexValue), {
                size: 32
            })),
            ...parts
        ])
    };
}
function encodeTuple(value, { param }) {
    let dynamic = false;
    const preparedParams = [];
    for(let i = 0; i < param.components.length; i++){
        const param_ = param.components[i];
        const index = Array.isArray(value) ? i : param_.name;
        const preparedParam = prepareParam({
            param: param_,
            value: value[index]
        });
        preparedParams.push(preparedParam);
        if (preparedParam.dynamic) dynamic = true;
    }
    return {
        dynamic,
        encoded: dynamic ? encodeParams(preparedParams) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concat"])(preparedParams.map(({ encoded })=>encoded))
    };
}
function getArrayComponents(type) {
    const matches = type.match(/^(.*)\[(\d+)?\]$/);
    return matches ? [
        matches[2] ? Number(matches[2]) : null,
        matches[1]
    ] : undefined;
} //# sourceMappingURL=encodeAbiParameters.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/universal-action-policy/abi.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "abi": (()=>abi)
});
const abi = [
    {
        components: [
            {
                name: 'valueLimitPerUse',
                type: 'uint256'
            },
            {
                components: [
                    {
                        name: 'length',
                        type: 'uint256'
                    },
                    {
                        components: [
                            {
                                name: 'condition',
                                type: 'uint8'
                            },
                            {
                                name: 'offset',
                                type: 'uint64'
                            },
                            {
                                name: 'isLimited',
                                type: 'bool'
                            },
                            {
                                name: 'ref',
                                type: 'bytes32'
                            },
                            {
                                components: [
                                    {
                                        name: 'limit',
                                        type: 'uint256'
                                    },
                                    {
                                        name: 'used',
                                        type: 'uint256'
                                    }
                                ],
                                name: 'usage',
                                type: 'tuple'
                            }
                        ],
                        name: 'rules',
                        type: 'tuple[16]'
                    }
                ],
                name: 'paramRules',
                type: 'tuple'
            }
        ],
        name: 'ActionConfig',
        type: 'tuple'
    }
]; //# sourceMappingURL=abi.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/universal-action-policy/installation.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getUniversalActionPolicy": (()=>getUniversalActionPolicy)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$universal$2d$action$2d$policy$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/universal-action-policy/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$universal$2d$action$2d$policy$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/universal-action-policy/abi.js [app-client] (ecmascript)");
;
;
;
const getUniversalActionPolicy = (actionConfig)=>{
    if (actionConfig.paramRules.rules.length > __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$universal$2d$action$2d$policy$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MAX_RULES"]) {
        throw new Error(`Max number of rules is ${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$universal$2d$action$2d$policy$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MAX_RULES"]}`);
    }
    return {
        policy: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$universal$2d$action$2d$policy$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["UNIVERSAL_ACTION_POLICY_ADDRESS"],
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$universal$2d$action$2d$policy$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["UNIVERSAL_ACTION_POLICY_ADDRESS"],
        initData: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$universal$2d$action$2d$policy$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"], [
            {
                valueLimitPerUse: actionConfig.valueLimitPerUse,
                paramRules: {
                    length: actionConfig.paramRules.length,
                    rules: actionConfig.paramRules.rules
                }
            }
        ])
    };
}; //# sourceMappingURL=installation.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/sudo-policy/constants.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SUDO_POLICY_ADDRESS": (()=>SUDO_POLICY_ADDRESS)
});
const SUDO_POLICY_ADDRESS = '0x0000003111cD8e92337C100F22B7A9dbf8DEE301'; //# sourceMappingURL=constants.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/sudo-policy/installation.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getSudoPolicy": (()=>getSudoPolicy)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$sudo$2d$policy$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/sudo-policy/constants.js [app-client] (ecmascript)");
;
const getSudoPolicy = ()=>{
    return {
        policy: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$sudo$2d$policy$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SUDO_POLICY_ADDRESS"],
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$sudo$2d$policy$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SUDO_POLICY_ADDRESS"],
        initData: '0x'
    };
}; //# sourceMappingURL=installation.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/value-limit-policy/constants.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "VALUE_LIMIT_POLICY_ADDRESS": (()=>VALUE_LIMIT_POLICY_ADDRESS)
});
const VALUE_LIMIT_POLICY_ADDRESS = '0x730DA93267E7E513e932301B47F2ac7D062abC83'; //# sourceMappingURL=constants.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/value-limit-policy/installation.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getValueLimitPolicy": (()=>getValueLimitPolicy)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$value$2d$limit$2d$policy$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/value-limit-policy/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
;
;
const getValueLimitPolicy = (params)=>{
    return {
        policy: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$value$2d$limit$2d$policy$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["VALUE_LIMIT_POLICY_ADDRESS"],
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$value$2d$limit$2d$policy$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["VALUE_LIMIT_POLICY_ADDRESS"],
        initData: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])([
            {
                type: 'uint256'
            }
        ], [
            params.limit
        ])
    };
}; //# sourceMappingURL=installation.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/usage-limit-policy/constants.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "USAGE_LIMIT_POLICY_ADDRESS": (()=>USAGE_LIMIT_POLICY_ADDRESS)
});
const USAGE_LIMIT_POLICY_ADDRESS = '0x1F34eF8311345A3A4a4566aF321b313052F51493'; //# sourceMappingURL=constants.js.map
}}),
"[project]/node_modules/viem/_esm/utils/abi/encodePacked.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "encodePacked": (()=>encodePacked)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/abi.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/concat.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/regex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/pad.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$isAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/address/isAddress.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$address$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/address.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
function encodePacked(types, values) {
    if (types.length !== values.length) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AbiEncodingLengthMismatchError"]({
        expectedLength: types.length,
        givenLength: values.length
    });
    const data = [];
    for(let i = 0; i < types.length; i++){
        const type = types[i];
        const value = values[i];
        data.push(encode(type, value));
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concatHex"])(data);
}
function encode(type, value, isArray = false) {
    if (type === 'address') {
        const address = value;
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$isAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isAddress"])(address)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$address$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InvalidAddressError"]({
            address
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(address.toLowerCase(), {
            size: isArray ? 32 : null
        });
    }
    if (type === 'string') return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["stringToHex"])(value);
    if (type === 'bytes') return value;
    if (type === 'bool') return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["boolToHex"])(value), {
        size: isArray ? 32 : 1
    });
    const intMatch = type.match(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integerRegex"]);
    if (intMatch) {
        const [_type, baseType, bits = '256'] = intMatch;
        const size = Number.parseInt(bits) / 8;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["numberToHex"])(value, {
            size: isArray ? 32 : size,
            signed: baseType === 'int'
        });
    }
    const bytesMatch = type.match(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesRegex"]);
    if (bytesMatch) {
        const [_type, size] = bytesMatch;
        if (Number.parseInt(size) !== (value.length - 2) / 2) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BytesSizeMismatchError"]({
            expectedSize: Number.parseInt(size),
            givenSize: (value.length - 2) / 2
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(value, {
            dir: 'right',
            size: isArray ? 32 : null
        });
    }
    const arrayMatch = type.match(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["arrayRegex"]);
    if (arrayMatch && Array.isArray(value)) {
        const [_type, childType] = arrayMatch;
        const data = [];
        for(let i = 0; i < value.length; i++){
            data.push(encode(childType, value[i], true));
        }
        if (data.length === 0) return '0x';
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concatHex"])(data);
    }
    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["UnsupportedPackedAbiType"](type);
} //# sourceMappingURL=encodePacked.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/usage-limit-policy/installation.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getUsageLimitPolicy": (()=>getUsageLimitPolicy)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$usage$2d$limit$2d$policy$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/usage-limit-policy/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodePacked$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/encodePacked.js [app-client] (ecmascript)");
;
;
const getUsageLimitPolicy = (params)=>{
    return {
        policy: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$usage$2d$limit$2d$policy$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["USAGE_LIMIT_POLICY_ADDRESS"],
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$usage$2d$limit$2d$policy$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["USAGE_LIMIT_POLICY_ADDRESS"],
        initData: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodePacked$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodePacked"])([
            'uint128'
        ], [
            params.limit
        ])
    };
}; //# sourceMappingURL=installation.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/spending-limits-policy/constants.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SPENDING_LIMITS_POLICY_ADDRESS": (()=>SPENDING_LIMITS_POLICY_ADDRESS)
});
const SPENDING_LIMITS_POLICY_ADDRESS = '0x00000088D48cF102A8Cdb0137A9b173f957c6343'; //# sourceMappingURL=constants.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/spending-limits-policy/installation.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getSpendingLimitsPolicy": (()=>getSpendingLimitsPolicy)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$spending$2d$limits$2d$policy$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/spending-limits-policy/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
;
;
const getSpendingLimitsPolicy = (params)=>{
    return {
        policy: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$spending$2d$limits$2d$policy$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SPENDING_LIMITS_POLICY_ADDRESS"],
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$spending$2d$limits$2d$policy$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SPENDING_LIMITS_POLICY_ADDRESS"],
        initData: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])([
            {
                type: 'address[]'
            },
            {
                type: 'uint256[]'
            }
        ], [
            params.map(({ token })=>token),
            params.map(({ limit })=>limit)
        ])
    };
}; //# sourceMappingURL=installation.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/ownable-validator/constants.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "OWNABLE_VALIDATOR_ADDRESS": (()=>OWNABLE_VALIDATOR_ADDRESS)
});
const OWNABLE_VALIDATOR_ADDRESS = '0x2483DA3A338895199E5e538530213157e931Bf06'; //# sourceMappingURL=constants.js.map
}}),
"[project]/node_modules/viem/_esm/utils/hash/toEventSelector.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "toEventSelector": (()=>toEventSelector)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$toSignatureHash$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/hash/toSignatureHash.js [app-client] (ecmascript)");
;
const toEventSelector = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$toSignatureHash$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toSignatureHash"]; //# sourceMappingURL=toEventSelector.js.map
}}),
"[project]/node_modules/viem/_esm/utils/abi/getAbiItem.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getAbiItem": (()=>getAbiItem),
    "getAmbiguousTypes": (()=>getAmbiguousTypes),
    "isArgOfType": (()=>isArgOfType)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$isHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/isHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$toEventSelector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/hash/toEventSelector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$toFunctionSelector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/hash/toFunctionSelector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/abi.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$isAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/address/isAddress.js [app-client] (ecmascript)");
;
;
;
;
;
function getAbiItem(parameters) {
    const { abi, args = [], name } = parameters;
    const isSelector = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$isHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isHex"])(name, {
        strict: false
    });
    const abiItems = abi.filter((abiItem)=>{
        if (isSelector) {
            if (abiItem.type === 'function') return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$toFunctionSelector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toFunctionSelector"])(abiItem) === name;
            if (abiItem.type === 'event') return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$toEventSelector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toEventSelector"])(abiItem) === name;
            return false;
        }
        return 'name' in abiItem && abiItem.name === name;
    });
    if (abiItems.length === 0) return undefined;
    if (abiItems.length === 1) return abiItems[0];
    let matchedAbiItem = undefined;
    for (const abiItem of abiItems){
        if (!('inputs' in abiItem)) continue;
        if (!args || args.length === 0) {
            if (!abiItem.inputs || abiItem.inputs.length === 0) return abiItem;
            continue;
        }
        if (!abiItem.inputs) continue;
        if (abiItem.inputs.length === 0) continue;
        if (abiItem.inputs.length !== args.length) continue;
        const matched = args.every((arg, index)=>{
            const abiParameter = 'inputs' in abiItem && abiItem.inputs[index];
            if (!abiParameter) return false;
            return isArgOfType(arg, abiParameter);
        });
        if (matched) {
            // Check for ambiguity against already matched parameters (e.g. `address` vs `bytes20`).
            if (matchedAbiItem && 'inputs' in matchedAbiItem && matchedAbiItem.inputs) {
                const ambiguousTypes = getAmbiguousTypes(abiItem.inputs, matchedAbiItem.inputs, args);
                if (ambiguousTypes) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AbiItemAmbiguityError"]({
                    abiItem,
                    type: ambiguousTypes[0]
                }, {
                    abiItem: matchedAbiItem,
                    type: ambiguousTypes[1]
                });
            }
            matchedAbiItem = abiItem;
        }
    }
    if (matchedAbiItem) return matchedAbiItem;
    return abiItems[0];
}
function isArgOfType(arg, abiParameter) {
    const argType = typeof arg;
    const abiParameterType = abiParameter.type;
    switch(abiParameterType){
        case 'address':
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$isAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isAddress"])(arg, {
                strict: false
            });
        case 'bool':
            return argType === 'boolean';
        case 'function':
            return argType === 'string';
        case 'string':
            return argType === 'string';
        default:
            {
                if (abiParameterType === 'tuple' && 'components' in abiParameter) return Object.values(abiParameter.components).every((component, index)=>{
                    return isArgOfType(Object.values(arg)[index], component);
                });
                // `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`
                // https://regexr.com/6v8hp
                if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(abiParameterType)) return argType === 'number' || argType === 'bigint';
                // `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`
                // https://regexr.com/6va55
                if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType)) return argType === 'string' || arg instanceof Uint8Array;
                // fixed-length (`<type>[M]`) and dynamic (`<type>[]`) arrays
                // https://regexr.com/6va6i
                if (/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(abiParameterType)) {
                    return Array.isArray(arg) && arg.every((x)=>isArgOfType(x, {
                            ...abiParameter,
                            // Pop off `[]` or `[M]` from end of type
                            type: abiParameterType.replace(/(\[[0-9]{0,}\])$/, '')
                        }));
                }
                return false;
            }
    }
}
function getAmbiguousTypes(sourceParameters, targetParameters, args) {
    for(const parameterIndex in sourceParameters){
        const sourceParameter = sourceParameters[parameterIndex];
        const targetParameter = targetParameters[parameterIndex];
        if (sourceParameter.type === 'tuple' && targetParameter.type === 'tuple' && 'components' in sourceParameter && 'components' in targetParameter) return getAmbiguousTypes(sourceParameter.components, targetParameter.components, args[parameterIndex]);
        const types = [
            sourceParameter.type,
            targetParameter.type
        ];
        const ambiguous = (()=>{
            if (types.includes('address') && types.includes('bytes20')) return true;
            if (types.includes('address') && types.includes('string')) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$isAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isAddress"])(args[parameterIndex], {
                strict: false
            });
            if (types.includes('address') && types.includes('bytes')) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$isAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isAddress"])(args[parameterIndex], {
                strict: false
            });
            return false;
        })();
        if (ambiguous) return types;
    }
    return;
} //# sourceMappingURL=getAbiItem.js.map
}}),
"[project]/node_modules/viem/_esm/utils/abi/prepareEncodeFunctionData.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "prepareEncodeFunctionData": (()=>prepareEncodeFunctionData)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$getAbiItem$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/getAbiItem.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/abi.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$toFunctionSelector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/hash/toFunctionSelector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$formatAbiItem$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/formatAbiItem.js [app-client] (ecmascript)");
;
;
;
;
const docsPath = '/docs/contract/encodeFunctionData';
function prepareEncodeFunctionData(parameters) {
    const { abi, args, functionName } = parameters;
    let abiItem = abi[0];
    if (functionName) {
        const item = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$getAbiItem$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAbiItem"])({
            abi,
            args,
            name: functionName
        });
        if (!item) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AbiFunctionNotFoundError"](functionName, {
            docsPath
        });
        abiItem = item;
    }
    if (abiItem.type !== 'function') throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AbiFunctionNotFoundError"](undefined, {
        docsPath
    });
    return {
        abi: [
            abiItem
        ],
        functionName: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$toFunctionSelector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toFunctionSelector"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$formatAbiItem$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatAbiItem"])(abiItem))
    };
} //# sourceMappingURL=prepareEncodeFunctionData.js.map
}}),
"[project]/node_modules/viem/_esm/utils/abi/encodeFunctionData.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "encodeFunctionData": (()=>encodeFunctionData)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$prepareEncodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/prepareEncodeFunctionData.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/concat.js [app-client] (ecmascript)");
;
;
;
function encodeFunctionData(parameters) {
    const { args } = parameters;
    const { abi, functionName } = (()=>{
        if (parameters.abi.length === 1 && parameters.functionName?.startsWith('0x')) return parameters;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$prepareEncodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["prepareEncodeFunctionData"])(parameters);
    })();
    const abiItem = abi[0];
    const signature = functionName;
    const data = 'inputs' in abiItem && abiItem.inputs ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(abiItem.inputs, args ?? []) : undefined;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concatHex"])([
        signature,
        data ?? '0x'
    ]);
} //# sourceMappingURL=encodeFunctionData.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/ownable-validator/abi.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "abi": (()=>abi)
});
const abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: 'smartAccount',
                type: 'address'
            }
        ],
        name: 'AlreadyInitialized',
        type: 'error'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'owner',
                type: 'address'
            }
        ],
        name: 'InvalidOwner',
        type: 'error'
    },
    {
        inputs: [],
        name: 'InvalidSignature',
        type: 'error'
    },
    {
        inputs: [],
        name: 'InvalidThreshold',
        type: 'error'
    },
    {
        inputs: [],
        name: 'LinkedList_AlreadyInitialized',
        type: 'error'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'entry',
                type: 'address'
            }
        ],
        name: 'LinkedList_EntryAlreadyInList',
        type: 'error'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'entry',
                type: 'address'
            }
        ],
        name: 'LinkedList_InvalidEntry',
        type: 'error'
    },
    {
        inputs: [],
        name: 'LinkedList_InvalidPage',
        type: 'error'
    },
    {
        inputs: [],
        name: 'MaxOwnersReached',
        type: 'error'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'smartAccount',
                type: 'address'
            }
        ],
        name: 'NotInitialized',
        type: 'error'
    },
    {
        inputs: [],
        name: 'NotSortedAndUnique',
        type: 'error'
    },
    {
        inputs: [],
        name: 'ThresholdNotSet',
        type: 'error'
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: 'contractSignature',
                type: 'bytes'
            }
        ],
        name: 'WrongContractSignature',
        type: 'error'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 's',
                type: 'uint256'
            },
            {
                internalType: 'uint256',
                name: 'contractSignatureLen',
                type: 'uint256'
            },
            {
                internalType: 'uint256',
                name: 'signaturesLen',
                type: 'uint256'
            }
        ],
        name: 'WrongContractSignatureFormat',
        type: 'error'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'owner',
                type: 'address'
            }
        ],
        name: 'addOwner',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'account',
                type: 'address'
            }
        ],
        name: 'getOwners',
        outputs: [
            {
                internalType: 'address[]',
                name: 'ownersArray',
                type: 'address[]'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'smartAccount',
                type: 'address'
            }
        ],
        name: 'isInitialized',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'typeID',
                type: 'uint256'
            }
        ],
        name: 'isModuleType',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool'
            }
        ],
        stateMutability: 'pure',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address'
            },
            {
                internalType: 'bytes32',
                name: 'hash',
                type: 'bytes32'
            },
            {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes'
            }
        ],
        name: 'isValidSignatureWithSender',
        outputs: [
            {
                internalType: 'bytes4',
                name: '',
                type: 'bytes4'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [],
        name: 'name',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string'
            }
        ],
        stateMutability: 'pure',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes'
            }
        ],
        name: 'onInstall',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'bytes',
                name: '',
                type: 'bytes'
            }
        ],
        name: 'onUninstall',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address'
            }
        ],
        name: 'ownerCount',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'prevOwner',
                type: 'address'
            },
            {
                internalType: 'address',
                name: 'owner',
                type: 'address'
            }
        ],
        name: 'removeOwner',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '_threshold',
                type: 'uint256'
            }
        ],
        name: 'setThreshold',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'account',
                type: 'address'
            }
        ],
        name: 'threshold',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: 'hash',
                type: 'bytes32'
            },
            {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes'
            },
            {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes'
            }
        ],
        name: 'validateSignatureWithData',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'sender',
                        type: 'address'
                    },
                    {
                        internalType: 'uint256',
                        name: 'nonce',
                        type: 'uint256'
                    },
                    {
                        internalType: 'bytes',
                        name: 'initCode',
                        type: 'bytes'
                    },
                    {
                        internalType: 'bytes',
                        name: 'callData',
                        type: 'bytes'
                    },
                    {
                        internalType: 'bytes32',
                        name: 'accountGasLimits',
                        type: 'bytes32'
                    },
                    {
                        internalType: 'uint256',
                        name: 'preVerificationGas',
                        type: 'uint256'
                    },
                    {
                        internalType: 'bytes32',
                        name: 'gasFees',
                        type: 'bytes32'
                    },
                    {
                        internalType: 'bytes',
                        name: 'paymasterAndData',
                        type: 'bytes'
                    },
                    {
                        internalType: 'bytes',
                        name: 'signature',
                        type: 'bytes'
                    }
                ],
                internalType: 'struct PackedUserOperation',
                name: 'userOp',
                type: 'tuple'
            },
            {
                internalType: 'bytes32',
                name: 'userOpHash',
                type: 'bytes32'
            }
        ],
        name: 'validateUserOp',
        outputs: [
            {
                internalType: 'ERC7579ValidatorBase.ValidationData',
                name: '',
                type: 'uint256'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [],
        name: 'version',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string'
            }
        ],
        stateMutability: 'pure',
        type: 'function'
    }
]; //# sourceMappingURL=abi.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/common/constants.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "INDEXER_URL": (()=>INDEXER_URL),
    "SENTINEL_ADDRESS": (()=>SENTINEL_ADDRESS)
});
const SENTINEL_ADDRESS = '0x0000000000000000000000000000000000000001';
const INDEXER_URL = 'https://indexer.bigdevenergy.link/c03b38d/v1/graphql'; //# sourceMappingURL=constants.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/ownable-validator/usage.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "encodeValidationData": (()=>encodeValidationData),
    "getAddOwnableValidatorOwnerAction": (()=>getAddOwnableValidatorOwnerAction),
    "getIsValidSignatureStateless": (()=>getIsValidSignatureStateless),
    "getOwnableValidatorMockSignature": (()=>getOwnableValidatorMockSignature),
    "getOwnableValidatorOwners": (()=>getOwnableValidatorOwners),
    "getOwnableValidatorSignature": (()=>getOwnableValidatorSignature),
    "getOwnableValidatorThreshold": (()=>getOwnableValidatorThreshold),
    "getRemoveOwnableValidatorOwnerAction": (()=>getRemoveOwnableValidatorOwnerAction),
    "getSetOwnableValidatorThresholdAction": (()=>getSetOwnableValidatorThresholdAction)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/encodeFunctionData.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/ownable-validator/abi.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/ownable-validator/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$getAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/address/getAddress.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$common$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/common/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodePacked$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/encodePacked.js [app-client] (ecmascript)");
;
;
;
;
const getSetOwnableValidatorThresholdAction = ({ threshold })=>{
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeFunctionData"])({
        functionName: 'setThreshold',
        abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
        args: [
            BigInt(threshold)
        ]
    });
    return {
        to: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OWNABLE_VALIDATOR_ADDRESS"],
        target: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OWNABLE_VALIDATOR_ADDRESS"],
        value: BigInt(0),
        callData: data,
        data
    };
};
const getAddOwnableValidatorOwnerAction = async ({ owner, client, account })=>{
    const owners = await getOwnableValidatorOwners({
        account,
        client
    });
    const currentOwnerIndex = owners.findIndex((o)=>o === owner);
    if (currentOwnerIndex !== -1) {
        throw new Error('Owner already exists');
    }
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeFunctionData"])({
        functionName: 'addOwner',
        abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
        args: [
            owner
        ]
    });
    return {
        to: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OWNABLE_VALIDATOR_ADDRESS"],
        target: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OWNABLE_VALIDATOR_ADDRESS"],
        value: BigInt(0),
        callData: data,
        data
    };
};
const getRemoveOwnableValidatorOwnerAction = async ({ client, account, owner })=>{
    const owners = await getOwnableValidatorOwners({
        account,
        client
    });
    let prevOwner;
    const currentOwnerIndex = owners.findIndex((o)=>o === owner);
    if (currentOwnerIndex === -1) {
        throw new Error('Owner not found');
    } else if (currentOwnerIndex === 0) {
        prevOwner = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$common$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SENTINEL_ADDRESS"];
    } else {
        prevOwner = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$getAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddress"])(owners[currentOwnerIndex - 1]);
    }
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeFunctionData"])({
        functionName: 'removeOwner',
        abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
        args: [
            prevOwner,
            owner
        ]
    });
    return {
        to: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OWNABLE_VALIDATOR_ADDRESS"],
        target: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OWNABLE_VALIDATOR_ADDRESS"],
        value: BigInt(0),
        callData: data,
        data
    };
};
const getOwnableValidatorOwners = async ({ account, client })=>{
    try {
        const owners = await client.readContract({
            address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OWNABLE_VALIDATOR_ADDRESS"],
            abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
            functionName: 'getOwners',
            args: [
                account.address
            ]
        });
        return owners;
    } catch (err) {
        console.error(err);
        return [];
    }
};
const getOwnableValidatorThreshold = async ({ account, client })=>{
    try {
        const threshold = await client.readContract({
            address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OWNABLE_VALIDATOR_ADDRESS"],
            abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
            functionName: 'threshold',
            args: [
                account.address
            ]
        });
        return Number(threshold);
    } catch  {
        throw new Error('Failed to get threshold');
    }
};
const getIsValidSignatureStateless = async ({ hash, signature, data, client })=>{
    try {
        return await client.readContract({
            address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OWNABLE_VALIDATOR_ADDRESS"],
            abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
            functionName: 'validateSignatureWithData',
            args: [
                hash,
                signature,
                data
            ]
        });
    } catch  {
        throw new Error('Failed to check signature');
    }
};
const encodeValidationData = ({ threshold, owners })=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])([
        {
            type: 'uint256'
        },
        {
            type: 'address[]'
        }
    ], [
        BigInt(threshold),
        owners.sort()
    ]);
};
const getOwnableValidatorSignature = ({ signatures })=>{
    let signature = signatures[0];
    for(let i = 1; i < signatures.length; i++){
        signature = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodePacked$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodePacked"])([
            'bytes',
            'bytes'
        ], [
            signature,
            signatures[i]
        ]);
    }
    return signature;
};
const getOwnableValidatorMockSignature = ({ threshold })=>{
    const mockSignature = '0xe8b94748580ca0b4993c9a1b86b5be851bfc076ff5ce3a1ff65bf16392acfcb800f9b4f1aef1555c7fce5599fffb17e7c635502154a0333ba21f3ae491839af51c';
    return getOwnableValidatorSignature({
        signatures: Array(threshold).fill(mockSignature)
    });
}; //# sourceMappingURL=usage.js.map
}}),
"[project]/node_modules/solady/js/solady.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
/**
 * Accompanying JavaScript library for Solady.
 *
 * To install:
 * 
 * ```
 * npm install solady
 * ```
 *
 * Module exports:
 * 
 * - `LibZip`
 *   - `flzCompress(data)`: Compresses hex encoded data with FastLZ.
 *   - `flzDecompress(data)`: Decompresses hex encoded data with FastLZ.
 *   - `cdCompress(data)`: Compresses hex encoded calldata.
 *   - `cdDecompress(data)`: Decompresses hex encoded calldata.
 *   
 * - `ERC1967Factory`
 *   - `address`: Canonical address of Solady's ERC1967Factory.
 *   - `abi`: ABI of Solady's ERC1967Factory.
 *
 * @module solady
 */ (function(global, factory) {
    "use strict";
    if (("TURBOPACK compile-time value", "object") === "object" && typeof module.exports === "object") {
        module.exports = factory(global, 1);
        if ("TURBOPACK compile-time truthy", 1) {
            exports.LibZip = module.exports.LibZip;
            exports.ERC1967Factory = module.exports.ERC1967Factory;
        }
    } else {
        factory(global);
    }
})(typeof window !== "undefined" ? window : this, function(window1, noGlobal) {
    "use strict";
    var solady = {};
    /*============================================================*/ /*                     LibZip Operations                      */ /*============================================================*/ // See: https://github.com/vectorized/solady/blob/main/src/utils/LibZip.sol
    /**
     * FastLZ and calldata compression / decompression functions.
     * @namespace
     * @alias module:solady.LibZip
     */ var LibZip = {};
    solady.LibZip = LibZip;
    function hexString(data) {
        if (typeof data === "string" || data instanceof String) {
            if (data = data.match(/^[\s\uFEFF\xA0]*(0[Xx])?([0-9A-Fa-f]*)[\s\uFEFF\xA0]*$/)) {
                if (data[2].length % 2) {
                    throw new Error("Hex string length must be a multiple of 2.");
                }
                return data[2];
            }
        }
        throw new Error("Data must be a hex string.");
    }
    function byteToString(b) {
        return (b | 0x100).toString(16).slice(1);
    }
    function parseByte(data, i) {
        return parseInt(data.substr(i, 2), 16);
    }
    function hexToBytes(data) {
        var a = [], i = 0;
        for(; i < data.length; i += 2)a.push(parseByte(data, i));
        return a;
    }
    function bytesToHex(a) {
        var o = "0x", i = 0;
        for(; i < a.length; o += byteToString(a[i++]));
        return o;
    }
    /**
     * Compresses hex encoded data with the FastLZ LZ77 algorithm.
     * @param {string} data A hex encoded string representing the original data.
     * @returns {string} The compressed result as a hex encoded string.
     */ LibZip.flzCompress = function(data) {
        var ib = hexToBytes(hexString(data)), b = ib.length - 4;
        var ht = [], ob = [], a = 0, i = 2, o = 0, j, s, h, d, c, l, r, p, q, e;
        function u24(i) {
            return ib[i] | ib[++i] << 8 | ib[++i] << 16;
        }
        function hash(x) {
            return 2654435769 * x >> 19 & 8191;
        }
        function literals(r, s) {
            while(r >= 32)for(ob[o++] = 31, j = 32; j--; r--)ob[o++] = ib[s++];
            if (r) for(ob[o++] = r - 1; r--;)ob[o++] = ib[s++];
        }
        while(i < b - 9){
            do {
                r = ht[h = hash(s = u24(i))] || 0;
                c = (d = (ht[h] = i) - r) < 8192 ? u24(r) : 0x1000000;
            }while (i < b - 9 && i++ && s != c)
            if (i >= b - 9) break;
            if (--i > a) literals(i - a, a);
            for(l = 0, p = r + 3, q = i + 3, e = b - q; l < e; l++)e *= ib[p + l] === ib[q + l];
            i += l;
            for(--d; l > 262; l -= 262)ob[o++] = 224 + (d >> 8), ob[o++] = 253, ob[o++] = d & 255;
            if (l < 7) ob[o++] = (l << 5) + (d >> 8), ob[o++] = d & 255;
            else ob[o++] = 224 + (d >> 8), ob[o++] = l - 7, ob[o++] = d & 255;
            ht[hash(u24(i))] = i++, ht[hash(u24(i))] = i++, a = i;
        }
        literals(b + 4 - a, a);
        return bytesToHex(ob);
    };
    /**
     * Decompresses hex encoded data with the FastLZ LZ77 algorithm.
     * @param {string} data A hex encoded string representing the compressed data.
     * @returns {string} The decompressed result as a hex encoded string.
     */ LibZip.flzDecompress = function(data) {
        var ib = hexToBytes(hexString(data)), i = 0, o = 0, l, f, t, r, h, ob = [];
        while(i < ib.length){
            if (!(t = ib[i] >> 5)) {
                for(l = 1 + ib[i++]; l--;)ob[o++] = ib[i++];
            } else {
                f = 256 * (ib[i] & 31) + ib[i + 2 - (t = t < 7)];
                l = t ? 2 + (ib[i] >> 5) : 9 + ib[i + 1];
                i = i + 3 - t;
                r = o - f - 1;
                while(l--)ob[o++] = ob[r++];
            }
        }
        return bytesToHex(ob);
    };
    /**
     * Compresses hex encoded calldata.
     * @param {string} data A hex encoded string representing the original data.
     * @returns {string} The compressed result as a hex encoded string.
     */ LibZip.cdCompress = function(data) {
        data = hexString(data);
        var o = "0x", z = 0, y = 0, i = 0, c;
        function pushByte(b) {
            o += byteToString((o.length < 4 * 2 + 2) * 0xff ^ b);
        }
        function rle(v, d) {
            pushByte(0x00);
            pushByte(d - 1 + v * 0x80);
        }
        for(; i < data.length; i += 2){
            c = parseByte(data, i);
            if (!c) {
                if (y) rle(1, y), y = 0;
                if (++z === 0x80) rle(0, 0x80), z = 0;
                continue;
            }
            if (c === 0xff) {
                if (z) rle(0, z), z = 0;
                if (++y === 0x20) rle(1, 0x20), y = 0;
                continue;
            }
            if (y) rle(1, y), y = 0;
            if (z) rle(0, z), z = 0;
            pushByte(c);
        }
        if (y) rle(1, y), y = 0;
        if (z) rle(0, z), z = 0;
        return o;
    };
    /**
     * Decompresses hex encoded calldata.
     * @param {string} data A hex encoded string representing the compressed data.
     * @returns {string} The decompressed result as a hex encoded string.
     */ LibZip.cdDecompress = function(data) {
        data = hexString(data);
        var o = "0x", i = 0, j, c, s;
        while(i < data.length){
            c = (i < 4 * 2) * 0xff ^ parseByte(data, i);
            i += 2;
            if (!c) {
                c = (i < 4 * 2) * 0xff ^ parseByte(data, i);
                s = (c & 0x7f) + 1;
                i += 2;
                for(j = 0; j < s; ++j)o += byteToString((c >> 7 && j < 32) * 0xff);
                continue;
            }
            o += byteToString(c);
        }
        return o;
    };
    /*============================================================*/ /*                       ERC1967Factory                       */ /*============================================================*/ // See: https://github.com/vectorized/solady/blob/main/src/utils/ERC1967Factory.sol
    /**
     * ERC1967Factory canonical address and ABI.
     * @namespace
     * @alias module:solady.ERC1967Factory
     */ var ERC1967Factory = {};
    solady.ERC1967Factory = ERC1967Factory;
    /**
     * Canonical address of Solady's ERC1967Factory.
     * @type {string}
     */ ERC1967Factory.address = "0x0000000000006396FF2a80c067f99B3d2Ab4Df24";
    /**
     * ABI of Solady's ERC1967Factory.
     * @type {Object}
     */ ERC1967Factory.abi = JSON.parse('[{0:[],1:"DeploymentFailed"96"SaltDoesNotStartWithCaller"96"Unauthorized"96"UpgradeFailed",2:3959790,9791],1:"AdminChanged",2:10959790,9792,9791],1:"Deployed",2:10959790,9792],1:"Upgraded",2:10},{0:[{90],1:"adminOf",12:[{9199{0:[{90,{91],1:"changeAdmin",12:[],13:"nonpayable",2:15},{0:[{92,{91],1:"deploy",12:[{9098,{0:[{92,{91,{94],1:"deployAndCall",12:[{9098,{0:[{92,{91,{93],1:"deployDeterministic",12:[{9098,{0:[{92,{91,{93,{94],1:"deployDeterministicAndCall",12:[{9098,{0:[],1:"initCodeHash",12:[{6:19,1:"result",2:19}99{0:[{93],1:"predictDeterministicAddress",12:[{6:7,1:"predicted",2:7}99{0:[{90,{92],1:"upgrade",12:[98,{0:[{90,{92,{94],1:"upgradeAndCall",12:[98]'.replace(/9\d/g, function(m) {
        return [
            "6:7,1:8,2:7}",
            "6:7,1:9,2:7}",
            "6:7,1:11,2:7}",
            "6:19,1:20,2:19}",
            "6:17,1:18,2:17}",
            "},{4:false,0:[",
            ",2:3},{0:[],1:",
            "{5:true,",
            "],13:16,2:15}",
            "],13:14,2:15},"
        ][m - 90];
    }).replace(/\d+/g, function(m) {
        return '"' + "inputs,name,type,error,anonymous,indexed,internalType,address,proxy,admin,event,implementation,outputs,stateMutability,view,function,payable,bytes,data,bytes32,salt".split(",")[m] + '"';
    }));
    /*--------------------------- END ----------------------------*/ if (typeof define === "function" && define.amd) {
        ((r)=>r !== undefined && __turbopack_export_value__(r))(function() {
            return solady;
        }());
    }
    if (!noGlobal) {
        window1.solady = solady;
    }
    return solady;
});
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/constants.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SMART_SESSIONS_ADDRESS": (()=>SMART_SESSIONS_ADDRESS),
    "SMART_SESSIONS_COMPATIBILITY_FALLBACK_ADDRESS": (()=>SMART_SESSIONS_COMPATIBILITY_FALLBACK_ADDRESS)
});
const SMART_SESSIONS_ADDRESS = '0x00000000002B0eCfbD0496EE71e01257dA0E37DE';
const SMART_SESSIONS_COMPATIBILITY_FALLBACK_ADDRESS = '0xBad7E91C4F2803978cd6c7C3Fe80B5Fd7f7B0b50'; //# sourceMappingURL=constants.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/abi.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "abi": (()=>abi),
    "enableSessionAbi": (()=>enableSessionAbi),
    "encodeEnableSessionSignatureAbi": (()=>encodeEnableSessionSignatureAbi),
    "installSmartSessionsAbi": (()=>installSmartSessionsAbi)
});
const installSmartSessionsAbi = [
    {
        components: [
            {
                internalType: 'contract ISessionValidator',
                name: 'sessionValidator',
                type: 'address'
            },
            {
                internalType: 'bytes',
                name: 'sessionValidatorInitData',
                type: 'bytes'
            },
            {
                internalType: 'bytes32',
                name: 'salt',
                type: 'bytes32'
            },
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'policy',
                        type: 'address'
                    },
                    {
                        internalType: 'bytes',
                        name: 'initData',
                        type: 'bytes'
                    }
                ],
                internalType: 'struct PolicyData[]',
                name: 'userOpPolicies',
                type: 'tuple[]'
            },
            {
                components: [
                    {
                        components: [
                            {
                                internalType: 'bytes32',
                                name: 'appDomainSeparator',
                                type: 'bytes32'
                            },
                            {
                                internalType: 'string[]',
                                name: 'contentName',
                                type: 'string[]'
                            }
                        ],
                        internalType: 'struct ERC7739Context[]',
                        name: 'allowedERC7739Content',
                        type: 'tuple[]'
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'policy',
                                type: 'address'
                            },
                            {
                                internalType: 'bytes',
                                name: 'initData',
                                type: 'bytes'
                            }
                        ],
                        internalType: 'struct PolicyData[]',
                        name: 'erc1271Policies',
                        type: 'tuple[]'
                    }
                ],
                internalType: 'struct ERC7739Data',
                name: 'erc7739Policies',
                type: 'tuple'
            },
            {
                components: [
                    {
                        internalType: 'bytes4',
                        name: 'actionTargetSelector',
                        type: 'bytes4'
                    },
                    {
                        internalType: 'address',
                        name: 'actionTarget',
                        type: 'address'
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'policy',
                                type: 'address'
                            },
                            {
                                internalType: 'bytes',
                                name: 'initData',
                                type: 'bytes'
                            }
                        ],
                        internalType: 'struct PolicyData[]',
                        name: 'actionPolicies',
                        type: 'tuple[]'
                    }
                ],
                internalType: 'struct ActionData[]',
                name: 'actions',
                type: 'tuple[]'
            },
            {
                internalType: 'bool',
                name: 'permitERC4337Paymaster',
                type: 'bool'
            }
        ],
        internalType: 'struct Session[]',
        name: 'sessions',
        type: 'tuple[]'
    }
];
const enableSessionAbi = {
    components: [
        {
            type: 'uint8',
            name: 'chainDigestIndex'
        },
        {
            type: 'tuple[]',
            components: [
                {
                    internalType: 'uint64',
                    name: 'chainId',
                    type: 'uint64'
                },
                {
                    internalType: 'bytes32',
                    name: 'sessionDigest',
                    type: 'bytes32'
                }
            ],
            name: 'hashesAndChainIds'
        },
        {
            components: [
                {
                    internalType: 'contract ISessionValidator',
                    name: 'sessionValidator',
                    type: 'address'
                },
                {
                    internalType: 'bytes',
                    name: 'sessionValidatorInitData',
                    type: 'bytes'
                },
                {
                    internalType: 'bytes32',
                    name: 'salt',
                    type: 'bytes32'
                },
                {
                    components: [
                        {
                            internalType: 'address',
                            name: 'policy',
                            type: 'address'
                        },
                        {
                            internalType: 'bytes',
                            name: 'initData',
                            type: 'bytes'
                        }
                    ],
                    internalType: 'struct PolicyData[]',
                    name: 'userOpPolicies',
                    type: 'tuple[]'
                },
                {
                    components: [
                        {
                            components: [
                                {
                                    internalType: 'bytes32',
                                    name: 'appDomainSeparator',
                                    type: 'bytes32'
                                },
                                {
                                    internalType: 'string[]',
                                    name: 'contentName',
                                    type: 'string[]'
                                }
                            ],
                            internalType: 'struct ERC7739Context[]',
                            name: 'allowedERC7739Content',
                            type: 'tuple[]'
                        },
                        {
                            components: [
                                {
                                    internalType: 'address',
                                    name: 'policy',
                                    type: 'address'
                                },
                                {
                                    internalType: 'bytes',
                                    name: 'initData',
                                    type: 'bytes'
                                }
                            ],
                            internalType: 'struct PolicyData[]',
                            name: 'erc1271Policies',
                            type: 'tuple[]'
                        }
                    ],
                    internalType: 'struct ERC7739Data',
                    name: 'erc7739Policies',
                    type: 'tuple'
                },
                {
                    components: [
                        {
                            internalType: 'bytes4',
                            name: 'actionTargetSelector',
                            type: 'bytes4'
                        },
                        {
                            internalType: 'address',
                            name: 'actionTarget',
                            type: 'address'
                        },
                        {
                            components: [
                                {
                                    internalType: 'address',
                                    name: 'policy',
                                    type: 'address'
                                },
                                {
                                    internalType: 'bytes',
                                    name: 'initData',
                                    type: 'bytes'
                                }
                            ],
                            internalType: 'struct PolicyData[]',
                            name: 'actionPolicies',
                            type: 'tuple[]'
                        }
                    ],
                    internalType: 'struct ActionData[]',
                    name: 'actions',
                    type: 'tuple[]'
                },
                {
                    internalType: 'bool',
                    name: 'permitERC4337Paymaster',
                    type: 'bool'
                }
            ],
            internalType: 'struct Session',
            name: 'sessionToEnable',
            type: 'tuple'
        },
        {
            type: 'bytes',
            name: 'permissionEnableSig'
        }
    ],
    internalType: 'struct EnableSession',
    name: 'enableSession',
    type: 'tuple'
};
const encodeEnableSessionSignatureAbi = [
    enableSessionAbi,
    {
        type: 'bytes'
    }
];
const abi = [
    {
        type: 'function',
        name: 'areActionsEnabled',
        inputs: [
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'actions',
                type: 'tuple[]',
                internalType: 'struct ActionData[]',
                components: [
                    {
                        name: 'actionTargetSelector',
                        type: 'bytes4',
                        internalType: 'bytes4'
                    },
                    {
                        name: 'actionTarget',
                        type: 'address',
                        internalType: 'address'
                    },
                    {
                        name: 'actionPolicies',
                        type: 'tuple[]',
                        internalType: 'struct PolicyData[]',
                        components: [
                            {
                                name: 'policy',
                                type: 'address',
                                internalType: 'address'
                            },
                            {
                                name: 'initData',
                                type: 'bytes',
                                internalType: 'bytes'
                            }
                        ]
                    }
                ]
            }
        ],
        outputs: [
            {
                name: '',
                type: 'bool',
                internalType: 'bool'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'areERC1271PoliciesEnabled',
        inputs: [
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'erc1271Policies',
                type: 'tuple[]',
                internalType: 'struct PolicyData[]',
                components: [
                    {
                        name: 'policy',
                        type: 'address',
                        internalType: 'address'
                    },
                    {
                        name: 'initData',
                        type: 'bytes',
                        internalType: 'bytes'
                    }
                ]
            }
        ],
        outputs: [
            {
                name: '',
                type: 'bool',
                internalType: 'bool'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'areUserOpPoliciesEnabled',
        inputs: [
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'userOpPolicies',
                type: 'tuple[]',
                internalType: 'struct PolicyData[]',
                components: [
                    {
                        name: 'policy',
                        type: 'address',
                        internalType: 'address'
                    },
                    {
                        name: 'initData',
                        type: 'bytes',
                        internalType: 'bytes'
                    }
                ]
            }
        ],
        outputs: [
            {
                name: '',
                type: 'bool',
                internalType: 'bool'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'disableActionId',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'actionId',
                type: 'bytes32',
                internalType: 'ActionId'
            }
        ],
        outputs: [],
        stateMutability: 'nonpayable'
    },
    {
        type: 'function',
        name: 'disableActionPolicies',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'actionId',
                type: 'bytes32',
                internalType: 'ActionId'
            },
            {
                name: 'policies',
                type: 'address[]',
                internalType: 'address[]'
            }
        ],
        outputs: [],
        stateMutability: 'nonpayable'
    },
    {
        type: 'function',
        name: 'disableERC1271Policies',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'policies',
                type: 'address[]',
                internalType: 'address[]'
            },
            {
                name: 'contexts',
                type: 'tuple[]',
                internalType: 'struct ERC7739Context[]',
                components: [
                    {
                        name: 'appDomainSeparator',
                        type: 'bytes32',
                        internalType: 'bytes32'
                    },
                    {
                        name: 'contentName',
                        type: 'string[]',
                        internalType: 'string[]'
                    }
                ]
            }
        ],
        outputs: [],
        stateMutability: 'nonpayable'
    },
    {
        type: 'function',
        name: 'disableUserOpPolicies',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'policies',
                type: 'address[]',
                internalType: 'address[]'
            }
        ],
        outputs: [],
        stateMutability: 'nonpayable'
    },
    {
        type: 'function',
        name: 'enableActionPolicies',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'actionPolicies',
                type: 'tuple[]',
                internalType: 'struct ActionData[]',
                components: [
                    {
                        name: 'actionTargetSelector',
                        type: 'bytes4',
                        internalType: 'bytes4'
                    },
                    {
                        name: 'actionTarget',
                        type: 'address',
                        internalType: 'address'
                    },
                    {
                        name: 'actionPolicies',
                        type: 'tuple[]',
                        internalType: 'struct PolicyData[]',
                        components: [
                            {
                                name: 'policy',
                                type: 'address',
                                internalType: 'address'
                            },
                            {
                                name: 'initData',
                                type: 'bytes',
                                internalType: 'bytes'
                            }
                        ]
                    }
                ]
            }
        ],
        outputs: [],
        stateMutability: 'nonpayable'
    },
    {
        type: 'function',
        name: 'enableERC1271Policies',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'erc1271Policies',
                type: 'tuple',
                internalType: 'struct ERC7739Data',
                components: [
                    {
                        name: 'allowedERC7739Content',
                        type: 'tuple[]',
                        internalType: 'struct ERC7739Context[]',
                        components: [
                            {
                                name: 'appDomainSeparator',
                                type: 'bytes32',
                                internalType: 'bytes32'
                            },
                            {
                                name: 'contentName',
                                type: 'string[]',
                                internalType: 'string[]'
                            }
                        ]
                    },
                    {
                        name: 'erc1271Policies',
                        type: 'tuple[]',
                        internalType: 'struct PolicyData[]',
                        components: [
                            {
                                name: 'policy',
                                type: 'address',
                                internalType: 'address'
                            },
                            {
                                name: 'initData',
                                type: 'bytes',
                                internalType: 'bytes'
                            }
                        ]
                    }
                ]
            }
        ],
        outputs: [],
        stateMutability: 'nonpayable'
    },
    {
        type: 'function',
        name: 'enableSessions',
        inputs: [
            {
                name: 'sessions',
                type: 'tuple[]',
                internalType: 'struct Session[]',
                components: [
                    {
                        name: 'sessionValidator',
                        type: 'address',
                        internalType: 'contract ISessionValidator'
                    },
                    {
                        name: 'sessionValidatorInitData',
                        type: 'bytes',
                        internalType: 'bytes'
                    },
                    {
                        name: 'salt',
                        type: 'bytes32',
                        internalType: 'bytes32'
                    },
                    {
                        name: 'userOpPolicies',
                        type: 'tuple[]',
                        internalType: 'struct PolicyData[]',
                        components: [
                            {
                                name: 'policy',
                                type: 'address',
                                internalType: 'address'
                            },
                            {
                                name: 'initData',
                                type: 'bytes',
                                internalType: 'bytes'
                            }
                        ]
                    },
                    {
                        name: 'erc7739Policies',
                        type: 'tuple',
                        internalType: 'struct ERC7739Data',
                        components: [
                            {
                                name: 'allowedERC7739Content',
                                type: 'tuple[]',
                                internalType: 'struct ERC7739Context[]',
                                components: [
                                    {
                                        name: 'appDomainSeparator',
                                        type: 'bytes32',
                                        internalType: 'bytes32'
                                    },
                                    {
                                        name: 'contentName',
                                        type: 'string[]',
                                        internalType: 'string[]'
                                    }
                                ]
                            },
                            {
                                name: 'erc1271Policies',
                                type: 'tuple[]',
                                internalType: 'struct PolicyData[]',
                                components: [
                                    {
                                        name: 'policy',
                                        type: 'address',
                                        internalType: 'address'
                                    },
                                    {
                                        name: 'initData',
                                        type: 'bytes',
                                        internalType: 'bytes'
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        name: 'actions',
                        type: 'tuple[]',
                        internalType: 'struct ActionData[]',
                        components: [
                            {
                                name: 'actionTargetSelector',
                                type: 'bytes4',
                                internalType: 'bytes4'
                            },
                            {
                                name: 'actionTarget',
                                type: 'address',
                                internalType: 'address'
                            },
                            {
                                name: 'actionPolicies',
                                type: 'tuple[]',
                                internalType: 'struct PolicyData[]',
                                components: [
                                    {
                                        name: 'policy',
                                        type: 'address',
                                        internalType: 'address'
                                    },
                                    {
                                        name: 'initData',
                                        type: 'bytes',
                                        internalType: 'bytes'
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        name: 'permitERC4337Paymaster',
                        type: 'bool',
                        internalType: 'bool'
                    }
                ]
            }
        ],
        outputs: [
            {
                name: 'permissionIds',
                type: 'bytes32[]',
                internalType: 'PermissionId[]'
            }
        ],
        stateMutability: 'nonpayable'
    },
    {
        type: 'function',
        name: 'enableUserOpPolicies',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'userOpPolicies',
                type: 'tuple[]',
                internalType: 'struct PolicyData[]',
                components: [
                    {
                        name: 'policy',
                        type: 'address',
                        internalType: 'address'
                    },
                    {
                        name: 'initData',
                        type: 'bytes',
                        internalType: 'bytes'
                    }
                ]
            }
        ],
        outputs: [],
        stateMutability: 'nonpayable'
    },
    {
        type: 'function',
        name: 'getActionPolicies',
        inputs: [
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'actionId',
                type: 'bytes32',
                internalType: 'ActionId'
            }
        ],
        outputs: [
            {
                name: '',
                type: 'address[]',
                internalType: 'address[]'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'getERC1271Policies',
        inputs: [
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            }
        ],
        outputs: [
            {
                name: '',
                type: 'address[]',
                internalType: 'address[]'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'getEnabledActions',
        inputs: [
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            }
        ],
        outputs: [
            {
                name: '',
                type: 'bytes32[]',
                internalType: 'bytes32[]'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'getEnabledERC7739Content',
        inputs: [
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            }
        ],
        outputs: [
            {
                name: 'enabledERC7739ContentHashes',
                type: 'tuple[]',
                internalType: 'struct ERC7739ContextHashes[]',
                components: [
                    {
                        name: 'appDomainSeparator',
                        type: 'bytes32',
                        internalType: 'bytes32'
                    },
                    {
                        name: 'contentNameHashes',
                        type: 'bytes32[]',
                        internalType: 'bytes32[]'
                    }
                ]
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'getNonce',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            }
        ],
        outputs: [
            {
                name: '',
                type: 'uint256',
                internalType: 'uint256'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'getPermissionIDs',
        inputs: [
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            }
        ],
        outputs: [
            {
                name: 'permissionIds',
                type: 'bytes32[]',
                internalType: 'PermissionId[]'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'getPermissionId',
        inputs: [
            {
                name: 'session',
                type: 'tuple',
                internalType: 'struct Session',
                components: [
                    {
                        name: 'sessionValidator',
                        type: 'address',
                        internalType: 'contract ISessionValidator'
                    },
                    {
                        name: 'sessionValidatorInitData',
                        type: 'bytes',
                        internalType: 'bytes'
                    },
                    {
                        name: 'salt',
                        type: 'bytes32',
                        internalType: 'bytes32'
                    },
                    {
                        name: 'userOpPolicies',
                        type: 'tuple[]',
                        internalType: 'struct PolicyData[]',
                        components: [
                            {
                                name: 'policy',
                                type: 'address',
                                internalType: 'address'
                            },
                            {
                                name: 'initData',
                                type: 'bytes',
                                internalType: 'bytes'
                            }
                        ]
                    },
                    {
                        name: 'erc7739Policies',
                        type: 'tuple',
                        internalType: 'struct ERC7739Data',
                        components: [
                            {
                                name: 'allowedERC7739Content',
                                type: 'tuple[]',
                                internalType: 'struct ERC7739Context[]',
                                components: [
                                    {
                                        name: 'appDomainSeparator',
                                        type: 'bytes32',
                                        internalType: 'bytes32'
                                    },
                                    {
                                        name: 'contentName',
                                        type: 'string[]',
                                        internalType: 'string[]'
                                    }
                                ]
                            },
                            {
                                name: 'erc1271Policies',
                                type: 'tuple[]',
                                internalType: 'struct PolicyData[]',
                                components: [
                                    {
                                        name: 'policy',
                                        type: 'address',
                                        internalType: 'address'
                                    },
                                    {
                                        name: 'initData',
                                        type: 'bytes',
                                        internalType: 'bytes'
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        name: 'actions',
                        type: 'tuple[]',
                        internalType: 'struct ActionData[]',
                        components: [
                            {
                                name: 'actionTargetSelector',
                                type: 'bytes4',
                                internalType: 'bytes4'
                            },
                            {
                                name: 'actionTarget',
                                type: 'address',
                                internalType: 'address'
                            },
                            {
                                name: 'actionPolicies',
                                type: 'tuple[]',
                                internalType: 'struct PolicyData[]',
                                components: [
                                    {
                                        name: 'policy',
                                        type: 'address',
                                        internalType: 'address'
                                    },
                                    {
                                        name: 'initData',
                                        type: 'bytes',
                                        internalType: 'bytes'
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        name: 'permitERC4337Paymaster',
                        type: 'bool',
                        internalType: 'bool'
                    }
                ]
            }
        ],
        outputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            }
        ],
        stateMutability: 'pure'
    },
    {
        type: 'function',
        name: 'getSessionDigest',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'data',
                type: 'tuple',
                internalType: 'struct Session',
                components: [
                    {
                        name: 'sessionValidator',
                        type: 'address',
                        internalType: 'contract ISessionValidator'
                    },
                    {
                        name: 'sessionValidatorInitData',
                        type: 'bytes',
                        internalType: 'bytes'
                    },
                    {
                        name: 'salt',
                        type: 'bytes32',
                        internalType: 'bytes32'
                    },
                    {
                        name: 'userOpPolicies',
                        type: 'tuple[]',
                        internalType: 'struct PolicyData[]',
                        components: [
                            {
                                name: 'policy',
                                type: 'address',
                                internalType: 'address'
                            },
                            {
                                name: 'initData',
                                type: 'bytes',
                                internalType: 'bytes'
                            }
                        ]
                    },
                    {
                        name: 'erc7739Policies',
                        type: 'tuple',
                        internalType: 'struct ERC7739Data',
                        components: [
                            {
                                name: 'allowedERC7739Content',
                                type: 'tuple[]',
                                internalType: 'struct ERC7739Context[]',
                                components: [
                                    {
                                        name: 'appDomainSeparator',
                                        type: 'bytes32',
                                        internalType: 'bytes32'
                                    },
                                    {
                                        name: 'contentName',
                                        type: 'string[]',
                                        internalType: 'string[]'
                                    }
                                ]
                            },
                            {
                                name: 'erc1271Policies',
                                type: 'tuple[]',
                                internalType: 'struct PolicyData[]',
                                components: [
                                    {
                                        name: 'policy',
                                        type: 'address',
                                        internalType: 'address'
                                    },
                                    {
                                        name: 'initData',
                                        type: 'bytes',
                                        internalType: 'bytes'
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        name: 'actions',
                        type: 'tuple[]',
                        internalType: 'struct ActionData[]',
                        components: [
                            {
                                name: 'actionTargetSelector',
                                type: 'bytes4',
                                internalType: 'bytes4'
                            },
                            {
                                name: 'actionTarget',
                                type: 'address',
                                internalType: 'address'
                            },
                            {
                                name: 'actionPolicies',
                                type: 'tuple[]',
                                internalType: 'struct PolicyData[]',
                                components: [
                                    {
                                        name: 'policy',
                                        type: 'address',
                                        internalType: 'address'
                                    },
                                    {
                                        name: 'initData',
                                        type: 'bytes',
                                        internalType: 'bytes'
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        name: 'permitERC4337Paymaster',
                        type: 'bool',
                        internalType: 'bool'
                    }
                ]
            },
            {
                name: 'mode',
                type: 'uint8',
                internalType: 'enum SmartSessionMode'
            }
        ],
        outputs: [
            {
                name: '',
                type: 'bytes32',
                internalType: 'bytes32'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'getSessionValidatorAndConfig',
        inputs: [
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            }
        ],
        outputs: [
            {
                name: 'sessionValidator',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'sessionValidatorData',
                type: 'bytes',
                internalType: 'bytes'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'getUserOpPolicies',
        inputs: [
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            }
        ],
        outputs: [
            {
                name: '',
                type: 'address[]',
                internalType: 'address[]'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'isActionIdEnabled',
        inputs: [
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'actionId',
                type: 'bytes32',
                internalType: 'ActionId'
            }
        ],
        outputs: [
            {
                name: '',
                type: 'bool',
                internalType: 'bool'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'isActionPolicyEnabled',
        inputs: [
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'actionId',
                type: 'bytes32',
                internalType: 'ActionId'
            },
            {
                name: 'policy',
                type: 'address',
                internalType: 'address'
            }
        ],
        outputs: [
            {
                name: '',
                type: 'bool',
                internalType: 'bool'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'isERC1271PolicyEnabled',
        inputs: [
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'policy',
                type: 'address',
                internalType: 'address'
            }
        ],
        outputs: [
            {
                name: '',
                type: 'bool',
                internalType: 'bool'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'isERC7739ContentEnabled',
        inputs: [
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'appDomainSeparator',
                type: 'bytes32',
                internalType: 'bytes32'
            },
            {
                name: 'content',
                type: 'string',
                internalType: 'string'
            }
        ],
        outputs: [
            {
                name: '',
                type: 'bool',
                internalType: 'bool'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'isISessionValidatorSet',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            }
        ],
        outputs: [
            {
                name: '',
                type: 'bool',
                internalType: 'bool'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'isInitialized',
        inputs: [
            {
                name: 'smartAccount',
                type: 'address',
                internalType: 'address'
            }
        ],
        outputs: [
            {
                name: '',
                type: 'bool',
                internalType: 'bool'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'isModuleType',
        inputs: [
            {
                name: 'typeID',
                type: 'uint256',
                internalType: 'uint256'
            }
        ],
        outputs: [
            {
                name: '',
                type: 'bool',
                internalType: 'bool'
            }
        ],
        stateMutability: 'pure'
    },
    {
        type: 'function',
        name: 'isPermissionEnabled',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            }
        ],
        outputs: [
            {
                name: '',
                type: 'bool',
                internalType: 'bool'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'isUserOpPolicyEnabled',
        inputs: [
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'policy',
                type: 'address',
                internalType: 'address'
            }
        ],
        outputs: [
            {
                name: '',
                type: 'bool',
                internalType: 'bool'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'isValidSignatureWithSender',
        inputs: [
            {
                name: 'sender',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'hash',
                type: 'bytes32',
                internalType: 'bytes32'
            },
            {
                name: 'signature',
                type: 'bytes',
                internalType: 'bytes'
            }
        ],
        outputs: [
            {
                name: 'result',
                type: 'bytes4',
                internalType: 'bytes4'
            }
        ],
        stateMutability: 'view'
    },
    {
        type: 'function',
        name: 'onInstall',
        inputs: [
            {
                name: 'data',
                type: 'bytes',
                internalType: 'bytes'
            }
        ],
        outputs: [],
        stateMutability: 'nonpayable'
    },
    {
        type: 'function',
        name: 'onUninstall',
        inputs: [
            {
                name: '',
                type: 'bytes',
                internalType: 'bytes'
            }
        ],
        outputs: [],
        stateMutability: 'nonpayable'
    },
    {
        type: 'function',
        name: 'removeSession',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            }
        ],
        outputs: [],
        stateMutability: 'nonpayable'
    },
    {
        type: 'function',
        name: 'revokeEnableSignature',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            }
        ],
        outputs: [],
        stateMutability: 'nonpayable'
    },
    {
        type: 'function',
        name: 'setpermitERC4337Paymaster',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'enabled',
                type: 'bool',
                internalType: 'bool'
            }
        ],
        outputs: [],
        stateMutability: 'nonpayable'
    },
    {
        type: 'function',
        name: 'validateUserOp',
        inputs: [
            {
                name: 'userOp',
                type: 'tuple',
                internalType: 'struct PackedUserOperation',
                components: [
                    {
                        name: 'sender',
                        type: 'address',
                        internalType: 'address'
                    },
                    {
                        name: 'nonce',
                        type: 'uint256',
                        internalType: 'uint256'
                    },
                    {
                        name: 'initCode',
                        type: 'bytes',
                        internalType: 'bytes'
                    },
                    {
                        name: 'callData',
                        type: 'bytes',
                        internalType: 'bytes'
                    },
                    {
                        name: 'accountGasLimits',
                        type: 'bytes32',
                        internalType: 'bytes32'
                    },
                    {
                        name: 'preVerificationGas',
                        type: 'uint256',
                        internalType: 'uint256'
                    },
                    {
                        name: 'gasFees',
                        type: 'bytes32',
                        internalType: 'bytes32'
                    },
                    {
                        name: 'paymasterAndData',
                        type: 'bytes',
                        internalType: 'bytes'
                    },
                    {
                        name: 'signature',
                        type: 'bytes',
                        internalType: 'bytes'
                    }
                ]
            },
            {
                name: 'userOpHash',
                type: 'bytes32',
                internalType: 'bytes32'
            }
        ],
        outputs: [
            {
                name: 'vd',
                type: 'uint256',
                internalType: 'ValidationData'
            }
        ],
        stateMutability: 'nonpayable'
    },
    {
        type: 'event',
        name: 'ActionIdDisabled',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                indexed: false,
                internalType: 'PermissionId'
            },
            {
                name: 'actionId',
                type: 'bytes32',
                indexed: false,
                internalType: 'ActionId'
            },
            {
                name: 'smartAccount',
                type: 'address',
                indexed: false,
                internalType: 'address'
            }
        ],
        anonymous: false
    },
    {
        type: 'event',
        name: 'NonceIterated',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                indexed: false,
                internalType: 'PermissionId'
            },
            {
                name: 'account',
                type: 'address',
                indexed: false,
                internalType: 'address'
            },
            {
                name: 'newValue',
                type: 'uint256',
                indexed: false,
                internalType: 'uint256'
            }
        ],
        anonymous: false
    },
    {
        type: 'event',
        name: 'PermissionIdpermitERC4337Paymaster',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                indexed: false,
                internalType: 'PermissionId'
            },
            {
                name: 'smartAccount',
                type: 'address',
                indexed: false,
                internalType: 'address'
            },
            {
                name: 'enabled',
                type: 'bool',
                indexed: false,
                internalType: 'bool'
            }
        ],
        anonymous: false
    },
    {
        type: 'event',
        name: 'PolicyDisabled',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                indexed: false,
                internalType: 'PermissionId'
            },
            {
                name: 'policyType',
                type: 'uint8',
                indexed: false,
                internalType: 'enum PolicyType'
            },
            {
                name: 'policy',
                type: 'address',
                indexed: false,
                internalType: 'address'
            },
            {
                name: 'smartAccount',
                type: 'address',
                indexed: false,
                internalType: 'address'
            }
        ],
        anonymous: false
    },
    {
        type: 'event',
        name: 'PolicyEnabled',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                indexed: false,
                internalType: 'PermissionId'
            },
            {
                name: 'policyType',
                type: 'uint8',
                indexed: false,
                internalType: 'enum PolicyType'
            },
            {
                name: 'policy',
                type: 'address',
                indexed: false,
                internalType: 'address'
            },
            {
                name: 'smartAccount',
                type: 'address',
                indexed: false,
                internalType: 'address'
            }
        ],
        anonymous: false
    },
    {
        type: 'event',
        name: 'SessionCreated',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                indexed: false,
                internalType: 'PermissionId'
            },
            {
                name: 'account',
                type: 'address',
                indexed: false,
                internalType: 'address'
            }
        ],
        anonymous: false
    },
    {
        type: 'event',
        name: 'SessionRemoved',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                indexed: false,
                internalType: 'PermissionId'
            },
            {
                name: 'smartAccount',
                type: 'address',
                indexed: false,
                internalType: 'address'
            }
        ],
        anonymous: false
    },
    {
        type: 'event',
        name: 'SessionValidatorDisabled',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                indexed: false,
                internalType: 'PermissionId'
            },
            {
                name: 'sessionValidator',
                type: 'address',
                indexed: false,
                internalType: 'address'
            },
            {
                name: 'smartAccount',
                type: 'address',
                indexed: false,
                internalType: 'address'
            }
        ],
        anonymous: false
    },
    {
        type: 'event',
        name: 'SessionValidatorEnabled',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                indexed: false,
                internalType: 'PermissionId'
            },
            {
                name: 'sessionValidator',
                type: 'address',
                indexed: false,
                internalType: 'address'
            },
            {
                name: 'smartAccount',
                type: 'address',
                indexed: false,
                internalType: 'address'
            }
        ],
        anonymous: false
    },
    {
        type: 'error',
        name: 'AssociatedArray_OutOfBounds',
        inputs: [
            {
                name: 'index',
                type: 'uint256',
                internalType: 'uint256'
            }
        ]
    },
    {
        type: 'error',
        name: 'ChainIdMismatch',
        inputs: [
            {
                name: 'providedChainId',
                type: 'uint64',
                internalType: 'uint64'
            }
        ]
    },
    {
        type: 'error',
        name: 'ChainIdMismatch',
        inputs: [
            {
                name: 'providedChainId',
                type: 'uint64',
                internalType: 'uint64'
            }
        ]
    },
    {
        type: 'error',
        name: 'ForbiddenValidationData',
        inputs: []
    },
    {
        type: 'error',
        name: 'HashIndexOutOfBounds',
        inputs: [
            {
                name: 'index',
                type: 'uint256',
                internalType: 'uint256'
            }
        ]
    },
    {
        type: 'error',
        name: 'HashMismatch',
        inputs: [
            {
                name: 'providedHash',
                type: 'bytes32',
                internalType: 'bytes32'
            },
            {
                name: 'computedHash',
                type: 'bytes32',
                internalType: 'bytes32'
            }
        ]
    },
    {
        type: 'error',
        name: 'HashMismatch',
        inputs: [
            {
                name: 'providedHash',
                type: 'bytes32',
                internalType: 'bytes32'
            },
            {
                name: 'computedHash',
                type: 'bytes32',
                internalType: 'bytes32'
            }
        ]
    },
    {
        type: 'error',
        name: 'InvalidActionId',
        inputs: []
    },
    {
        type: 'error',
        name: 'InvalidCallTarget',
        inputs: []
    },
    {
        type: 'error',
        name: 'InvalidData',
        inputs: []
    },
    {
        type: 'error',
        name: 'InvalidEnableSignature',
        inputs: [
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'hash',
                type: 'bytes32',
                internalType: 'bytes32'
            }
        ]
    },
    {
        type: 'error',
        name: 'InvalidISessionValidator',
        inputs: [
            {
                name: 'sessionValidator',
                type: 'address',
                internalType: 'contract ISessionValidator'
            }
        ]
    },
    {
        type: 'error',
        name: 'InvalidMode',
        inputs: []
    },
    {
        type: 'error',
        name: 'InvalidPermissionId',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            }
        ]
    },
    {
        type: 'error',
        name: 'InvalidSelfCall',
        inputs: []
    },
    {
        type: 'error',
        name: 'InvalidSession',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            }
        ]
    },
    {
        type: 'error',
        name: 'InvalidSessionKeySignature',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'sessionValidator',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            },
            {
                name: 'userOpHash',
                type: 'bytes32',
                internalType: 'bytes32'
            }
        ]
    },
    {
        type: 'error',
        name: 'InvalidTarget',
        inputs: []
    },
    {
        type: 'error',
        name: 'InvalidUserOpSender',
        inputs: [
            {
                name: 'sender',
                type: 'address',
                internalType: 'address'
            }
        ]
    },
    {
        type: 'error',
        name: 'NoExecutionsInBatch',
        inputs: []
    },
    {
        type: 'error',
        name: 'NoPoliciesSet',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            }
        ]
    },
    {
        type: 'error',
        name: 'PartlyEnabledActions',
        inputs: []
    },
    {
        type: 'error',
        name: 'PartlyEnabledPolicies',
        inputs: []
    },
    {
        type: 'error',
        name: 'PaymasterValidationNotEnabled',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            }
        ]
    },
    {
        type: 'error',
        name: 'PolicyViolation',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'policy',
                type: 'address',
                internalType: 'address'
            }
        ]
    },
    {
        type: 'error',
        name: 'SignerNotFound',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            }
        ]
    },
    {
        type: 'error',
        name: 'SignerNotFound',
        inputs: [
            {
                name: 'permissionId',
                type: 'bytes32',
                internalType: 'PermissionId'
            },
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            }
        ]
    },
    {
        type: 'error',
        name: 'SmartSessionModuleAlreadyInstalled',
        inputs: [
            {
                name: 'account',
                type: 'address',
                internalType: 'address'
            }
        ]
    },
    {
        type: 'error',
        name: 'UnsupportedExecutionType',
        inputs: []
    },
    {
        type: 'error',
        name: 'UnsupportedPolicy',
        inputs: [
            {
                name: 'policy',
                type: 'address',
                internalType: 'address'
            }
        ]
    },
    {
        type: 'error',
        name: 'UnsupportedSmartSessionMode',
        inputs: [
            {
                name: 'mode',
                type: 'uint8',
                internalType: 'enum SmartSessionMode'
            }
        ]
    }
]; //# sourceMappingURL=abi.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/account/utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "isAccount": (()=>isAccount),
    "isModule": (()=>isModule)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$isAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/address/isAddress.js [app-client] (ecmascript)");
;
function isAccount(obj) {
    const account = obj;
    return typeof obj === 'object' && obj !== null && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$isAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isAddress"])(account.address, {
        strict: false
    }) && (account.initCode === undefined || account.initCode !== undefined && typeof account.initCode === 'string' && account.initCode.startsWith('0x')) && typeof account.type === 'string' && isAccountType(account.type) && Array.isArray(account.deployedOnChains) && account.deployedOnChains.every((chainId)=>typeof chainId === 'number');
}
function isAccountType(value) {
    const validTypes = [
        'erc7579-implementation',
        'kernel',
        'safe',
        'nexus'
    ];
    return typeof value === 'string' && validTypes.includes(value);
}
function isModule(object) {
    const module = object;
    return typeof object === 'object' && object !== null && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$isAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isAddress"])(module.address, {
        strict: false
    }) && typeof module.initData === 'string' && module.initData.startsWith('0x') && typeof module.deInitData === 'string' && module.deInitData.startsWith('0x') && typeof module.additionalContext === 'string' && module.additionalContext.startsWith('0x') && isModuleType(module.type);
}
const isModuleType = (value)=>{
    const validTypes = [
        'validator',
        'executor',
        'fallback',
        'hook'
    ];
    return typeof value === 'string' && validTypes.includes(value);
}; //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/types.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SmartSessionMode": (()=>SmartSessionMode)
});
const SmartSessionMode = {
    USE: '0x00',
    ENABLE: '0x01',
    UNSAFE_ENABLE: '0x02'
}; //# sourceMappingURL=types.js.map
}}),
"[project]/node_modules/viem/_esm/errors/cursor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "NegativeOffsetError": (()=>NegativeOffsetError),
    "PositionOutOfBoundsError": (()=>PositionOutOfBoundsError),
    "RecursiveReadLimitExceededError": (()=>RecursiveReadLimitExceededError)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/base.js [app-client] (ecmascript)");
;
class NegativeOffsetError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ offset }){
        super(`Offset \`${offset}\` cannot be negative.`, {
            name: 'NegativeOffsetError'
        });
    }
}
class PositionOutOfBoundsError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ length, position }){
        super(`Position \`${position}\` is out of bounds (\`0 < position < ${length}\`).`, {
            name: 'PositionOutOfBoundsError'
        });
    }
}
class RecursiveReadLimitExceededError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ count, limit }){
        super(`Recursive read limit of \`${limit}\` exceeded (recursive read count: \`${count}\`).`, {
            name: 'RecursiveReadLimitExceededError'
        });
    }
} //# sourceMappingURL=cursor.js.map
}}),
"[project]/node_modules/viem/_esm/utils/cursor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createCursor": (()=>createCursor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$cursor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/cursor.js [app-client] (ecmascript)");
;
const staticCursor = {
    bytes: new Uint8Array(),
    dataView: new DataView(new ArrayBuffer(0)),
    position: 0,
    positionReadCount: new Map(),
    recursiveReadCount: 0,
    recursiveReadLimit: Number.POSITIVE_INFINITY,
    assertReadLimit () {
        if (this.recursiveReadCount >= this.recursiveReadLimit) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$cursor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RecursiveReadLimitExceededError"]({
            count: this.recursiveReadCount + 1,
            limit: this.recursiveReadLimit
        });
    },
    assertPosition (position) {
        if (position < 0 || position > this.bytes.length - 1) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$cursor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PositionOutOfBoundsError"]({
            length: this.bytes.length,
            position
        });
    },
    decrementPosition (offset) {
        if (offset < 0) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$cursor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["NegativeOffsetError"]({
            offset
        });
        const position = this.position - offset;
        this.assertPosition(position);
        this.position = position;
    },
    getReadCount (position) {
        return this.positionReadCount.get(position || this.position) || 0;
    },
    incrementPosition (offset) {
        if (offset < 0) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$cursor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["NegativeOffsetError"]({
            offset
        });
        const position = this.position + offset;
        this.assertPosition(position);
        this.position = position;
    },
    inspectByte (position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position);
        return this.bytes[position];
    },
    inspectBytes (length, position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position + length - 1);
        return this.bytes.subarray(position, position + length);
    },
    inspectUint8 (position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position);
        return this.bytes[position];
    },
    inspectUint16 (position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position + 1);
        return this.dataView.getUint16(position);
    },
    inspectUint24 (position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position + 2);
        return (this.dataView.getUint16(position) << 8) + this.dataView.getUint8(position + 2);
    },
    inspectUint32 (position_) {
        const position = position_ ?? this.position;
        this.assertPosition(position + 3);
        return this.dataView.getUint32(position);
    },
    pushByte (byte) {
        this.assertPosition(this.position);
        this.bytes[this.position] = byte;
        this.position++;
    },
    pushBytes (bytes) {
        this.assertPosition(this.position + bytes.length - 1);
        this.bytes.set(bytes, this.position);
        this.position += bytes.length;
    },
    pushUint8 (value) {
        this.assertPosition(this.position);
        this.bytes[this.position] = value;
        this.position++;
    },
    pushUint16 (value) {
        this.assertPosition(this.position + 1);
        this.dataView.setUint16(this.position, value);
        this.position += 2;
    },
    pushUint24 (value) {
        this.assertPosition(this.position + 2);
        this.dataView.setUint16(this.position, value >> 8);
        this.dataView.setUint8(this.position + 2, value & ~4294967040);
        this.position += 3;
    },
    pushUint32 (value) {
        this.assertPosition(this.position + 3);
        this.dataView.setUint32(this.position, value);
        this.position += 4;
    },
    readByte () {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectByte();
        this.position++;
        return value;
    },
    readBytes (length, size) {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectBytes(length);
        this.position += size ?? length;
        return value;
    },
    readUint8 () {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectUint8();
        this.position += 1;
        return value;
    },
    readUint16 () {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectUint16();
        this.position += 2;
        return value;
    },
    readUint24 () {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectUint24();
        this.position += 3;
        return value;
    },
    readUint32 () {
        this.assertReadLimit();
        this._touch();
        const value = this.inspectUint32();
        this.position += 4;
        return value;
    },
    get remaining () {
        return this.bytes.length - this.position;
    },
    setPosition (position) {
        const oldPosition = this.position;
        this.assertPosition(position);
        this.position = position;
        return ()=>this.position = oldPosition;
    },
    _touch () {
        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY) return;
        const count = this.getReadCount();
        this.positionReadCount.set(this.position, count + 1);
        if (count > 0) this.recursiveReadCount++;
    }
};
function createCursor(bytes, { recursiveReadLimit = 8_192 } = {}) {
    const cursor = Object.create(staticCursor);
    cursor.bytes = bytes;
    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);
    cursor.positionReadCount = new Map();
    cursor.recursiveReadLimit = recursiveReadLimit;
    return cursor;
} //# sourceMappingURL=cursor.js.map
}}),
"[project]/node_modules/viem/_esm/utils/encoding/fromBytes.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "bytesToBigInt": (()=>bytesToBigInt),
    "bytesToBool": (()=>bytesToBool),
    "bytesToNumber": (()=>bytesToNumber),
    "bytesToString": (()=>bytesToString),
    "fromBytes": (()=>fromBytes)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/fromHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$trim$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/trim.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$encoding$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/encoding.js [app-client] (ecmascript)");
;
;
;
;
function fromBytes(bytes, toOrOpts) {
    const opts = typeof toOrOpts === 'string' ? {
        to: toOrOpts
    } : toOrOpts;
    const to = opts.to;
    if (to === 'number') return bytesToNumber(bytes, opts);
    if (to === 'bigint') return bytesToBigInt(bytes, opts);
    if (to === 'boolean') return bytesToBool(bytes, opts);
    if (to === 'string') return bytesToString(bytes, opts);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToHex"])(bytes, opts);
}
function bytesToBigInt(bytes, opts = {}) {
    if (typeof opts.size !== 'undefined') (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assertSize"])(bytes, {
        size: opts.size
    });
    const hex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToHex"])(bytes, opts);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hexToBigInt"])(hex, opts);
}
function bytesToBool(bytes_, opts = {}) {
    let bytes = bytes_;
    if (typeof opts.size !== 'undefined') {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assertSize"])(bytes, {
            size: opts.size
        });
        bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$trim$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["trim"])(bytes);
    }
    if (bytes.length > 1 || bytes[0] > 1) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$encoding$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InvalidBytesBooleanError"](bytes);
    return Boolean(bytes[0]);
}
function bytesToNumber(bytes, opts = {}) {
    if (typeof opts.size !== 'undefined') (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assertSize"])(bytes, {
        size: opts.size
    });
    const hex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToHex"])(bytes, opts);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hexToNumber"])(hex, opts);
}
function bytesToString(bytes_, opts = {}) {
    let bytes = bytes_;
    if (typeof opts.size !== 'undefined') {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assertSize"])(bytes, {
            size: opts.size
        });
        bytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$trim$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["trim"])(bytes, {
            dir: 'right'
        });
    }
    return new TextDecoder().decode(bytes);
} //# sourceMappingURL=fromBytes.js.map
}}),
"[project]/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "decodeAbiParameters": (()=>decodeAbiParameters)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toBytes.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$cursor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/cursor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/size.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/abi.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$getAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/address/getAddress.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$slice$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/slice.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/fromBytes.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$trim$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/trim.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
function decodeAbiParameters(params, data) {
    const bytes = typeof data === 'string' ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hexToBytes"])(data) : data;
    const cursor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$cursor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createCursor"])(bytes);
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(bytes) === 0 && params.length > 0) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AbiDecodingZeroDataError"]();
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(data) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(data) < 32) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AbiDecodingDataSizeTooSmallError"]({
        data: typeof data === 'string' ? data : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToHex"])(data),
        params: params,
        size: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(data)
    });
    let consumed = 0;
    const values = [];
    for(let i = 0; i < params.length; ++i){
        const param = params[i];
        cursor.setPosition(consumed);
        const [data, consumed_] = decodeParameter(cursor, param, {
            staticPosition: 0
        });
        consumed += consumed_;
        values.push(data);
    }
    return values;
}
function decodeParameter(cursor, param, { staticPosition }) {
    const arrayComponents = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getArrayComponents"])(param.type);
    if (arrayComponents) {
        const [length, type] = arrayComponents;
        return decodeArray(cursor, {
            ...param,
            type
        }, {
            length,
            staticPosition
        });
    }
    if (param.type === 'tuple') return decodeTuple(cursor, param, {
        staticPosition
    });
    if (param.type === 'address') return decodeAddress(cursor);
    if (param.type === 'bool') return decodeBool(cursor);
    if (param.type.startsWith('bytes')) return decodeBytes(cursor, param, {
        staticPosition
    });
    if (param.type.startsWith('uint') || param.type.startsWith('int')) return decodeNumber(cursor, param);
    if (param.type === 'string') return decodeString(cursor, {
        staticPosition
    });
    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InvalidAbiDecodingTypeError"](param.type, {
        docsPath: '/docs/contract/decodeAbiParameters'
    });
}
////////////////////////////////////////////////////////////////////
// Type Decoders
const sizeOfLength = 32;
const sizeOfOffset = 32;
function decodeAddress(cursor) {
    const value = cursor.readBytes(32);
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$getAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["checksumAddress"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$slice$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sliceBytes"])(value, -20))),
        32
    ];
}
function decodeArray(cursor, param, { length, staticPosition }) {
    // If the length of the array is not known in advance (dynamic array),
    // this means we will need to wonder off to the pointer and decode.
    if (!length) {
        // Dealing with a dynamic type, so get the offset of the array data.
        const offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToNumber"])(cursor.readBytes(sizeOfOffset));
        // Start is the static position of current slot + offset.
        const start = staticPosition + offset;
        const startOfData = start + sizeOfLength;
        // Get the length of the array from the offset.
        cursor.setPosition(start);
        const length = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToNumber"])(cursor.readBytes(sizeOfLength));
        // Check if the array has any dynamic children.
        const dynamicChild = hasDynamicChild(param);
        let consumed = 0;
        const value = [];
        for(let i = 0; i < length; ++i){
            // If any of the children is dynamic, then all elements will be offset pointer, thus size of one slot (32 bytes).
            // Otherwise, elements will be the size of their encoding (consumed bytes).
            cursor.setPosition(startOfData + (dynamicChild ? i * 32 : consumed));
            const [data, consumed_] = decodeParameter(cursor, param, {
                staticPosition: startOfData
            });
            consumed += consumed_;
            value.push(data);
        }
        // As we have gone wondering, restore to the original position + next slot.
        cursor.setPosition(staticPosition + 32);
        return [
            value,
            32
        ];
    }
    // If the length of the array is known in advance,
    // and the length of an element deeply nested in the array is not known,
    // we need to decode the offset of the array data.
    if (hasDynamicChild(param)) {
        // Dealing with dynamic types, so get the offset of the array data.
        const offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToNumber"])(cursor.readBytes(sizeOfOffset));
        // Start is the static position of current slot + offset.
        const start = staticPosition + offset;
        const value = [];
        for(let i = 0; i < length; ++i){
            // Move cursor along to the next slot (next offset pointer).
            cursor.setPosition(start + i * 32);
            const [data] = decodeParameter(cursor, param, {
                staticPosition: start
            });
            value.push(data);
        }
        // As we have gone wondering, restore to the original position + next slot.
        cursor.setPosition(staticPosition + 32);
        return [
            value,
            32
        ];
    }
    // If the length of the array is known in advance and the array is deeply static,
    // then we can just decode each element in sequence.
    let consumed = 0;
    const value = [];
    for(let i = 0; i < length; ++i){
        const [data, consumed_] = decodeParameter(cursor, param, {
            staticPosition: staticPosition + consumed
        });
        consumed += consumed_;
        value.push(data);
    }
    return [
        value,
        consumed
    ];
}
function decodeBool(cursor) {
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToBool"])(cursor.readBytes(32), {
            size: 32
        }),
        32
    ];
}
function decodeBytes(cursor, param, { staticPosition }) {
    const [_, size] = param.type.split('bytes');
    if (!size) {
        // Dealing with dynamic types, so get the offset of the bytes data.
        const offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToNumber"])(cursor.readBytes(32));
        // Set position of the cursor to start of bytes data.
        cursor.setPosition(staticPosition + offset);
        const length = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToNumber"])(cursor.readBytes(32));
        // If there is no length, we have zero data.
        if (length === 0) {
            // As we have gone wondering, restore to the original position + next slot.
            cursor.setPosition(staticPosition + 32);
            return [
                '0x',
                32
            ];
        }
        const data = cursor.readBytes(length);
        // As we have gone wondering, restore to the original position + next slot.
        cursor.setPosition(staticPosition + 32);
        return [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToHex"])(data),
            32
        ];
    }
    const value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToHex"])(cursor.readBytes(Number.parseInt(size), 32));
    return [
        value,
        32
    ];
}
function decodeNumber(cursor, param) {
    const signed = param.type.startsWith('int');
    const size = Number.parseInt(param.type.split('int')[1] || '256');
    const value = cursor.readBytes(32);
    return [
        size > 48 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToBigInt"])(value, {
            signed
        }) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToNumber"])(value, {
            signed
        }),
        32
    ];
}
function decodeTuple(cursor, param, { staticPosition }) {
    // Tuples can have unnamed components (i.e. they are arrays), so we must
    // determine whether the tuple is named or unnamed. In the case of a named
    // tuple, the value will be an object where each property is the name of the
    // component. In the case of an unnamed tuple, the value will be an array.
    const hasUnnamedChild = param.components.length === 0 || param.components.some(({ name })=>!name);
    // Initialize the value to an object or an array, depending on whether the
    // tuple is named or unnamed.
    const value = hasUnnamedChild ? [] : {};
    let consumed = 0;
    // If the tuple has a dynamic child, we must first decode the offset to the
    // tuple data.
    if (hasDynamicChild(param)) {
        // Dealing with dynamic types, so get the offset of the tuple data.
        const offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToNumber"])(cursor.readBytes(sizeOfOffset));
        // Start is the static position of referencing slot + offset.
        const start = staticPosition + offset;
        for(let i = 0; i < param.components.length; ++i){
            const component = param.components[i];
            cursor.setPosition(start + consumed);
            const [data, consumed_] = decodeParameter(cursor, component, {
                staticPosition: start
            });
            consumed += consumed_;
            value[hasUnnamedChild ? i : component?.name] = data;
        }
        // As we have gone wondering, restore to the original position + next slot.
        cursor.setPosition(staticPosition + 32);
        return [
            value,
            32
        ];
    }
    // If the tuple has static children, we can just decode each component
    // in sequence.
    for(let i = 0; i < param.components.length; ++i){
        const component = param.components[i];
        const [data, consumed_] = decodeParameter(cursor, component, {
            staticPosition
        });
        value[hasUnnamedChild ? i : component?.name] = data;
        consumed += consumed_;
    }
    return [
        value,
        consumed
    ];
}
function decodeString(cursor, { staticPosition }) {
    // Get offset to start of string data.
    const offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToNumber"])(cursor.readBytes(32));
    // Start is the static position of current slot + offset.
    const start = staticPosition + offset;
    cursor.setPosition(start);
    const length = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToNumber"])(cursor.readBytes(32));
    // If there is no length, we have zero data (empty string).
    if (length === 0) {
        cursor.setPosition(staticPosition + 32);
        return [
            '',
            32
        ];
    }
    const data = cursor.readBytes(length, 32);
    const value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesToString"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$trim$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["trim"])(data));
    // As we have gone wondering, restore to the original position + next slot.
    cursor.setPosition(staticPosition + 32);
    return [
        value,
        32
    ];
}
function hasDynamicChild(param) {
    const { type } = param;
    if (type === 'string') return true;
    if (type === 'bytes') return true;
    if (type.endsWith('[]')) return true;
    if (type === 'tuple') return param.components?.some(hasDynamicChild);
    const arrayComponents = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getArrayComponents"])(param.type);
    if (arrayComponents && hasDynamicChild({
        ...param,
        type: arrayComponents[1]
    })) return true;
    return false;
} //# sourceMappingURL=decodeAbiParameters.js.map
}}),
"[project]/node_modules/viem/_esm/utils/stringify.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "stringify": (()=>stringify)
});
const stringify = (value, replacer, space)=>JSON.stringify(value, (key, value_)=>{
        const value = typeof value_ === 'bigint' ? value_.toString() : value_;
        return typeof replacer === 'function' ? replacer(key, value) : value;
    }, space); //# sourceMappingURL=stringify.js.map
}}),
"[project]/node_modules/viem/_esm/errors/typedData.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "InvalidDomainError": (()=>InvalidDomainError),
    "InvalidPrimaryTypeError": (()=>InvalidPrimaryTypeError),
    "InvalidStructTypeError": (()=>InvalidStructTypeError)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$stringify$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/stringify.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/base.js [app-client] (ecmascript)");
;
;
class InvalidDomainError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ domain }){
        super(`Invalid domain "${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$stringify$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["stringify"])(domain)}".`, {
            metaMessages: [
                'Must be a valid EIP-712 domain.'
            ]
        });
    }
}
class InvalidPrimaryTypeError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ primaryType, types }){
        super(`Invalid primary type \`${primaryType}\` must be one of \`${JSON.stringify(Object.keys(types))}\`.`, {
            docsPath: '/api/glossary/Errors#typeddatainvalidprimarytypeerror',
            metaMessages: [
                'Check that the primary type is a key in `types`.'
            ]
        });
    }
}
class InvalidStructTypeError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ type }){
        super(`Struct type "${type}" is invalid.`, {
            metaMessages: [
                'Struct type must not be a Solidity type.'
            ],
            name: 'InvalidStructTypeError'
        });
    }
} //# sourceMappingURL=typedData.js.map
}}),
"[project]/node_modules/viem/_esm/utils/typedData.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "domainSeparator": (()=>domainSeparator),
    "getTypesForEIP712Domain": (()=>getTypesForEIP712Domain),
    "serializeTypedData": (()=>serializeTypedData),
    "validateTypedData": (()=>validateTypedData)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$stringify$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/stringify.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/regex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$isAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/address/isAddress.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$address$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/address.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/size.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/abi.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$typedData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/typedData.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$signature$2f$hashTypedData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/signature/hashTypedData.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
function serializeTypedData(parameters) {
    const { domain: domain_, message: message_, primaryType, types } = parameters;
    const normalizeData = (struct, data_)=>{
        const data = {
            ...data_
        };
        for (const param of struct){
            const { name, type } = param;
            if (type === 'address') data[name] = data[name].toLowerCase();
        }
        return data;
    };
    const domain = (()=>{
        if (!types.EIP712Domain) return {};
        if (!domain_) return {};
        return normalizeData(types.EIP712Domain, domain_);
    })();
    const message = (()=>{
        if (primaryType === 'EIP712Domain') return undefined;
        return normalizeData(types[primaryType], message_);
    })();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$stringify$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["stringify"])({
        domain,
        message,
        primaryType,
        types
    });
}
function validateTypedData(parameters) {
    const { domain, message, primaryType, types } = parameters;
    const validateData = (struct, data)=>{
        for (const param of struct){
            const { name, type } = param;
            const value = data[name];
            const integerMatch = type.match(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["integerRegex"]);
            if (integerMatch && (typeof value === 'number' || typeof value === 'bigint')) {
                const [_type, base, size_] = integerMatch;
                // If number cannot be cast to a sized hex value, it is out of range
                // and will throw.
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["numberToHex"])(value, {
                    signed: base === 'int',
                    size: Number.parseInt(size_) / 8
                });
            }
            if (type === 'address' && typeof value === 'string' && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$isAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isAddress"])(value)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$address$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InvalidAddressError"]({
                address: value
            });
            const bytesMatch = type.match(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bytesRegex"]);
            if (bytesMatch) {
                const [_type, size_] = bytesMatch;
                if (size_ && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(value) !== Number.parseInt(size_)) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BytesSizeMismatchError"]({
                    expectedSize: Number.parseInt(size_),
                    givenSize: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$size$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["size"])(value)
                });
            }
            const struct = types[type];
            if (struct) {
                validateReference(type);
                validateData(struct, value);
            }
        }
    };
    // Validate domain types.
    if (types.EIP712Domain && domain) {
        if (typeof domain !== 'object') throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$typedData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InvalidDomainError"]({
            domain
        });
        validateData(types.EIP712Domain, domain);
    }
    // Validate message types.
    if (primaryType !== 'EIP712Domain') {
        if (types[primaryType]) validateData(types[primaryType], message);
        else throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$typedData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InvalidPrimaryTypeError"]({
            primaryType,
            types
        });
    }
}
function getTypesForEIP712Domain({ domain }) {
    return [
        typeof domain?.name === 'string' && {
            name: 'name',
            type: 'string'
        },
        domain?.version && {
            name: 'version',
            type: 'string'
        },
        (typeof domain?.chainId === 'number' || typeof domain?.chainId === 'bigint') && {
            name: 'chainId',
            type: 'uint256'
        },
        domain?.verifyingContract && {
            name: 'verifyingContract',
            type: 'address'
        },
        domain?.salt && {
            name: 'salt',
            type: 'bytes32'
        }
    ].filter(Boolean);
}
function domainSeparator({ domain }) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$signature$2f$hashTypedData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hashDomain"])({
        domain,
        types: {
            EIP712Domain: getTypesForEIP712Domain({
                domain
            })
        }
    });
}
/** @internal */ function validateReference(type) {
    // Struct type must not be a Solidity type.
    if (type === 'address' || type === 'bool' || type === 'string' || type.startsWith('bytes') || type.startsWith('uint') || type.startsWith('int')) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$typedData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InvalidStructTypeError"]({
        type
    });
} //# sourceMappingURL=typedData.js.map
}}),
"[project]/node_modules/viem/_esm/utils/signature/hashTypedData.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// Implementation forked and adapted from https://github.com/MetaMask/eth-sig-util/blob/main/src/sign-typed-data.ts
__turbopack_esm__({
    "encodeType": (()=>encodeType),
    "hashDomain": (()=>hashDomain),
    "hashStruct": (()=>hashStruct),
    "hashTypedData": (()=>hashTypedData)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$typedData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/typedData.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/hash/keccak256.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/concat.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toHex.js [app-client] (ecmascript)");
;
;
;
;
;
function hashTypedData(parameters) {
    const { domain = {}, message, primaryType } = parameters;
    const types = {
        EIP712Domain: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$typedData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getTypesForEIP712Domain"])({
            domain
        }),
        ...parameters.types
    };
    // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc
    // as we can't statically check this with TypeScript.
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$typedData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateTypedData"])({
        domain,
        message,
        primaryType,
        types
    });
    const parts = [
        '0x1901'
    ];
    if (domain) parts.push(hashDomain({
        domain,
        types: types
    }));
    if (primaryType !== 'EIP712Domain') parts.push(hashStruct({
        data: message,
        primaryType,
        types: types
    }));
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concat"])(parts));
}
function hashDomain({ domain, types }) {
    return hashStruct({
        data: domain,
        primaryType: 'EIP712Domain',
        types
    });
}
function hashStruct({ data, primaryType, types }) {
    const encoded = encodeData({
        data,
        primaryType,
        types
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keccak256"])(encoded);
}
function encodeData({ data, primaryType, types }) {
    const encodedTypes = [
        {
            type: 'bytes32'
        }
    ];
    const encodedValues = [
        hashType({
            primaryType,
            types
        })
    ];
    for (const field of types[primaryType]){
        const [type, value] = encodeField({
            types,
            name: field.name,
            type: field.type,
            value: data[field.name]
        });
        encodedTypes.push(type);
        encodedValues.push(value);
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(encodedTypes, encodedValues);
}
function hashType({ primaryType, types }) {
    const encodedHashType = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])(encodeType({
        primaryType,
        types
    }));
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keccak256"])(encodedHashType);
}
function encodeType({ primaryType, types }) {
    let result = '';
    const unsortedDeps = findTypeDependencies({
        primaryType,
        types
    });
    unsortedDeps.delete(primaryType);
    const deps = [
        primaryType,
        ...Array.from(unsortedDeps).sort()
    ];
    for (const type of deps){
        result += `${type}(${types[type].map(({ name, type: t })=>`${t} ${name}`).join(',')})`;
    }
    return result;
}
function findTypeDependencies({ primaryType: primaryType_, types }, results = new Set()) {
    const match = primaryType_.match(/^\w*/u);
    const primaryType = match?.[0];
    if (results.has(primaryType) || types[primaryType] === undefined) {
        return results;
    }
    results.add(primaryType);
    for (const field of types[primaryType]){
        findTypeDependencies({
            primaryType: field.type,
            types
        }, results);
    }
    return results;
}
function encodeField({ types, name, type, value }) {
    if (types[type] !== undefined) {
        return [
            {
                type: 'bytes32'
            },
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keccak256"])(encodeData({
                data: value,
                primaryType: type,
                types
            }))
        ];
    }
    if (type === 'bytes') {
        const prepend = value.length % 2 ? '0' : '';
        value = `0x${prepend + value.slice(2)}`;
        return [
            {
                type: 'bytes32'
            },
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keccak256"])(value)
        ];
    }
    if (type === 'string') return [
        {
            type: 'bytes32'
        },
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])(value))
    ];
    if (type.lastIndexOf(']') === type.length - 1) {
        const parsedType = type.slice(0, type.lastIndexOf('['));
        const typeValuePairs = value.map((item)=>encodeField({
                name,
                type: parsedType,
                types,
                value: item
            }));
        return [
            {
                type: 'bytes32'
            },
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(typeValuePairs.map(([t])=>t), typeValuePairs.map(([, v])=>v)))
        ];
    }
    return [
        {
            type
        },
        value
    ];
} //# sourceMappingURL=hashTypedData.js.map
}}),
"[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/usage.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "decodeSmartSessionSignature": (()=>decodeSmartSessionSignature),
    "encodeSmartSessionSignature": (()=>encodeSmartSessionSignature),
    "encodeUseOrEnableSmartSessionSignature": (()=>encodeUseOrEnableSmartSessionSignature),
    "formatPermissionEnableSig": (()=>formatPermissionEnableSig),
    "getAccountEIP712Domain": (()=>getAccountEIP712Domain),
    "getActionId": (()=>getActionId),
    "getDisableActionPoliciesAction": (()=>getDisableActionPoliciesAction),
    "getDisableERC1271PoliciesAction": (()=>getDisableERC1271PoliciesAction),
    "getDisableUserOpPoliciesAction": (()=>getDisableUserOpPoliciesAction),
    "getEnableActionPoliciesAction": (()=>getEnableActionPoliciesAction),
    "getEnableERC1271PoliciesAction": (()=>getEnableERC1271PoliciesAction),
    "getEnableSessionDetails": (()=>getEnableSessionDetails),
    "getEnableSessionsAction": (()=>getEnableSessionsAction),
    "getEnableUserOpPoliciesAction": (()=>getEnableUserOpPoliciesAction),
    "getPermissionId": (()=>getPermissionId),
    "getRemoveSessionAction": (()=>getRemoveSessionAction),
    "getSessionDigest": (()=>getSessionDigest),
    "getSessionNonce": (()=>getSessionNonce),
    "getVerifySignatureResult": (()=>getVerifySignatureResult),
    "hashChainSessions": (()=>hashChainSessions),
    "isSessionEnabled": (()=>isSessionEnabled)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$solady$2f$js$2f$solady$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/solady/js/solady.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/hash/keccak256.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodePacked$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/encodePacked.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/abi.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$account$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/account/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/encodeFunctionData.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$slice$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/slice.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$signature$2f$hashTypedData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/signature/hashTypedData.js [app-client] (ecmascript)");
;
;
;
;
;
;
const getPermissionId = ({ session })=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])([
        {
            type: 'address',
            name: 'sessionValidator'
        },
        {
            type: 'bytes',
            name: 'sessionValidatorInitData'
        },
        {
            type: 'bytes32',
            name: 'salt'
        }
    ], [
        session.sessionValidator,
        session.sessionValidatorInitData,
        session.salt
    ]));
};
const getActionId = async ({ target, selector })=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodePacked$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodePacked"])([
        'address',
        'bytes4'
    ], [
        target,
        selector
    ]));
};
const getSessionNonce = async ({ client, account, permissionId })=>{
    return await client.readContract({
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
        functionName: 'getNonce',
        args: [
            permissionId,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$account$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isAccount"])(account) ? account.address : account
        ]
    });
};
const getVerifySignatureResult = async ({ client, account, sender, hash, signature })=>{
    let calldata = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeFunctionData"])({
        abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
        functionName: 'isValidSignatureWithSender',
        args: [
            sender,
            hash,
            signature
        ]
    });
    const { data } = await client.call({
        account: account.address,
        to: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        data: calldata
    });
    return data === '0x1626ba7e00000000000000000000000000000000000000000000000000000000';
};
const getAccountEIP712Domain = async ({ client, account })=>{
    let data = await client.readContract({
        address: account.address,
        abi: [
            {
                type: 'function',
                name: 'eip712Domain',
                inputs: [],
                outputs: [
                    {
                        type: 'bytes1',
                        name: 'fields,'
                    },
                    {
                        type: 'string',
                        name: 'name'
                    },
                    {
                        type: 'string',
                        name: 'version'
                    },
                    {
                        type: 'uint256',
                        name: 'chainId'
                    },
                    {
                        type: 'address',
                        name: 'verifyingContract'
                    },
                    {
                        type: 'bytes32',
                        name: 'salt'
                    },
                    {
                        type: 'uint256[]',
                        name: 'extensions'
                    }
                ],
                stateMutability: 'view',
                constant: true
            }
        ],
        functionName: 'eip712Domain',
        args: []
    });
    return {
        name: data[1],
        version: data[2],
        chainId: data[3],
        verifyingContract: data[4],
        salt: data[5]
    };
};
const isSessionEnabled = async ({ client, account, permissionId })=>{
    return await client.readContract({
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
        functionName: 'isPermissionEnabled',
        args: [
            permissionId,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$account$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isAccount"])(account) ? account.address : account
        ]
    });
};
const getSessionDigest = async ({ client, account, session, permissionId, mode })=>{
    return await client.readContract({
        address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
        functionName: 'getSessionDigest',
        args: [
            permissionId,
            account.address,
            session,
            Number(mode)
        ]
    });
};
const encodeSmartSessionSignature = ({ mode, permissionId, signature, enableSessionData })=>{
    switch(mode){
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SmartSessionMode"].USE:
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodePacked$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodePacked"])([
                'bytes1',
                'bytes32',
                'bytes'
            ], [
                mode,
                permissionId,
                signature
            ]);
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SmartSessionMode"].ENABLE:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SmartSessionMode"].UNSAFE_ENABLE:
            if (!enableSessionData) {
                throw new Error('enableSession is required for ENABLE mode');
            }
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodePacked$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodePacked"])([
                'bytes1',
                'bytes'
            ], [
                mode,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$solady$2f$js$2f$solady$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LibZip"].flzCompress(encodeEnableSessionSignature({
                    enableSessionData,
                    signature
                }))
            ]);
        default:
            throw new Error(`Unknown mode ${mode}`);
    }
};
const encodeUseOrEnableSmartSessionSignature = async ({ account, client, permissionId, signature, enableSessionData })=>{
    const sessionEnabled = await isSessionEnabled({
        account,
        client,
        permissionId
    });
    return sessionEnabled ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodePacked$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodePacked"])([
        'bytes1',
        'bytes32',
        'bytes'
    ], [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SmartSessionMode"].USE,
        permissionId,
        signature
    ]) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodePacked$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodePacked"])([
        'bytes1',
        'bytes'
    ], [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SmartSessionMode"].ENABLE,
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$solady$2f$js$2f$solady$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LibZip"].flzCompress(encodeEnableSessionSignature({
            enableSessionData,
            signature
        }))
    ]);
};
const decodeSmartSessionSignature = ({ signature, account })=>{
    const mode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$slice$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["slice"])(signature, 0, 1);
    let permissionId;
    let compressedData;
    let data;
    switch(mode){
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SmartSessionMode"].USE:
            permissionId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$slice$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["slice"])(signature, 1, 33);
            const decodedSignature = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$slice$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["slice"])(signature, 33);
            return {
                mode,
                permissionId,
                signature: decodedSignature
            };
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SmartSessionMode"].ENABLE:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SmartSessionMode"].UNSAFE_ENABLE:
            compressedData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$slice$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["slice"])(signature, 1);
            data = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$solady$2f$js$2f$solady$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LibZip"].flzDecompress(compressedData);
            if (!account) {
                throw new Error('account is required for ENABLE mode decoding');
            }
            const decodedData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeEnableSessionSignatureAbi"], data);
            const enableSession = decodedData[0];
            const permissionEnableSigSlice = account.type === 'kernel' ? 1 : 0;
            if (account.type === 'kernel' && !enableSession.permissionEnableSig.startsWith('0x01')) {
                throw new Error('Invalid permissionEnableSig for kernel account');
            }
            const permissionEnableSig = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$slice$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["slice"])(enableSession.permissionEnableSig, 20 + permissionEnableSigSlice);
            const validator = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$slice$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["slice"])(enableSession.permissionEnableSig, 0 + permissionEnableSigSlice, 20 + permissionEnableSigSlice);
            return {
                mode: mode,
                permissionId: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])([
                    {
                        type: 'address',
                        name: 'sessionValidator'
                    },
                    {
                        type: 'bytes',
                        name: 'sessionValidatorInitData'
                    },
                    {
                        type: 'bytes32',
                        name: 'salt'
                    }
                ], [
                    enableSession.sessionToEnable.sessionValidator,
                    enableSession.sessionToEnable.sessionValidatorInitData,
                    enableSession.sessionToEnable.salt
                ])),
                signature: decodedData[1],
                enableSessionData: {
                    enableSession: {
                        chainDigestIndex: enableSession.chainDigestIndex,
                        hashesAndChainIds: enableSession.hashesAndChainIds,
                        sessionToEnable: enableSession.sessionToEnable,
                        permissionEnableSig: permissionEnableSig
                    },
                    validator: validator,
                    accountType: account.type
                }
            };
        default:
            throw new Error(`Unknown mode ${mode}`);
    }
};
const hashChainSessions = (chainSessions)=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$signature$2f$hashTypedData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hashTypedData"])({
        domain: {
            name: 'SmartSession',
            version: '1'
        },
        types: {
            PolicyData: [
                {
                    name: 'policy',
                    type: 'address'
                },
                {
                    name: 'initData',
                    type: 'bytes'
                }
            ],
            ActionData: [
                {
                    name: 'actionTargetSelector',
                    type: 'bytes4'
                },
                {
                    name: 'actionTarget',
                    type: 'address'
                },
                {
                    name: 'actionPolicies',
                    type: 'PolicyData[]'
                }
            ],
            ERC7739Context: [
                {
                    name: 'appDomainSeparator',
                    type: 'bytes32'
                },
                {
                    name: 'contentName',
                    type: 'string[]'
                }
            ],
            ERC7739Data: [
                {
                    name: 'allowedERC7739Content',
                    type: 'ERC7739Context[]'
                },
                {
                    name: 'erc1271Policies',
                    type: 'PolicyData[]'
                }
            ],
            SignedPermissions: [
                {
                    name: 'permitGenericPolicy',
                    type: 'bool'
                },
                {
                    name: 'permitAdminAccess',
                    type: 'bool'
                },
                {
                    name: 'ignoreSecurityAttestations',
                    type: 'bool'
                },
                {
                    name: 'permitERC4337Paymaster',
                    type: 'bool'
                },
                {
                    name: 'userOpPolicies',
                    type: 'PolicyData[]'
                },
                {
                    name: 'erc7739Policies',
                    type: 'ERC7739Data'
                },
                {
                    name: 'actions',
                    type: 'ActionData[]'
                }
            ],
            SignedSession: [
                {
                    name: 'account',
                    type: 'address'
                },
                {
                    name: 'permissions',
                    type: 'SignedPermissions'
                },
                {
                    name: 'sessionValidator',
                    type: 'address'
                },
                {
                    name: 'sessionValidatorInitData',
                    type: 'bytes'
                },
                {
                    name: 'salt',
                    type: 'bytes32'
                },
                {
                    name: 'smartSession',
                    type: 'address'
                },
                {
                    name: 'nonce',
                    type: 'uint256'
                }
            ],
            ChainSession: [
                {
                    name: 'chainId',
                    type: 'uint64'
                },
                {
                    name: 'session',
                    type: 'SignedSession'
                }
            ],
            MultiChainSession: [
                {
                    name: 'sessionsAndChainIds',
                    type: 'ChainSession[]'
                }
            ]
        },
        primaryType: 'MultiChainSession',
        message: {
            sessionsAndChainIds: chainSessions
        }
    });
};
const encodeEnableSessionSignature = ({ enableSessionData, signature })=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeEnableSessionSignatureAbi"], [
        {
            chainDigestIndex: enableSessionData.enableSession.chainDigestIndex,
            hashesAndChainIds: enableSessionData.enableSession.hashesAndChainIds,
            sessionToEnable: enableSessionData.enableSession.sessionToEnable,
            permissionEnableSig: formatPermissionEnableSig({
                signature: enableSessionData.enableSession.permissionEnableSig,
                validator: enableSessionData.validator,
                accountType: enableSessionData.accountType
            })
        },
        signature
    ]);
};
const formatPermissionEnableSig = ({ signature, validator, accountType })=>{
    switch(accountType){
        case 'erc7579-implementation':
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodePacked$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodePacked"])([
                'address',
                'bytes'
            ], [
                validator,
                signature
            ]);
        case 'nexus':
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodePacked$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodePacked"])([
                'address',
                'bytes'
            ], [
                validator,
                signature
            ]);
        case 'safe':
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodePacked$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodePacked"])([
                'address',
                'bytes'
            ], [
                validator,
                signature
            ]);
        case 'kernel':
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodePacked$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodePacked"])([
                'bytes1',
                'address',
                'bytes'
            ], [
                '0x01',
                validator,
                signature
            ]);
        default:
            throw new Error(`Unsupported account type: ${accountType}`);
    }
};
const getEnableSessionsAction = ({ sessions })=>{
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeFunctionData"])({
        abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
        functionName: 'enableSessions',
        args: [
            sessions
        ]
    });
    return {
        to: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        target: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        value: BigInt(0),
        callData: data,
        data
    };
};
const getRemoveSessionAction = ({ permissionId })=>{
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeFunctionData"])({
        abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
        functionName: 'removeSession',
        args: [
            permissionId
        ]
    });
    return {
        to: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        target: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        value: BigInt(0),
        callData: data,
        data
    };
};
const getEnableUserOpPoliciesAction = ({ permissionId, userOpPolicies })=>{
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeFunctionData"])({
        abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
        functionName: 'enableUserOpPolicies',
        args: [
            permissionId,
            userOpPolicies
        ]
    });
    return {
        to: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        target: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        value: BigInt(0),
        callData: data,
        data
    };
};
const getDisableUserOpPoliciesAction = ({ permissionId, userOpPolicies })=>{
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeFunctionData"])({
        abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
        functionName: 'disableUserOpPolicies',
        args: [
            permissionId,
            userOpPolicies
        ]
    });
    return {
        to: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        target: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        value: BigInt(0),
        callData: data,
        data
    };
};
const getEnableERC1271PoliciesAction = ({ permissionId, erc1271Policies })=>{
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeFunctionData"])({
        abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
        functionName: 'enableERC1271Policies',
        args: [
            permissionId,
            erc1271Policies
        ]
    });
    return {
        to: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        target: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        value: BigInt(0),
        callData: data,
        data
    };
};
const getDisableERC1271PoliciesAction = ({ permissionId, policies, contents })=>{
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeFunctionData"])({
        abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
        functionName: 'disableERC1271Policies',
        args: [
            permissionId,
            policies,
            contents
        ]
    });
    return {
        to: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        target: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        value: BigInt(0),
        callData: data,
        data
    };
};
const getEnableActionPoliciesAction = ({ permissionId, actionPolicies })=>{
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeFunctionData"])({
        abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
        functionName: 'enableActionPolicies',
        args: [
            permissionId,
            actionPolicies
        ]
    });
    return {
        to: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        target: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        value: BigInt(0),
        callData: data,
        data
    };
};
const getDisableActionPoliciesAction = ({ permissionId, actionId, policies })=>{
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeFunctionData"])({
        abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$abi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abi"],
        functionName: 'disableActionPolicies',
        args: [
            permissionId,
            actionId,
            policies
        ]
    });
    return {
        to: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        target: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
        value: BigInt(0),
        callData: data,
        data
    };
};
const getEnableSessionDetails = async ({ sessions, sessionIndex, enableMode, account, clients, enableValidatorAddress, permitGenericPolicy = false, permitAdminAccess = false, ignoreSecurityAttestations = false })=>{
    const chainDigests = [];
    const chainSessions = [];
    for (const session of sessions){
        const permissionId = getPermissionId({
            session
        });
        const client = clients.find((c)=>BigInt(c.chain?.id ?? 0) === session.chainId);
        if (!client) {
            throw new Error(`Client not found for chainId ${session.chainId}`);
        }
        const sessionNonce = await getSessionNonce({
            client,
            account,
            permissionId
        });
        const sessionDigest = await getSessionDigest({
            client,
            account,
            session,
            mode: enableMode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SmartSessionMode"].ENABLE,
            permissionId
        });
        chainDigests.push({
            chainId: session.chainId,
            sessionDigest
        });
        chainSessions.push({
            chainId: session.chainId,
            session: {
                ...session,
                permissions: {
                    permitGenericPolicy: permitGenericPolicy,
                    permitAdminAccess: permitAdminAccess,
                    ignoreSecurityAttestations: ignoreSecurityAttestations,
                    permitERC4337Paymaster: session.permitERC4337Paymaster,
                    userOpPolicies: session.userOpPolicies,
                    erc7739Policies: session.erc7739Policies,
                    actions: session.actions
                },
                account: account.address,
                smartSession: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
                nonce: sessionNonce
            }
        });
    }
    const permissionEnableHash = hashChainSessions(chainSessions);
    const sessionToEnable = sessions[sessionIndex || 0];
    const permissionId = getPermissionId({
        session: sessionToEnable
    });
    return {
        permissionEnableHash,
        mode: enableMode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SmartSessionMode"].ENABLE,
        permissionId,
        signature: '0x',
        enableSessionData: {
            enableSession: {
                chainDigestIndex: sessionIndex || 0,
                hashesAndChainIds: chainDigests,
                sessionToEnable,
                permissionEnableSig: '0x'
            },
            validator: enableValidatorAddress ?? sessionToEnable.sessionValidator,
            accountType: account.type
        }
    };
}; //# sourceMappingURL=usage.js.map
}}),
"[project]/node_modules/@biconomy/abstractjs/dist/_esm/constants/abi/SmartSessionAbi.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SmartSessionAbi": (()=>SmartSessionAbi)
});
const SmartSessionAbi = [
    {
        type: "function",
        name: "areActionsEnabled",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address"
            },
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "actions",
                type: "tuple[]",
                internalType: "struct ActionData[]",
                components: [
                    {
                        name: "actionTargetSelector",
                        type: "bytes4",
                        internalType: "bytes4"
                    },
                    {
                        name: "actionTarget",
                        type: "address",
                        internalType: "address"
                    },
                    {
                        name: "actionPolicies",
                        type: "tuple[]",
                        internalType: "struct PolicyData[]",
                        components: [
                            {
                                name: "policy",
                                type: "address",
                                internalType: "address"
                            },
                            {
                                name: "initData",
                                type: "bytes",
                                internalType: "bytes"
                            }
                        ]
                    }
                ]
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "areERC1271PoliciesEnabled",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address"
            },
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "erc1271Policies",
                type: "tuple[]",
                internalType: "struct PolicyData[]",
                components: [
                    {
                        name: "policy",
                        type: "address",
                        internalType: "address"
                    },
                    {
                        name: "initData",
                        type: "bytes",
                        internalType: "bytes"
                    }
                ]
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "areUserOpPoliciesEnabled",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address"
            },
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "userOpPolicies",
                type: "tuple[]",
                internalType: "struct PolicyData[]",
                components: [
                    {
                        name: "policy",
                        type: "address",
                        internalType: "address"
                    },
                    {
                        name: "initData",
                        type: "bytes",
                        internalType: "bytes"
                    }
                ]
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "disableActionId",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "actionId",
                type: "bytes32",
                internalType: "ActionId"
            }
        ],
        outputs: [],
        stateMutability: "nonpayable"
    },
    {
        type: "function",
        name: "disableActionPolicies",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "actionId",
                type: "bytes32",
                internalType: "ActionId"
            },
            {
                name: "policies",
                type: "address[]",
                internalType: "address[]"
            }
        ],
        outputs: [],
        stateMutability: "nonpayable"
    },
    {
        type: "function",
        name: "disableERC1271Policies",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "policies",
                type: "address[]",
                internalType: "address[]"
            },
            {
                name: "contexts",
                type: "tuple[]",
                internalType: "struct ERC7739Context[]",
                components: [
                    {
                        name: "appDomainSeparator",
                        type: "bytes32",
                        internalType: "bytes32"
                    },
                    {
                        name: "contentName",
                        type: "string[]",
                        internalType: "string[]"
                    }
                ]
            }
        ],
        outputs: [],
        stateMutability: "nonpayable"
    },
    {
        type: "function",
        name: "disableUserOpPolicies",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "policies",
                type: "address[]",
                internalType: "address[]"
            }
        ],
        outputs: [],
        stateMutability: "nonpayable"
    },
    {
        type: "function",
        name: "enableActionPolicies",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "actionPolicies",
                type: "tuple[]",
                internalType: "struct ActionData[]",
                components: [
                    {
                        name: "actionTargetSelector",
                        type: "bytes4",
                        internalType: "bytes4"
                    },
                    {
                        name: "actionTarget",
                        type: "address",
                        internalType: "address"
                    },
                    {
                        name: "actionPolicies",
                        type: "tuple[]",
                        internalType: "struct PolicyData[]",
                        components: [
                            {
                                name: "policy",
                                type: "address",
                                internalType: "address"
                            },
                            {
                                name: "initData",
                                type: "bytes",
                                internalType: "bytes"
                            }
                        ]
                    }
                ]
            }
        ],
        outputs: [],
        stateMutability: "nonpayable"
    },
    {
        type: "function",
        name: "enableERC1271Policies",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "erc1271Policies",
                type: "tuple",
                internalType: "struct ERC7739Data",
                components: [
                    {
                        name: "allowedERC7739Content",
                        type: "tuple[]",
                        internalType: "struct ERC7739Context[]",
                        components: [
                            {
                                name: "appDomainSeparator",
                                type: "bytes32",
                                internalType: "bytes32"
                            },
                            {
                                name: "contentName",
                                type: "string[]",
                                internalType: "string[]"
                            }
                        ]
                    },
                    {
                        name: "erc1271Policies",
                        type: "tuple[]",
                        internalType: "struct PolicyData[]",
                        components: [
                            {
                                name: "policy",
                                type: "address",
                                internalType: "address"
                            },
                            {
                                name: "initData",
                                type: "bytes",
                                internalType: "bytes"
                            }
                        ]
                    }
                ]
            }
        ],
        outputs: [],
        stateMutability: "nonpayable"
    },
    {
        type: "function",
        name: "enableSessions",
        inputs: [
            {
                name: "sessions",
                type: "tuple[]",
                internalType: "struct Session[]",
                components: [
                    {
                        name: "sessionValidator",
                        type: "address",
                        internalType: "contract ISessionValidator"
                    },
                    {
                        name: "sessionValidatorInitData",
                        type: "bytes",
                        internalType: "bytes"
                    },
                    {
                        name: "salt",
                        type: "bytes32",
                        internalType: "bytes32"
                    },
                    {
                        name: "userOpPolicies",
                        type: "tuple[]",
                        internalType: "struct PolicyData[]",
                        components: [
                            {
                                name: "policy",
                                type: "address",
                                internalType: "address"
                            },
                            {
                                name: "initData",
                                type: "bytes",
                                internalType: "bytes"
                            }
                        ]
                    },
                    {
                        name: "erc7739Policies",
                        type: "tuple",
                        internalType: "struct ERC7739Data",
                        components: [
                            {
                                name: "allowedERC7739Content",
                                type: "tuple[]",
                                internalType: "struct ERC7739Context[]",
                                components: [
                                    {
                                        name: "appDomainSeparator",
                                        type: "bytes32",
                                        internalType: "bytes32"
                                    },
                                    {
                                        name: "contentName",
                                        type: "string[]",
                                        internalType: "string[]"
                                    }
                                ]
                            },
                            {
                                name: "erc1271Policies",
                                type: "tuple[]",
                                internalType: "struct PolicyData[]",
                                components: [
                                    {
                                        name: "policy",
                                        type: "address",
                                        internalType: "address"
                                    },
                                    {
                                        name: "initData",
                                        type: "bytes",
                                        internalType: "bytes"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        name: "actions",
                        type: "tuple[]",
                        internalType: "struct ActionData[]",
                        components: [
                            {
                                name: "actionTargetSelector",
                                type: "bytes4",
                                internalType: "bytes4"
                            },
                            {
                                name: "actionTarget",
                                type: "address",
                                internalType: "address"
                            },
                            {
                                name: "actionPolicies",
                                type: "tuple[]",
                                internalType: "struct PolicyData[]",
                                components: [
                                    {
                                        name: "policy",
                                        type: "address",
                                        internalType: "address"
                                    },
                                    {
                                        name: "initData",
                                        type: "bytes",
                                        internalType: "bytes"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        name: "permitERC4337Paymaster",
                        type: "bool",
                        internalType: "bool"
                    }
                ]
            }
        ],
        outputs: [
            {
                name: "permissionIds",
                type: "bytes32[]",
                internalType: "PermissionId[]"
            }
        ],
        stateMutability: "nonpayable"
    },
    {
        type: "function",
        name: "enableUserOpPolicies",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "userOpPolicies",
                type: "tuple[]",
                internalType: "struct PolicyData[]",
                components: [
                    {
                        name: "policy",
                        type: "address",
                        internalType: "address"
                    },
                    {
                        name: "initData",
                        type: "bytes",
                        internalType: "bytes"
                    }
                ]
            }
        ],
        outputs: [],
        stateMutability: "nonpayable"
    },
    {
        type: "function",
        name: "getActionPolicies",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address"
            },
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "actionId",
                type: "bytes32",
                internalType: "ActionId"
            }
        ],
        outputs: [
            {
                name: "",
                type: "address[]",
                internalType: "address[]"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "getERC1271Policies",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address"
            },
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            }
        ],
        outputs: [
            {
                name: "",
                type: "address[]",
                internalType: "address[]"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "getEnabledActions",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address"
            },
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bytes32[]",
                internalType: "bytes32[]"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "getEnabledERC7739Content",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address"
            },
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            }
        ],
        outputs: [
            {
                name: "enabledERC7739ContentHashes",
                type: "tuple[]",
                internalType: "struct ERC7739ContextHashes[]",
                components: [
                    {
                        name: "appDomainSeparator",
                        type: "bytes32",
                        internalType: "bytes32"
                    },
                    {
                        name: "contentNameHashes",
                        type: "bytes32[]",
                        internalType: "bytes32[]"
                    }
                ]
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "getNonce",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "account",
                type: "address",
                internalType: "address"
            }
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "getPermissionIDs",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address"
            }
        ],
        outputs: [
            {
                name: "permissionIds",
                type: "bytes32[]",
                internalType: "PermissionId[]"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "getPermissionId",
        inputs: [
            {
                name: "session",
                type: "tuple",
                internalType: "struct Session",
                components: [
                    {
                        name: "sessionValidator",
                        type: "address",
                        internalType: "contract ISessionValidator"
                    },
                    {
                        name: "sessionValidatorInitData",
                        type: "bytes",
                        internalType: "bytes"
                    },
                    {
                        name: "salt",
                        type: "bytes32",
                        internalType: "bytes32"
                    },
                    {
                        name: "userOpPolicies",
                        type: "tuple[]",
                        internalType: "struct PolicyData[]",
                        components: [
                            {
                                name: "policy",
                                type: "address",
                                internalType: "address"
                            },
                            {
                                name: "initData",
                                type: "bytes",
                                internalType: "bytes"
                            }
                        ]
                    },
                    {
                        name: "erc7739Policies",
                        type: "tuple",
                        internalType: "struct ERC7739Data",
                        components: [
                            {
                                name: "allowedERC7739Content",
                                type: "tuple[]",
                                internalType: "struct ERC7739Context[]",
                                components: [
                                    {
                                        name: "appDomainSeparator",
                                        type: "bytes32",
                                        internalType: "bytes32"
                                    },
                                    {
                                        name: "contentName",
                                        type: "string[]",
                                        internalType: "string[]"
                                    }
                                ]
                            },
                            {
                                name: "erc1271Policies",
                                type: "tuple[]",
                                internalType: "struct PolicyData[]",
                                components: [
                                    {
                                        name: "policy",
                                        type: "address",
                                        internalType: "address"
                                    },
                                    {
                                        name: "initData",
                                        type: "bytes",
                                        internalType: "bytes"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        name: "actions",
                        type: "tuple[]",
                        internalType: "struct ActionData[]",
                        components: [
                            {
                                name: "actionTargetSelector",
                                type: "bytes4",
                                internalType: "bytes4"
                            },
                            {
                                name: "actionTarget",
                                type: "address",
                                internalType: "address"
                            },
                            {
                                name: "actionPolicies",
                                type: "tuple[]",
                                internalType: "struct PolicyData[]",
                                components: [
                                    {
                                        name: "policy",
                                        type: "address",
                                        internalType: "address"
                                    },
                                    {
                                        name: "initData",
                                        type: "bytes",
                                        internalType: "bytes"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        name: "permitERC4337Paymaster",
                        type: "bool",
                        internalType: "bool"
                    }
                ]
            }
        ],
        outputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            }
        ],
        stateMutability: "pure"
    },
    {
        type: "function",
        name: "getSessionDigest",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "account",
                type: "address",
                internalType: "address"
            },
            {
                name: "data",
                type: "tuple",
                internalType: "struct Session",
                components: [
                    {
                        name: "sessionValidator",
                        type: "address",
                        internalType: "contract ISessionValidator"
                    },
                    {
                        name: "sessionValidatorInitData",
                        type: "bytes",
                        internalType: "bytes"
                    },
                    {
                        name: "salt",
                        type: "bytes32",
                        internalType: "bytes32"
                    },
                    {
                        name: "userOpPolicies",
                        type: "tuple[]",
                        internalType: "struct PolicyData[]",
                        components: [
                            {
                                name: "policy",
                                type: "address",
                                internalType: "address"
                            },
                            {
                                name: "initData",
                                type: "bytes",
                                internalType: "bytes"
                            }
                        ]
                    },
                    {
                        name: "erc7739Policies",
                        type: "tuple",
                        internalType: "struct ERC7739Data",
                        components: [
                            {
                                name: "allowedERC7739Content",
                                type: "tuple[]",
                                internalType: "struct ERC7739Context[]",
                                components: [
                                    {
                                        name: "appDomainSeparator",
                                        type: "bytes32",
                                        internalType: "bytes32"
                                    },
                                    {
                                        name: "contentName",
                                        type: "string[]",
                                        internalType: "string[]"
                                    }
                                ]
                            },
                            {
                                name: "erc1271Policies",
                                type: "tuple[]",
                                internalType: "struct PolicyData[]",
                                components: [
                                    {
                                        name: "policy",
                                        type: "address",
                                        internalType: "address"
                                    },
                                    {
                                        name: "initData",
                                        type: "bytes",
                                        internalType: "bytes"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        name: "actions",
                        type: "tuple[]",
                        internalType: "struct ActionData[]",
                        components: [
                            {
                                name: "actionTargetSelector",
                                type: "bytes4",
                                internalType: "bytes4"
                            },
                            {
                                name: "actionTarget",
                                type: "address",
                                internalType: "address"
                            },
                            {
                                name: "actionPolicies",
                                type: "tuple[]",
                                internalType: "struct PolicyData[]",
                                components: [
                                    {
                                        name: "policy",
                                        type: "address",
                                        internalType: "address"
                                    },
                                    {
                                        name: "initData",
                                        type: "bytes",
                                        internalType: "bytes"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        name: "permitERC4337Paymaster",
                        type: "bool",
                        internalType: "bool"
                    }
                ]
            },
            {
                name: "mode",
                type: "uint8",
                internalType: "enum SmartSessionMode"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bytes32",
                internalType: "bytes32"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "getSessionValidatorAndConfig",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address"
            },
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            }
        ],
        outputs: [
            {
                name: "sessionValidator",
                type: "address",
                internalType: "address"
            },
            {
                name: "sessionValidatorData",
                type: "bytes",
                internalType: "bytes"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "getUserOpPolicies",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address"
            },
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            }
        ],
        outputs: [
            {
                name: "",
                type: "address[]",
                internalType: "address[]"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "isActionIdEnabled",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address"
            },
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "actionId",
                type: "bytes32",
                internalType: "ActionId"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "isActionPolicyEnabled",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address"
            },
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "actionId",
                type: "bytes32",
                internalType: "ActionId"
            },
            {
                name: "policy",
                type: "address",
                internalType: "address"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "isERC1271PolicyEnabled",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address"
            },
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "policy",
                type: "address",
                internalType: "address"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "isERC7739ContentEnabled",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address"
            },
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "appDomainSeparator",
                type: "bytes32",
                internalType: "bytes32"
            },
            {
                name: "content",
                type: "string",
                internalType: "string"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "isISessionValidatorSet",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "account",
                type: "address",
                internalType: "address"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "isInitialized",
        inputs: [
            {
                name: "smartAccount",
                type: "address",
                internalType: "address"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "isModuleType",
        inputs: [
            {
                name: "typeID",
                type: "uint256",
                internalType: "uint256"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool"
            }
        ],
        stateMutability: "pure"
    },
    {
        type: "function",
        name: "isPermissionEnabled",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "account",
                type: "address",
                internalType: "address"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "isUserOpPolicyEnabled",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address"
            },
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "policy",
                type: "address",
                internalType: "address"
            }
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "isValidSignatureWithSender",
        inputs: [
            {
                name: "sender",
                type: "address",
                internalType: "address"
            },
            {
                name: "hash",
                type: "bytes32",
                internalType: "bytes32"
            },
            {
                name: "signature",
                type: "bytes",
                internalType: "bytes"
            }
        ],
        outputs: [
            {
                name: "result",
                type: "bytes4",
                internalType: "bytes4"
            }
        ],
        stateMutability: "view"
    },
    {
        type: "function",
        name: "onInstall",
        inputs: [
            {
                name: "data",
                type: "bytes",
                internalType: "bytes"
            }
        ],
        outputs: [],
        stateMutability: "nonpayable"
    },
    {
        type: "function",
        name: "onUninstall",
        inputs: [
            {
                name: "",
                type: "bytes",
                internalType: "bytes"
            }
        ],
        outputs: [],
        stateMutability: "nonpayable"
    },
    {
        type: "function",
        name: "removeSession",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            }
        ],
        outputs: [],
        stateMutability: "nonpayable"
    },
    {
        type: "function",
        name: "revokeEnableSignature",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            }
        ],
        outputs: [],
        stateMutability: "nonpayable"
    },
    {
        type: "function",
        name: "setpermitERC4337Paymaster",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "enabled",
                type: "bool",
                internalType: "bool"
            }
        ],
        outputs: [],
        stateMutability: "nonpayable"
    },
    {
        type: "function",
        name: "validateUserOp",
        inputs: [
            {
                name: "userOp",
                type: "tuple",
                internalType: "struct PackedUserOperation",
                components: [
                    {
                        name: "sender",
                        type: "address",
                        internalType: "address"
                    },
                    {
                        name: "nonce",
                        type: "uint256",
                        internalType: "uint256"
                    },
                    {
                        name: "initCode",
                        type: "bytes",
                        internalType: "bytes"
                    },
                    {
                        name: "callData",
                        type: "bytes",
                        internalType: "bytes"
                    },
                    {
                        name: "accountGasLimits",
                        type: "bytes32",
                        internalType: "bytes32"
                    },
                    {
                        name: "preVerificationGas",
                        type: "uint256",
                        internalType: "uint256"
                    },
                    {
                        name: "gasFees",
                        type: "bytes32",
                        internalType: "bytes32"
                    },
                    {
                        name: "paymasterAndData",
                        type: "bytes",
                        internalType: "bytes"
                    },
                    {
                        name: "signature",
                        type: "bytes",
                        internalType: "bytes"
                    }
                ]
            },
            {
                name: "userOpHash",
                type: "bytes32",
                internalType: "bytes32"
            }
        ],
        outputs: [
            {
                name: "vd",
                type: "uint256",
                internalType: "ValidationData"
            }
        ],
        stateMutability: "nonpayable"
    },
    {
        type: "event",
        name: "ActionIdDisabled",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                indexed: false,
                internalType: "PermissionId"
            },
            {
                name: "actionId",
                type: "bytes32",
                indexed: false,
                internalType: "ActionId"
            },
            {
                name: "smartAccount",
                type: "address",
                indexed: false,
                internalType: "address"
            }
        ],
        anonymous: false
    },
    {
        type: "event",
        name: "NonceIterated",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                indexed: false,
                internalType: "PermissionId"
            },
            {
                name: "account",
                type: "address",
                indexed: false,
                internalType: "address"
            },
            {
                name: "newValue",
                type: "uint256",
                indexed: false,
                internalType: "uint256"
            }
        ],
        anonymous: false
    },
    {
        type: "event",
        name: "PermissionIdpermitERC4337Paymaster",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                indexed: false,
                internalType: "PermissionId"
            },
            {
                name: "smartAccount",
                type: "address",
                indexed: false,
                internalType: "address"
            },
            {
                name: "enabled",
                type: "bool",
                indexed: false,
                internalType: "bool"
            }
        ],
        anonymous: false
    },
    {
        type: "event",
        name: "PolicyDisabled",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                indexed: false,
                internalType: "PermissionId"
            },
            {
                name: "policyType",
                type: "uint8",
                indexed: false,
                internalType: "enum PolicyType"
            },
            {
                name: "policy",
                type: "address",
                indexed: false,
                internalType: "address"
            },
            {
                name: "smartAccount",
                type: "address",
                indexed: false,
                internalType: "address"
            }
        ],
        anonymous: false
    },
    {
        type: "event",
        name: "PolicyEnabled",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                indexed: false,
                internalType: "PermissionId"
            },
            {
                name: "policyType",
                type: "uint8",
                indexed: false,
                internalType: "enum PolicyType"
            },
            {
                name: "policy",
                type: "address",
                indexed: false,
                internalType: "address"
            },
            {
                name: "smartAccount",
                type: "address",
                indexed: false,
                internalType: "address"
            }
        ],
        anonymous: false
    },
    {
        type: "event",
        name: "SessionCreated",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                indexed: false,
                internalType: "PermissionId"
            },
            {
                name: "account",
                type: "address",
                indexed: false,
                internalType: "address"
            }
        ],
        anonymous: false
    },
    {
        type: "event",
        name: "SessionRemoved",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                indexed: false,
                internalType: "PermissionId"
            },
            {
                name: "smartAccount",
                type: "address",
                indexed: false,
                internalType: "address"
            }
        ],
        anonymous: false
    },
    {
        type: "event",
        name: "SessionValidatorDisabled",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                indexed: false,
                internalType: "PermissionId"
            },
            {
                name: "sessionValidator",
                type: "address",
                indexed: false,
                internalType: "address"
            },
            {
                name: "smartAccount",
                type: "address",
                indexed: false,
                internalType: "address"
            }
        ],
        anonymous: false
    },
    {
        type: "event",
        name: "SessionValidatorEnabled",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                indexed: false,
                internalType: "PermissionId"
            },
            {
                name: "sessionValidator",
                type: "address",
                indexed: false,
                internalType: "address"
            },
            {
                name: "smartAccount",
                type: "address",
                indexed: false,
                internalType: "address"
            }
        ],
        anonymous: false
    },
    {
        type: "error",
        name: "AssociatedArray_OutOfBounds",
        inputs: [
            {
                name: "index",
                type: "uint256",
                internalType: "uint256"
            }
        ]
    },
    {
        type: "error",
        name: "ChainIdMismatch",
        inputs: [
            {
                name: "providedChainId",
                type: "uint64",
                internalType: "uint64"
            }
        ]
    },
    {
        type: "error",
        name: "ChainIdMismatch",
        inputs: [
            {
                name: "providedChainId",
                type: "uint64",
                internalType: "uint64"
            }
        ]
    },
    {
        type: "error",
        name: "ForbiddenValidationData",
        inputs: []
    },
    {
        type: "error",
        name: "HashIndexOutOfBounds",
        inputs: [
            {
                name: "index",
                type: "uint256",
                internalType: "uint256"
            }
        ]
    },
    {
        type: "error",
        name: "HashMismatch",
        inputs: [
            {
                name: "providedHash",
                type: "bytes32",
                internalType: "bytes32"
            },
            {
                name: "computedHash",
                type: "bytes32",
                internalType: "bytes32"
            }
        ]
    },
    {
        type: "error",
        name: "HashMismatch",
        inputs: [
            {
                name: "providedHash",
                type: "bytes32",
                internalType: "bytes32"
            },
            {
                name: "computedHash",
                type: "bytes32",
                internalType: "bytes32"
            }
        ]
    },
    {
        type: "error",
        name: "InvalidActionId",
        inputs: []
    },
    {
        type: "error",
        name: "InvalidCallTarget",
        inputs: []
    },
    {
        type: "error",
        name: "InvalidData",
        inputs: []
    },
    {
        type: "error",
        name: "InvalidEnableSignature",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address"
            },
            {
                name: "hash",
                type: "bytes32",
                internalType: "bytes32"
            }
        ]
    },
    {
        type: "error",
        name: "InvalidISessionValidator",
        inputs: [
            {
                name: "sessionValidator",
                type: "address",
                internalType: "contract ISessionValidator"
            }
        ]
    },
    {
        type: "error",
        name: "InvalidMode",
        inputs: []
    },
    {
        type: "error",
        name: "InvalidPermissionId",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            }
        ]
    },
    {
        type: "error",
        name: "InvalidSelfCall",
        inputs: []
    },
    {
        type: "error",
        name: "InvalidSession",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            }
        ]
    },
    {
        type: "error",
        name: "InvalidSessionKeySignature",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "sessionValidator",
                type: "address",
                internalType: "address"
            },
            {
                name: "account",
                type: "address",
                internalType: "address"
            },
            {
                name: "userOpHash",
                type: "bytes32",
                internalType: "bytes32"
            }
        ]
    },
    {
        type: "error",
        name: "InvalidTarget",
        inputs: []
    },
    {
        type: "error",
        name: "InvalidUserOpSender",
        inputs: [
            {
                name: "sender",
                type: "address",
                internalType: "address"
            }
        ]
    },
    {
        type: "error",
        name: "NoExecutionsInBatch",
        inputs: []
    },
    {
        type: "error",
        name: "NoPoliciesSet",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            }
        ]
    },
    {
        type: "error",
        name: "PartlyEnabledActions",
        inputs: []
    },
    {
        type: "error",
        name: "PartlyEnabledPolicies",
        inputs: []
    },
    {
        type: "error",
        name: "PaymasterValidationNotEnabled",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            }
        ]
    },
    {
        type: "error",
        name: "PolicyViolation",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "policy",
                type: "address",
                internalType: "address"
            }
        ]
    },
    {
        type: "error",
        name: "SignerNotFound",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "account",
                type: "address",
                internalType: "address"
            }
        ]
    },
    {
        type: "error",
        name: "SignerNotFound",
        inputs: [
            {
                name: "permissionId",
                type: "bytes32",
                internalType: "PermissionId"
            },
            {
                name: "account",
                type: "address",
                internalType: "address"
            }
        ]
    },
    {
        type: "error",
        name: "SmartSessionModuleAlreadyInstalled",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address"
            }
        ]
    },
    {
        type: "error",
        name: "UnsupportedExecutionType",
        inputs: []
    },
    {
        type: "error",
        name: "UnsupportedPolicy",
        inputs: [
            {
                name: "policy",
                type: "address",
                internalType: "address"
            }
        ]
    },
    {
        type: "error",
        name: "UnsupportedSmartSessionMode",
        inputs: [
            {
                name: "mode",
                type: "uint8",
                internalType: "enum SmartSessionMode"
            }
        ]
    }
]; //# sourceMappingURL=SmartSessionAbi.js.map
}}),
"[project]/node_modules/@biconomy/abstractjs/dist/_esm/account/utils/AccountNotFound.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AccountNotFoundError": (()=>AccountNotFoundError)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/base.js [app-client] (ecmascript)");
;
class AccountNotFoundError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseError"] {
    constructor({ docsPath } = {}){
        super([
            "Could not find an Account to execute with this Action.",
            "Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client."
        ].join("\n"), {
            docsPath,
            docsSlug: "account",
            name: "AccountNotFoundError"
        });
    }
} //# sourceMappingURL=AccountNotFound.js.map
}}),
"[project]/node_modules/viem/_esm/accounts/utils/parseAccount.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "parseAccount": (()=>parseAccount)
});
function parseAccount(account) {
    if (typeof account === 'string') return {
        address: account,
        type: 'json-rpc'
    };
    return account;
} //# sourceMappingURL=parseAccount.js.map
}}),
"[project]/node_modules/@biconomy/abstractjs/dist/_esm/account/utils/Constants.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ACCOUNT_MODES": (()=>ACCOUNT_MODES),
    "ADDRESS_RESOLVER_ADDRESS": (()=>ADDRESS_RESOLVER_ADDRESS),
    "ADDRESS_ZERO": (()=>ADDRESS_ZERO),
    "BICONOMY_TOKEN_PAYMASTER": (()=>BICONOMY_TOKEN_PAYMASTER),
    "CALLTYPE_BATCH": (()=>CALLTYPE_BATCH),
    "CALLTYPE_SINGLE": (()=>CALLTYPE_SINGLE),
    "DEFAULT_BICONOMY_IMPLEMENTATION_ADDRESS": (()=>DEFAULT_BICONOMY_IMPLEMENTATION_ADDRESS),
    "DefaultGasLimit": (()=>DefaultGasLimit),
    "EIP1559_UNSUPPORTED_NETWORKS": (()=>EIP1559_UNSUPPORTED_NETWORKS),
    "ERC20_ABI": (()=>ERC20_ABI),
    "ERROR_MESSAGES": (()=>ERROR_MESSAGES),
    "EXECTYPE_DEFAULT": (()=>EXECTYPE_DEFAULT),
    "EXECTYPE_DELEGATE": (()=>EXECTYPE_DELEGATE),
    "EXECTYPE_TRY": (()=>EXECTYPE_TRY),
    "EXECUTE_BATCH": (()=>EXECUTE_BATCH),
    "EXECUTE_SINGLE": (()=>EXECUTE_SINGLE),
    "GENERIC_FALLBACK_SELECTOR": (()=>GENERIC_FALLBACK_SELECTOR),
    "MAGIC_BYTES": (()=>MAGIC_BYTES),
    "MOCK_MULTI_MODULE_ADDRESS": (()=>MOCK_MULTI_MODULE_ADDRESS),
    "MODE_DEFAULT": (()=>MODE_DEFAULT),
    "MODE_MODULE_ENABLE": (()=>MODE_MODULE_ENABLE),
    "MODE_PAYLOAD": (()=>MODE_PAYLOAD),
    "MODE_VALIDATION": (()=>MODE_VALIDATION),
    "MODULE_ENABLE_MODE_TYPE_HASH": (()=>MODULE_ENABLE_MODE_TYPE_HASH),
    "MODULE_TYPE_MULTI": (()=>MODULE_TYPE_MULTI),
    "NATIVE_TOKEN_ALIAS": (()=>NATIVE_TOKEN_ALIAS),
    "NEXUS_DOMAIN_NAME": (()=>NEXUS_DOMAIN_NAME),
    "NEXUS_DOMAIN_TYPEHASH": (()=>NEXUS_DOMAIN_TYPEHASH),
    "NEXUS_DOMAIN_VERSION": (()=>NEXUS_DOMAIN_VERSION),
    "PARENT_TYPEHASH": (()=>PARENT_TYPEHASH),
    "PROXY_CREATION_CODE": (()=>PROXY_CREATION_CODE),
    "SENTINEL_ADDRESS": (()=>SENTINEL_ADDRESS),
    "UNUSED": (()=>UNUSED),
    "eip1271MagicValue": (()=>eip1271MagicValue)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/hash/keccak256.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/concat.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/pad.js [app-client] (ecmascript)");
;
const ADDRESS_ZERO = "0x0000000000000000000000000000000000000000";
const MAGIC_BYTES = "0x6492649264926492649264926492649264926492649264926492649264926492";
const BICONOMY_TOKEN_PAYMASTER = "0x00000000301515A5410e0d768aF4f53c416edf19";
const DEFAULT_BICONOMY_IMPLEMENTATION_ADDRESS = "0x8EBDcA5ce92f9aBF1D1ab21de24068B2a2EaF808";
const EIP1559_UNSUPPORTED_NETWORKS = [
    97,
    56,
    1442,
    1101
];
const PROXY_CREATION_CODE = "0x603d3d8160223d3973600966Ae45ad5BE4be08a70AD99e9cF41e6d6884B06F5155f3363d3d373d3d363d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545af43d6000803e6038573d6000fd5b3d6000f3";
const ADDRESS_RESOLVER_ADDRESS = "0x00000E81673606e07fC79CE5F1b3B26957844468";
const DefaultGasLimit = {
    callGasLimit: 800000,
    verificationGasLimit: 1000000,
    preVerificationGas: 100000
};
const ERROR_MESSAGES = {
    KEY_GEN_DATA_NOT_FOUND: "Key generation data is not available",
    SIGNATURE_NOT_FOUND: "Signature not found from Dan",
    FAILED_COMPUTE_ACCOUNT_ADDRESS: "Failed to compute account address. Possible reasons:\n" + "- The factory contract does not have the function 'computeAccountAddress'\n" + "- The parameters passed to the factory contract function may be invalid\n" + "- The provided factory address is not a contract",
    SIGNER_REQUIRED_FOR_CREATE_SESSION: "Signer is required",
    ACCOUNT_REQUIRED: "Account is required",
    MODULE_NOT_ACTIVATED: "Module not activated",
    SMART_SESSION_DATA_REQUIRED: "Data is required for using smart session module",
    MISSING_ACCOUNT_CONTRACT: 'The contract function "computeAccountAddress" returned no data ("0x")',
    INVALID_HEX: "Invalid hex, if you are targeting a number, consider using pad() and toHex() from viem: pad(toHex(BigInt(2000))",
    CONTRACT_NOT_DEPLOYED: "Address is not a contract. Make sure that the contract you are trying to use is deployed.",
    ACCOUNT_NOT_DEPLOYED: "Account has not yet been deployed",
    ACCOUNT_ALREADY_DEPLOYED: "Account already deployed",
    NO_NATIVE_TOKEN_BALANCE_DURING_DEPLOY: "Smart Account does not have sufficient funds to execute the User Operation.",
    SPENDER_REQUIRED: "spender is required for ERC20 mode",
    NO_FEE_QUOTE: "FeeQuote was not provided, please call smartAccount.getTokenFees() to get feeQuote",
    FAILED_FEE_QUOTE_FETCH: "Failed to fetch fee quote",
    CHAIN_NOT_FOUND: "Chain not found",
    NO_RECIPIENT: "Recipient is required",
    NATIVE_TOKEN_WITHDRAWAL_WITHOUT_AMOUNT: "'Amount' is required for withdrawal of native token without using a paymaster",
    MISSING_RPC_URL: "rpcUrl is required for this signer type, please provide it in the config",
    INVALID_SESSION_INDEXES: "Session indexes and transactions must be of the same length and correspond to each other",
    SIGNER_REQUIRED: "Signer is required for creating a smart account",
    UNKNOW_SESSION_ARGUMENTS: "You have not provided the necessary information to find and use a session"
};
const NATIVE_TOKEN_ALIAS = "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE";
const ERC20_ABI = [
    "function transfer(address to, uint256 value) external returns (bool)",
    "function transferFrom(address from, address to, uint256 value) external returns (bool)",
    "function approve(address spender, uint256 value) external returns (bool)",
    "function allowance(address owner, address spender) external view returns (uint256)",
    "function balanceOf(address owner) external view returns (uint256)",
    "function decimals() external view returns (uint8)"
];
const CALLTYPE_SINGLE = "0x00"; // 1 byte
const CALLTYPE_BATCH = "0x01"; // 1 byte
const EXECTYPE_DEFAULT = "0x00"; // 1 byte
const EXECTYPE_TRY = "0x01"; // 1 byte
const EXECTYPE_DELEGATE = "0xFF"; // 1 byte
const MODE_DEFAULT = "0x00000000"; // 4 bytes
const UNUSED = "0x00000000"; // 4 bytes
const MODE_PAYLOAD = "0x00000000000000000000000000000000000000000000"; // 22 bytes
const GENERIC_FALLBACK_SELECTOR = "0xcb5baf0f";
const SENTINEL_ADDRESS = "0x0000000000000000000000000000000000000001";
const MODE_VALIDATION = "0x00";
const MODE_MODULE_ENABLE = "0x01";
const MODULE_ENABLE_MODE_TYPE_HASH = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$keccak256$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["keccak256"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])("ModuleEnableMode(address module, bytes32 initDataHash)"));
const MOCK_MULTI_MODULE_ADDRESS = "0x9C992f91E7Cd4697B81E137007f446E826b8378b";
const MODULE_TYPE_MULTI = 0;
const NEXUS_DOMAIN_NAME = "nexus";
const NEXUS_DOMAIN_VERSION = "1.0.1";
const NEXUS_DOMAIN_TYPEHASH = "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)";
const PARENT_TYPEHASH = "TypedDataSign(Contents contents,bytes1 fields,string name,string version,uint256 chainId,address verifyingContract,bytes32 salt,uint256[] extensions)Contents(bytes32 stuff)";
const eip1271MagicValue = "0x1626ba7e";
const EXECUTE_SINGLE = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concat"])([
    CALLTYPE_SINGLE,
    EXECTYPE_DEFAULT,
    MODE_DEFAULT,
    UNUSED,
    MODE_PAYLOAD
]);
const EXECUTE_BATCH = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concat"])([
    CALLTYPE_BATCH,
    EXECTYPE_DEFAULT,
    MODE_DEFAULT,
    UNUSED,
    MODE_PAYLOAD
]);
const ACCOUNT_MODES = {
    DEFAULT_SINGLE: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concat"])([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(EXECTYPE_DEFAULT, {
            size: 1
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(CALLTYPE_SINGLE, {
            size: 1
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(UNUSED, {
            size: 4
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(MODE_DEFAULT, {
            size: 4
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(MODE_PAYLOAD, {
            size: 22
        })
    ]),
    DEFAULT_BATCH: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concat"])([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(EXECTYPE_DEFAULT, {
            size: 1
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(CALLTYPE_BATCH, {
            size: 1
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(UNUSED, {
            size: 4
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(MODE_DEFAULT, {
            size: 4
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(MODE_PAYLOAD, {
            size: 22
        })
    ]),
    TRY_BATCH: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concat"])([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(EXECTYPE_TRY, {
            size: 1
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(CALLTYPE_BATCH, {
            size: 1
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(UNUSED, {
            size: 4
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(MODE_DEFAULT, {
            size: 4
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(MODE_PAYLOAD, {
            size: 22
        })
    ]),
    TRY_SINGLE: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concat"])([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(EXECTYPE_TRY, {
            size: 1
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(CALLTYPE_SINGLE, {
            size: 1
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(UNUSED, {
            size: 4
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(MODE_DEFAULT, {
            size: 4
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(MODE_PAYLOAD, {
            size: 22
        })
    ]),
    DELEGATE_SINGLE: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$concat$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["concat"])([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(EXECTYPE_DELEGATE, {
            size: 1
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(CALLTYPE_SINGLE, {
            size: 1
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(UNUSED, {
            size: 4
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(MODE_DEFAULT, {
            size: 4
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(MODE_PAYLOAD, {
            size: 22
        })
    ])
}; //# sourceMappingURL=Constants.js.map
}}),
"[project]/node_modules/@biconomy/abstractjs/dist/_esm/modules/smartSessionsValidator/decorators/preparePermission.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ONE_YEAR_FROM_NOW_IN_SECONDS": (()=>ONE_YEAR_FROM_NOW_IN_SECONDS),
    "getPermissionAction": (()=>getPermissionAction),
    "preparePermission": (()=>preparePermission)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$modules$2f$smartSessionsValidator$2f$Helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@biconomy/abstractjs/dist/_esm/modules/smartSessionsValidator/Helpers.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$universal$2d$action$2d$policy$2f$installation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/universal-action-policy/installation.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$sudo$2d$policy$2f$installation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/sudo-policy/installation.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$value$2d$limit$2d$policy$2f$installation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/value-limit-policy/installation.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$usage$2d$limit$2d$policy$2f$installation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/usage-limit-policy/installation.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$spending$2d$limits$2d$policy$2f$installation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/policies/spending-limits-policy/installation.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/ownable-validator/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$usage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/ownable-validator/usage.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$usage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/usage.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/encodeFunctionData.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$constants$2f$abi$2f$SmartSessionAbi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@biconomy/abstractjs/dist/_esm/constants/abi/SmartSessionAbi.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/smart-sessions/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$account$2f$utils$2f$AccountNotFound$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@biconomy/abstractjs/dist/_esm/account/utils/AccountNotFound.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$accounts$2f$utils$2f$parseAccount$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/accounts/utils/parseAccount.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$account$2f$utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@biconomy/abstractjs/dist/_esm/account/utils/Constants.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
const ONE_YEAR_FROM_NOW_IN_SECONDS = Date.now() + 60 * 60 * 24 * 365;
const getPermissionAction = async ({ chainId, sessionRequestedInfo, withPaymaster = false })=>{
    const sessions = [];
    const permissionIds = [];
    const resolvedPolicyInfo2ActionData = (actionPolicyInfo)=>{
        const policyData = [];
        // create time frame policy here..
        // const timeFramePolicyData = getTimeFramePolicy({
        //   validUntil: actionPolicyInfo.validUntil ?? ONE_YEAR_FROM_NOW_IN_SECONDS,
        //   validAfter: actionPolicyInfo.validAfter ?? 0
        // })
        // policyData.push(timeFramePolicyData)
        const hasValidRules = actionPolicyInfo?.rules && actionPolicyInfo?.rules?.length > 0;
        if (hasValidRules) {
            const actionConfig = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$modules$2f$smartSessionsValidator$2f$Helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createActionConfig"])(actionPolicyInfo.rules ?? [], actionPolicyInfo.valueLimit);
            // create uni action policy here..
            const uniActionPolicyInfo = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$universal$2d$action$2d$policy$2f$installation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUniversalActionPolicy"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$modules$2f$smartSessionsValidator$2f$Helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toActionConfig"])(actionConfig));
            policyData.push(uniActionPolicyInfo);
        }
        // create sudo policy here..
        if (actionPolicyInfo.sudo || !hasValidRules) {
            const sudoPolicy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$sudo$2d$policy$2f$installation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getSudoPolicy"])();
            policyData.push(sudoPolicy);
        }
        // create value limit policy here..
        if (actionPolicyInfo.valueLimit) {
            const valueLimitPolicy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$value$2d$limit$2d$policy$2f$installation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getValueLimitPolicy"])({
                limit: actionPolicyInfo.valueLimit
            });
            policyData.push(valueLimitPolicy);
        }
        // create usage limit policy here..
        if (actionPolicyInfo.usageLimit) {
            const usageLimitPolicy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$usage$2d$limit$2d$policy$2f$installation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getUsageLimitPolicy"])({
                limit: actionPolicyInfo.usageLimit
            });
            policyData.push(usageLimitPolicy);
        }
        // create token spending limit policy here..
        if (actionPolicyInfo.tokenLimits?.length) {
            const spendingLimitPolicy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$spending$2d$limits$2d$policy$2f$installation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getSpendingLimitsPolicy"])(actionPolicyInfo.tokenLimits);
            policyData.push(spendingLimitPolicy);
        }
        // Create ActionData
        const actionPolicy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$modules$2f$smartSessionsValidator$2f$Helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createActionData"])(actionPolicyInfo.contractAddress, actionPolicyInfo.functionSelector, policyData);
        return actionPolicy;
    };
    // Start populating the session for each param provided
    for (const sessionInfo of sessionRequestedInfo){
        const actionPolicies = [];
        for (const actionPolicyInfo of sessionInfo.actionPoliciesInfo ?? []){
            if (actionPolicyInfo.abi) {
                // Resolve the abi to multiple function selectors...
                const resolvedPolicyInfos = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$modules$2f$smartSessionsValidator$2f$Helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["abiToPoliciesInfo"])(actionPolicyInfo);
                const actionPolicies_ = resolvedPolicyInfos.map(resolvedPolicyInfo2ActionData);
                actionPolicies.push(...actionPolicies_);
            } else {
                const actionPolicy = resolvedPolicyInfo2ActionData(actionPolicyInfo);
                actionPolicies.push(actionPolicy);
            }
        }
        const userOpPolicies = withPaymaster ? [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$policies$2f$sudo$2d$policy$2f$installation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getSudoPolicy"])()
        ] : [];
        const session = {
            chainId: BigInt(chainId),
            permitERC4337Paymaster: withPaymaster,
            sessionValidator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OWNABLE_VALIDATOR_ADDRESS"],
            sessionValidatorInitData: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$usage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeValidationData"])({
                threshold: 1,
                owners: [
                    sessionInfo.sessionKeyData
                ]
            }),
            salt: sessionInfo.salt ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$modules$2f$smartSessionsValidator$2f$Helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generateSalt"])(),
            userOpPolicies,
            actions: actionPolicies,
            erc7739Policies: {
                allowedERC7739Content: [],
                erc1271Policies: []
            }
        };
        const permissionId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$usage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPermissionId"])({
            session
        });
        // push permissionId to the array
        permissionIds.push(permissionId);
        // Push to sessions array
        sessions.push(session);
    }
    const preparePermissionData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeFunctionData"])({
        abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$constants$2f$abi$2f$SmartSessionAbi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SmartSessionAbi"],
        functionName: "enableSessions",
        args: [
            sessions
        ]
    });
    return {
        action: {
            target: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$smart$2d$sessions$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SMART_SESSIONS_ADDRESS"],
            value: BigInt(0),
            callData: preparePermissionData
        },
        permissionIds: permissionIds,
        sessions
    };
};
async function preparePermission(client, parameters) {
    const { publicClient: publicClient_ = client.account?.client, account: account_ = client.account, sessionRequestedInfo } = parameters;
    if (!account_) {
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$account$2f$utils$2f$AccountNotFound$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccountNotFoundError"]({
            docsPath: "/nexus-client/methods#sendtransaction"
        });
    }
    const account = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$accounts$2f$utils$2f$parseAccount$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseAccount"])(account_);
    if (!account || !account.address) {
        throw new Error("Account not found");
    }
    const withPaymaster = !!client?.paymaster;
    const chainId = publicClient_?.chain?.id;
    if (!chainId) {
        throw new Error(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$account$2f$utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ERROR_MESSAGES"].CHAIN_NOT_FOUND);
    }
    const defaultedSessionRequestedInfo = sessionRequestedInfo.map(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$modules$2f$smartSessionsValidator$2f$Helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyDefaults"]);
    const actionResponse = await getPermissionAction({
        chainId,
        sessionRequestedInfo: defaultedSessionRequestedInfo,
        withPaymaster
    });
    if (actionResponse instanceof Error) {
        throw actionResponse;
    }
    return actionResponse;
} //# sourceMappingURL=preparePermission.js.map
}}),
"[project]/node_modules/@biconomy/abstractjs/dist/_esm/modules/utils/Helpers.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "parseModule": (()=>parseModule),
    "parseReferenceValue": (()=>parseReferenceValue),
    "sanitizeSignature": (()=>sanitizeSignature)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$account$2f$utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@biconomy/abstractjs/dist/_esm/account/utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$isHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/isHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/data/pad.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toHex.js [app-client] (ecmascript)");
;
;
function parseReferenceValue(referenceValue) {
    let result;
    // Handle 20-byte Ethereum address
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$isHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isHex"])(referenceValue) && referenceValue.length === 42) {
        // Remove '0x' prefix, pad to 32 bytes (64 characters) on the left, then add '0x' prefix back
        result = `0x${"0".repeat(24)}${referenceValue.slice(2)}`;
    } else if (referenceValue?.raw) {
        result = referenceValue?.raw;
    } else if (typeof referenceValue === "bigint") {
        result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])(referenceValue), {
            size: 32
        });
    } else if (typeof referenceValue === "number") {
        result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])(BigInt(referenceValue)), {
            size: 32
        });
    } else if (typeof referenceValue === "boolean") {
        result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])(referenceValue), {
            size: 32
        });
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$isHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isHex"])(referenceValue)) {
        // review
        result = referenceValue;
    } else if (typeof referenceValue === "string") {
        result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])(referenceValue, {
            size: 32
        });
    } else {
        // (typeof referenceValue === "object")
        result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$pad$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pad"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])(referenceValue), {
            size: 32
        });
    }
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$data$2f$isHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isHex"])(result) || result.length !== 66) {
        throw new Error(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$account$2f$utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ERROR_MESSAGES"].INVALID_HEX);
    }
    return result;
}
function sanitizeSignature(signature) {
    let signature_ = signature;
    const potentiallyIncorrectV = Number.parseInt(signature_.slice(-2), 16);
    if (![
        27,
        28
    ].includes(potentiallyIncorrectV)) {
        const correctV = potentiallyIncorrectV + 27;
        signature_ = signature_.slice(0, -2) + correctV.toString(16);
    }
    if (signature.slice(0, 2) !== "0x") {
        signature_ = `0x${signature_}`;
    }
    return signature_;
}
const parseModule = (client)=>{
    const activeModule = client?.account?.getModule();
    if (!activeModule) {
        throw new Error(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$account$2f$utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ERROR_MESSAGES"].MODULE_NOT_ACTIVATED);
    }
    return activeModule;
}; //# sourceMappingURL=Helpers.js.map
}}),
"[project]/node_modules/@biconomy/abstractjs/dist/_esm/modules/smartSessionsValidator/Helpers.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MAX_RULES": (()=>MAX_RULES),
    "abiToPoliciesInfo": (()=>abiToPoliciesInfo),
    "applyDefaults": (()=>applyDefaults),
    "createActionConfig": (()=>createActionConfig),
    "createActionData": (()=>createActionData),
    "generateSalt": (()=>generateSalt),
    "getTrustedAttesters": (()=>getTrustedAttesters),
    "parse": (()=>parse),
    "stringify": (()=>stringify),
    "toActionConfig": (()=>toActionConfig)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$registry$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/registry/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$constants$2f$abi$2f$ERC7484RegistryAbi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@biconomy/abstractjs/dist/_esm/constants/abi/ERC7484RegistryAbi.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$toFunctionSelector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/hash/toFunctionSelector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toHex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toBytes.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$modules$2f$smartSessionsValidator$2f$decorators$2f$preparePermission$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@biconomy/abstractjs/dist/_esm/modules/smartSessionsValidator/decorators/preparePermission.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/ownable-validator/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$usage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@rhinestone/module-sdk/_esm/module/ownable-validator/usage.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$getAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/address/getAddress.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$modules$2f$utils$2f$Helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@biconomy/abstractjs/dist/_esm/modules/utils/Helpers.js [app-client] (ecmascript)");
;
;
;
;
;
const MAX_RULES = 16;
const generateSalt = ()=>{
    const randomBytes = new Uint8Array(32);
    crypto.getRandomValues(randomBytes);
    return `0x${Array.from(randomBytes, (byte)=>byte.toString(16).padStart(2, "0")).join("")}`;
};
const createActionConfig = (rules, valueLimit = 0n)=>({
        paramRules: {
            length: rules.length,
            rules: rules
        },
        valueLimitPerUse: valueLimit
    });
const applyDefaults = (sessionInfo)=>{
    const sessionKeyData = sessionInfo.sessionKeyData ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toBytes"])(sessionInfo.sessionPublicKey));
    const sessionPublicKey = sessionInfo.sessionPublicKey ?? sessionKeyData;
    return {
        ...sessionInfo,
        sessionKeyData,
        sessionPublicKey,
        sessionValidUntil: sessionInfo.sessionValidUntil ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$modules$2f$smartSessionsValidator$2f$decorators$2f$preparePermission$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ONE_YEAR_FROM_NOW_IN_SECONDS"],
        sessionValidAfter: sessionInfo.sessionValidAfter ?? 0,
        sessionValidator: sessionInfo.sessionValidator ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OWNABLE_VALIDATOR_ADDRESS"],
        sessionValidatorInitData: sessionInfo.sessionValidatorInitData ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$ownable$2d$validator$2f$usage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeValidationData"])({
            threshold: 1,
            owners: [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$address$2f$getAddress$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddress"])(sessionPublicKey)
            ]
        })
    };
};
const createActionData = (contractAddress, functionSelector, policies)=>{
    return {
        actionTarget: contractAddress,
        actionTargetSelector: typeof functionSelector === "string" ? functionSelector : functionSelector.name,
        actionPolicies: policies
    };
};
const toActionConfig = (config)=>{
    // Ensure we always have 16 rules, filling with default values if necessary
    const filledRules = [
        ...config.paramRules.rules
    ];
    // Fill the rest with default ParamRule if the length is less than 16
    while(filledRules.length < MAX_RULES){
        filledRules.push({
            condition: 0,
            offsetIndex: 0,
            isLimited: false,
            ref: "0x0000000000000000000000000000000000000000000000000000000000000000",
            usage: {
                limit: BigInt(0),
                used: BigInt(0) // Default used
            }
        });
    }
    return {
        valueLimitPerUse: BigInt(config.valueLimitPerUse),
        paramRules: {
            length: config.paramRules.length,
            rules: filledRules.map((rule)=>{
                const parsedRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$modules$2f$utils$2f$Helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseReferenceValue"])(rule.ref);
                return {
                    condition: rule.condition,
                    offset: rule.offsetIndex * 32,
                    isLimited: rule.isLimited,
                    ref: parsedRef,
                    usage: rule.usage
                };
            })
        }
    };
};
function stringify(obj) {
    return JSON.stringify(obj, (_, value)=>typeof value === "bigint" ? {
            __type: "bigint",
            value: value.toString()
        } : value);
}
function parse(data) {
    return JSON.parse(data, (_, value)=>{
        if (value && typeof value === "object" && value.__type === "bigint") {
            return BigInt(value.value);
        }
        return value;
    });
}
const getTrustedAttesters = async ({ accountAddress, client })=>{
    try {
        const attesters = await client.readContract({
            address: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$rhinestone$2f$module$2d$sdk$2f$_esm$2f$module$2f$registry$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["REGISTRY_ADDRESS"],
            abi: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$biconomy$2f$abstractjs$2f$dist$2f$_esm$2f$constants$2f$abi$2f$ERC7484RegistryAbi$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ERC7484RegistryAbi"],
            functionName: "findTrustedAttesters",
            args: [
                accountAddress
            ]
        });
        return attesters;
    } catch (err) {
        console.error(err);
        return [];
    }
};
const abiToPoliciesInfo = ({ abi, ...actionPolicyInfo })=>(abi ?? []).filter((item)=>item.type === "function").map((func)=>({
            ...actionPolicyInfo,
            functionSelector: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$hash$2f$toFunctionSelector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toFunctionSelector"])(func),
            rules: [] // Rules should not be available here because they should be custom per method, not used in a loop
        })); //# sourceMappingURL=Helpers.js.map
}}),
}]);

//# sourceMappingURL=node_modules_636037._.js.map